/* ===========================================================================================================
██████   ██████  ██████  ██████  ███████ ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██ ██
██████  ██    ██ ██████  ██   ██ █████   ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██      ██
██████   ██████  ██   ██ ██████  ███████ ██   ██ ███████
================================================================================================== */
$border-side: (
    "t": top,
    "r": right,
    "b": bottom,
    "l": left
);

$border-width: 5 !default;
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 0 through $border-width {
            .#{$size}-bd#{$i} {
                border: $i + px solid $gray-light2 !important;
            }
        }
        @for $i from 0 through $border-width {
            @each $side-name, $side in $border-side {
                @each $color-name, $color in $colors-primary {
                    .#{$size}-bd-#{$side-name}-#{$color-name}#{$i} {
                        border-#{$side}: $i + px $color solid !important;
                    }
                }
            }
        }
        @for $i from 0 through $border-width {
            @each $side-name, $side in $border-side {
                .#{$size}-bd-#{$side-name}#{$i} {
                    border-#{$side}: $i + px $gray-light2 solid !important;
                }
            }
        }
        @for $i from 0 through $border-width {
            @each $color-name, $color in $colors-primary {
                .#{$size}-bd-#{$color-name}#{$i} {
                    border: $i + px solid $color !important;
                }
            }
        }
        @each $color-name, $color in $colors-primary {
            .#{$size}-bd-#{$color-name} {
                border: 2px solid $color !important;
            }
        }
        @for $i from 0 through $border-width {
            .#{$size}-bd-gradient#{$i} {
                border-width      : $i + px;
                border-style      : solid;
                border-image      : linear-gradient(to right, $blue-light 0%, $green 100%);
                border-image-slice: 1;
                border-color      : inherit;
            }
        }
    }
}
$rounded-gradient-border-width: 2px;

.rounded-gradient-border,
.tabs.rounded-gradient-border .tabs-title.is-active a {
    position     : relative;
    background   : linear-gradient(to right, $blue-light 0%, $green 100%);
    border-radius: 100%;
    z-index      : 1;

    &:after {
        position         : absolute;
        display          : block;
        top              : $rounded-gradient-border-width;
        left             : $rounded-gradient-border-width;
        width            : calc(100% - #{$rounded-gradient-border-width}*2);
        height           : calc(100% - #{$rounded-gradient-border-width}*2);
        content          : "";
        background-color : inherit;
        background-repeat: no-repeat;
        background-size  : cover;
        border-radius    : 1000px;
        overflow         : hidden;
        z-index          : -1;
        transition       : $button-transition;
    }
}

.button.rounded-gradient-border:hover {
    &:after {
        background: unset;
    }
}

.tabs.rounded-gradient-border.bg-black .tabs-title.is-active a:after {
    background: black;
}
/* ----  End of BORDERS  --------------------------------------------------------------------- */
