@charset 'utf-8';
@import 'settings';
@import '../bower_components/foundation-sites/scss/foundation.scss';
@import '../bower_components/motion-ui/src/motion-ui.scss';
@include foundation-global-styles;
// @include foundation-grid;
@include foundation-flex-grid;
@include foundation-typography;
@include foundation-button;
@include foundation-card;
@include foundation-forms;
@include foundation-range-input;
@include foundation-accordion;
@include foundation-accordion-menu;
@include foundation-badge;
@include foundation-breadcrumbs;
@include foundation-button-group;
@include foundation-callout;
@include foundation-close-button;
@include foundation-menu;
// @include foundation-menu-icon;
@include foundation-drilldown-menu;
@include foundation-dropdown;
@include foundation-dropdown-menu;
@include foundation-flex-video;
@include foundation-label;
@include foundation-media-object;
@include foundation-off-canvas;
// @include foundation-orbit;
@include foundation-pagination;
@include foundation-progress-bar;
@include foundation-progress-element;
@include foundation-meter-element;
@include foundation-slider;
@include foundation-sticky;
@include foundation-reveal;
@include foundation-switch;
@include foundation-table;
@include foundation-tabs;
// @include foundation-thumbnail;
@include foundation-title-bar;
@include foundation-tooltip;
@include foundation-top-bar;
@include foundation-visibility-classes;
@include foundation-float-classes;
@include foundation-flex-classes;
@include motion-ui-transitions;
@include motion-ui-animations;

// =============================================================================================
// FONTS
// =============================================================================================
@import "../fonts/ProximaNovaFonts/ProximaNova.scss";
$icomoon-font-path: "../fonts/Cognizant-Icons-1.4-FONT/fonts";
@import "../fonts/Cognizant-Icons-1.4-FONT/style.scss";

// =============================================================================================
// PLUGINS
// =============================================================================================
// @import "../bower_components/plyr/src/scss/plyr.scss";
@import "../bower_components/slick-carousel/slick/slick-theme.scss";
@import "../bower_components/slick-carousel/slick/slick.scss";
@import "../bower_components/css-hamburgers/_sass/hamburgers/hamburgers.scss";
// @import "../bower_components/aos/src/sass/aos.scss";

// =============================================================================================
// PLUGIN STYLE OVERRIDES
// =============================================================================================
// @import "../_IMPORTED-ASSETS/animsition.scss";
// @import "../_IMPORTED-ASSETS/select2.scss";
/* ====================================================================================================
██████  ███████ ██████  ██    ██  ██████   ██████  ██ ███    ██  ██████
██   ██ ██      ██   ██ ██    ██ ██       ██       ██ ████   ██ ██
██   ██ █████   ██████  ██    ██ ██   ███ ██   ███ ██ ██ ██  ██ ██   ███
██   ██ ██      ██   ██ ██    ██ ██    ██ ██    ██ ██ ██  ██ ██ ██    ██
██████  ███████ ██████   ██████   ██████   ██████  ██ ██   ████  ██████
==================================================================================================== */
* {
    // background-color: rgba(0,255,0,0.1);
}
/* ----  End of DEBUGGING  -------------------------------------------------------------------------- */
/*=============================================================================================

███    ███  ██████  ████████ ██  ██████  ███    ██     ██    ██ ██
████  ████ ██    ██    ██    ██ ██    ██ ████   ██     ██    ██ ██
██ ████ ██ ██    ██    ██    ██ ██    ██ ██ ██  ██     ██    ██ ██
██  ██  ██ ██    ██    ██    ██ ██    ██ ██  ██ ██     ██    ██ ██
██      ██  ██████     ██    ██  ██████  ██   ████      ██████  ██

=============================================================================================*/
// $motion-ui-easings: ( default: bounce-in, linear: linear, ease: ease, ease-in: ease-in, ease-out: ease-out, ease-in-out: ease-in-out, bounce-in: cubic-bezier(0.485, 0.155, 0.24, 1.245), bounce-out: cubic-bezier(0.485, 0.155, 0.515, 0.845), bounce-in-out: cubic-bezier(0.76, -0.245, 0.24, 1.245), );
// -----  End of MOTION UI  ---------------------------------------------
/* =============================================================================================
██    ██ ████████ ██ ██      ██ ████████ ██    ██
██    ██    ██    ██ ██      ██    ██     ██  ██
██    ██    ██    ██ ██      ██    ██      ████
██    ██    ██    ██ ██      ██    ██       ██
 ██████     ██    ██ ███████ ██    ██       ██
============================================================================================= */
[data-sticky] {
    // width    : 100%;
    // max-width: $global-width !important;
}

br {
    clear: both;
}

%radius,
.radius {
    border-radius: 4px;
}

%rounded,
.rounded::after,
.rounded::before {
    border-radius: 1000px;
}
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @if $size != $-zf-zero-breakpoint {
            .#{$size}-rounded {
                border-radius: 1000px;
            }
        } @else {
            .rounded {
                border-radius: 1000px;
            }
        }
    }
}
/* -----  End of UTILITY  --------------------------------------------- */
/* ===========================================================================================================
██████   ██████  ███████ ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██    ██ ██      ██    ██    ██ ██    ██ ████   ██ ██
██████  ██    ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██      ██    ██      ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██       ██████  ███████ ██    ██    ██  ██████  ██   ████ ███████
================================================================================================== */
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $position in (inherit, relative, absolute, fixed) {
            @if $size != $-zf-zero-breakpoint {
                .#{$size}-#{$position} {
                    position: $position !important;
                }
            } @else {
                .#{$position} {
                    position: $position !important;
                }
            }
        }
    }
}
// @mixin positions {
//      @each $position in (relative, absolute, fixed){
//         .#{$position} {
//             position: $position;
//         }
//     }
// }
// @include positions;

%top,
.top {
    top: 0;
}

%bottom,
.bottom {
    bottom: 0;
}

%overflow-scroll,
.overflow-scroll {
    overflow: scroll;
}

%overflow-scroll-x,
.overflow-scroll-x {
    overflow-x: scroll;
}

%overflow-hidden-x,
.overflow-hidden-x {
    overflow-x: hidden;
}

%overflow-scroll-y,
.overflow-scroll-y {
    overflow-y: scroll;
}

%overflow-hidden-y,
.overflow-hidden-y {
    overflow-y: hidden;
}

%overflow-visible,
.overflow-visible {
    overflow: visible;
}

%overflow-hidden,
.overflow-hidden {
    overflow: hidden;
}

%block,
.block {
    display: block !important;
}

%inline,
.inline {
    display: inline !important;
}

%inline-block,
.inline-block {
    display: inline-block !important;
}

.flex {
    display: flex !important;
}
/* ----  End of POSITIONS  --------------------------------------------------------------------- */
/* ===========================================================================================================
██     ██ ██ ██████  ████████ ██   ██
██     ██ ██ ██   ██    ██    ██   ██
██  █  ██ ██ ██   ██    ██    ███████
██ ███ ██ ██ ██   ██    ██    ██   ██
 ███ ███  ██ ██████     ██    ██   ██
 ██████  ██    ██ ███████ ██████  ██████  ██ ██████  ███████ ███████
██    ██ ██    ██ ██      ██   ██ ██   ██ ██ ██   ██ ██      ██
██    ██ ██    ██ █████   ██████  ██████  ██ ██   ██ █████   ███████
██    ██  ██  ██  ██      ██   ██ ██   ██ ██ ██   ██ ██           ██
 ██████    ████   ███████ ██   ██ ██   ██ ██ ██████  ███████ ███████
================================================================================================== */
$widths: 20;
@for $i from 1 through $widths {
    .w#{$i*5} {
        width: $i*5%;
        // min-width: $i*5%;
        // max-width: $i*5%;
    }
}

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-w66 {
            width: 66%;
        }

        .#{$size}-w33 {
            width: 33%;
        }
    }
}

.w100px {
    width: 100px;
}
/* ----  End of WIDTH OVERRIDES  --------------------------------------------------------------------- */
/* ===========================================================================================================
██   ██ ███████ ██  ██████  ██   ██ ████████
██   ██ ██      ██ ██       ██   ██    ██
███████ █████   ██ ██   ███ ███████    ██
██   ██ ██      ██ ██    ██ ██   ██    ██
██   ██ ███████ ██  ██████  ██   ██    ██
 ██████  ██    ██ ███████ ██████  ██████  ██ ██████  ███████ ███████
██    ██ ██    ██ ██      ██   ██ ██   ██ ██ ██   ██ ██      ██
██    ██ ██    ██ █████   ██████  ██████  ██ ██   ██ █████   ███████
██    ██  ██  ██  ██      ██   ██ ██   ██ ██ ██   ██ ██           ██
 ██████    ████   ███████ ██   ██ ██   ██ ██ ██████  ███████ ███████
================================================================================================== */
$heights: 20;
@for $i from 1 through $heights {
    .h#{$i} {
        height: $i + px !important;
    }
}
@for $i from 1 through $heights {
    .h#{$i*5}vh {
        height: $i*5 + vh !important;
    }
}

.h100 {
    height    : 100%;
    min-height: 100%;
}

.h500px {
    height: 500px;
}

.h300px {
    height: 300px;
}
/* ----  End of HEIGHT OVERRIDES  --------------------------------------------------------------------- */
/* =============================================================================================

 ██████  ██████   █████   ██████ ██ ████████ ██ ███████ ███████
██    ██ ██   ██ ██   ██ ██      ██    ██    ██ ██      ██
██    ██ ██████  ███████ ██      ██    ██    ██ █████   ███████
██    ██ ██      ██   ██ ██      ██    ██    ██ ██           ██
 ██████  ██      ██   ██  ██████ ██    ██    ██ ███████ ███████

============================================================================================= */
$opacities: 20;
@for $i from 1 through $opacities {
    .opacity-#{$i*10} {
        opacity: unquote(".") + $i*10;
    }
}
// -----  End of OPACITIES  ---------------------------------------------
/* =============================================================================================

███████      ██ ███    ██ ██████  ███████ ██   ██
   ███       ██ ████   ██ ██   ██ ██       ██ ██
  ███  █████ ██ ██ ██  ██ ██   ██ █████     ███
 ███         ██ ██  ██ ██ ██   ██ ██       ██ ██
███████      ██ ██   ████ ██████  ███████ ██   ██

=============================================================================================*/
$zindexes: 11;
@for $i from -11 through $zindexes {
    .z#{$i} {
        z-index: $i !important;
    }
}
// -----  End of Z-INDEX  ---------------------------------------------
/* =============================================================================================
███████ ██      ███████ ██   ██
██      ██      ██       ██ ██
█████   ██      █████     ███
██      ██      ██       ██ ██
██      ███████ ███████ ██   ██
 ██████  ██████  ██ ██████
██       ██   ██ ██ ██   ██
██   ███ ██████  ██ ██   ██
██    ██ ██   ██ ██ ██   ██
 ██████  ██   ██ ██ ██████
 █████  ██████  ██████  ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██   ██ ██   ██ ██    ██    ██ ██    ██ ████   ██ ██
███████ ██   ██ ██   ██ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██   ██ ██   ██ ██   ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██   ██ ██████  ██████  ██    ██    ██  ██████  ██   ████ ███████
============================================================================================= */
.flex-wrap {
    flex-wrap: wrap !important;
}

.flex-grow {
    flex-grow: 1 !important;
}

.flex-dir-row {
    flex-direction: row;
}

.flex-child-auto {
    flex: 1 1 auto;
}

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-flex-container {
            display: flex !important;
        }

        .#{$size}-shrink {
            flex     : 0 0 auto;
            max-width: 100%;
        }

        .#{$size}-flex-dir-row {
            flex-direction: row;
        }

        .#{$size}-flex-child-auto {
            flex: 1 1 auto;
        }

        .#{$size}-align-top {
            align-items: flex-start;
        }

        .#{$size}-align-bottom {
            align-items: flex-end;
        }

        .#{$size}-align-middle {
            align-items: center;
        }

        .#{$size}-align-center {
            justify-content: center;
        }

        .#{$size}-align-left {
            justify-content: flex-start;
        }

        .#{$size}-align-right {
            justify-content: flex-end;
        }
    }
}
/* -----  End of FLEX GRID ADDITIONS  --------------------------------------------- */
/* =============================================================================================
██     ██ ██   ██ ██ ████████ ███████
██     ██ ██   ██ ██    ██    ██
██  █  ██ ███████ ██    ██    █████
██ ███ ██ ██   ██ ██    ██    ██
 ███ ███  ██   ██ ██    ██    ███████
███████ ██████   █████   ██████ ███████
██      ██   ██ ██   ██ ██      ██
███████ ██████  ███████ ██      █████
     ██ ██      ██   ██ ██      ██
███████ ██      ██   ██  ██████ ███████
================================================================================================== */
$whitespace: 12;
/* ==============================  MARGINS  ============================== */
$margin-sides-all-positive: (m);
$margin-sides-all-negative: (mn);
$margin-sides-positive: (
    mt: top,
    mr: right,
    mb: bottom,
    ml: left
);
$margin-sides-negative: (
    mtn: top,
    mrn: right,
    mbn: bottom,
    mln: left
);
$margin-x-positive: (mx);
$margin-y-positive: (my);
$margin-x-negative: (mxn);
$margin-y-negative: (myn);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 0 to $whitespace {
            @each $side in $margin-sides-all-positive {
                .#{$size}-#{$side}#{$i} {
                    margin: #{$i}rem !important;
                }
            }
            @each $side in $margin-sides-all-negative {
                .#{$size}-#{$side}#{$i} {
                    margin: -#{$i}rem !important;
                }
            }
            @each $side, $sideFull in $margin-sides-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-#{$sideFull}: #{$i}rem !important;
                }
            }
            @each $side, $sideFull in $margin-sides-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-#{$sideFull}: -#{$i}rem !important;
                }
            }
            @each $side in $margin-x-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-left : #{$i}rem !important;
                    margin-right: #{$i}rem !important;
                }
            }
            @each $side in $margin-x-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-left : -#{$i}rem !important;
                    margin-right: -#{$i}rem !important;
                }
            }
            @each $side in $margin-y-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-top   : #{$i}rem !important;
                    margin-bottom: #{$i}rem !important;
                }
            }
            @each $side in $margin-y-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-top   : -#{$i}rem !important;
                    margin-bottom: -#{$i}rem !important;
                }
            }
        }
    }
}
/* ============================  PADDINGS  ============================== */
$padding-sides-all: (p);
$padding-sides: (
    pt: top,
    pr: right,
    pb: bottom,
    pl: left
);
$padding-x: (px);
$padding-y: (py);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 0 to $whitespace {
            @each $side, $sideFull in $padding-sides {
                .#{$size}-#{$side}#{$i} {
                    padding-#{$sideFull}: #{$i}rem !important;
                }
            }
            @each $side in $padding-sides-all {
                .#{$size}-#{$side}#{$i} {
                    padding: #{$i}rem !important;

                }
            }
            @each $side in $padding-x {
                .#{$size}-#{$side}#{$i} {
                    padding-left : #{$i}rem !important;
                    padding-right: #{$i}rem !important;
                }
            }
            @each $side in $padding-y {
                .#{$size}-#{$side}#{$i} {
                    padding-top   : #{$i}rem !important;
                    padding-bottom: #{$i}rem !important;
                }
            }
        }
    }
}
// ==============================  HALF SIZES  ==============================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $side in $margin-sides-all-positive {
            .#{$size}-#{$side}-half {
                margin: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-sides-positive {
            .#{$size}-#{$side}-half {
                margin-#{$sideHalf}: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-x-positive {
            .#{$size}-#{$side}-half {
                margin-left : 0.5rem !important;
                margin-right: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-y-positive {
            .#{$size}-#{$side}-half {
                margin-top   : 0.5rem !important;
                margin-bottom: 0.5rem !important;
            }
        }
        @each $side in $padding-sides-all {
            .#{$size}-#{$side}-half {
                padding: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $padding-sides {
            .#{$size}-#{$side}-half {
                padding-#{$sideHalf}: 0.5rem !important;
            }
        }
        @each $side in $padding-x {
            .#{$size}-#{$side}-half {
                padding-left : 0.5rem !important;
                padding-right: 0.5rem !important;
            }
        }
        @each $side in $padding-y {
            .#{$size}-#{$side}-half {
                padding-top   : 0.5rem !important;
                padding-bottom: 0.5rem !important;
            }
        }
    }
}

.mxn1-5 {
    margin: 0 -1.5rem !important;
}
/* ----  End of WHITESPACES  -------------------------------------------------------------------------- */
/* ====================================================================================================
 ██████  ██████  ██       ██████  ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██ ██
██      ██    ██ ██      ██    ██ ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██      ██
 ██████  ██████  ███████  ██████  ██   ██ ███████
==================================================================================================== */
$blue: #4298b5;
$blue-light: #71c5e8;
$blue-dark: #00677f;
$green: #64a70b;
$green-dark: #4a7729;
$orange: #ed8b00;
$orange-dark: #d86018;
$gray-dark1: #2d2926;
$gray-dark2: #53565a;
$gray-medium: #666666;
$gray-light1: #999999;
$gray-light2: #c4c4c4;
$gray-light3: #f1f1f1;
$purple: #c800a1;
$red: #e1523d;
$colors-primary: (
    "black"    : $black,
    "white"    : $white,
    "blue"     : $blue,
    blue-light : $blue-light,
    blue-dark  : $blue-dark,
    "green"    : $green,
    green-dark : $green-dark,
    gray-dark1 : $gray-dark1,
    gray-dark2 : $gray-dark2,
    gray-medium: $gray-medium,
    gray-light1: $gray-light1,
    gray-light2: $gray-light2,
    gray-light3: $gray-light3,
    "red"      : $red
);
$colors-secondary: (
    "orange"   : $orange,
    orange-dark: $orange-dark,
    "purple"   : $purple,
);
/* ----  End of COLORS  -------------------------------------------------------------------------- */

/* ===========================================================================================================
██████   ██████  ██████  ██████  ███████ ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██ ██
██████  ██    ██ ██████  ██   ██ █████   ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██      ██
██████   ██████  ██   ██ ██████  ███████ ██   ██ ███████
================================================================================================== */
$border-side: (
    "t": top,
    "r": right,
    "b": bottom,
    "l": left
);

$border-width: 5 !default;
@for $i from 0 through $border-width {
    .bd#{$i} {
        border: $i + px solid $gray-light2 !important;
    }
}
@for $i from 0 through $border-width {
    @each $side-name, $side in $border-side {
        @each $color-name, $color in $colors-primary {
            .bd-#{$side-name}-#{$color-name}#{$i} {
                border-#{$side}: $i + px $color solid !important;
            }
        }
    }
}
@for $i from 0 through $border-width {
    @each $side-name, $side in $border-side {
        .bd-#{$side-name}#{$i} {
            border-#{$side}: $i + px $gray-light2 solid !important;
        }
    }
}
@for $i from 0 through $border-width {
    @each $color-name, $color in $colors-primary {
        .bd-#{$color-name}#{$i} {
            border: $i + px solid $color !important;
        }
    }
}
@each $color-name, $color in $colors-primary {
    .bd-#{$color-name} {
        border: 2px solid $color !important;
    }
}
@for $i from 0 through $border-width {
    .bd-gradient#{$i} {
        border-width      : $i + px;
        border-style      : solid;
        border-image      : linear-gradient(to right, $blue-light 0%, $green 100%);
        border-image-slice: 1;
        border-color      : inherit;
    }
}
$rounded-gradient-border-width: 2px;

.rounded-gradient-border,
.tabs.rounded-gradient-border .tabs-title.is-active a {
    position     : relative;
    background   : linear-gradient(to right, $blue-light 0%, $green 100%);
    border-radius: 100%;
    z-index      : 1;

    &:after {
        position         : absolute;
        display          : block;
        top              : $rounded-gradient-border-width;
        left             : $rounded-gradient-border-width;
        width            : calc(100% - #{$rounded-gradient-border-width}*2);
        height           : calc(100% - #{$rounded-gradient-border-width}*2);
        content          : "";
        background-color : inherit;
        background-repeat: no-repeat;
        background-size  : cover;
        border-radius    : 1000px;
        overflow         : hidden;
        z-index          : -1;
        transition       : $button-transition;
    }
}

.button.rounded-gradient-border:hover {
    &:after {
        background: unset;
    }
}

.tabs.rounded-gradient-border.bg-black .tabs-title.is-active a:after {
    background: black;
}
/* ----  End of BORDERS  --------------------------------------------------------------------- */

/* ====================================================================================================
██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████  ███████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██ ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██ ███████
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██      ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████  ███████
 ██████  ██████  ██       ██████  ██████
██      ██    ██ ██      ██    ██ ██   ██
██      ██    ██ ██      ██    ██ ██████
██      ██    ██ ██      ██    ██ ██   ██
 ██████  ██████  ███████  ██████  ██   ██
==================================================================================================== */
@each $color-name, $color in $colors-primary {
    .bg-#{$color-name} {
        background-color: $color !important;
    }
}

.bg-blue-dark,
.bg-gray-dark1,
.bg-gray-dark2,
.bg-gray-medium,
.bg-green-dark,
.bg-orange-dark,
.bg-purple,
.bg-red {
    color: $white !important;
}

.bg-transparent {
    background: transparent !important;
}
/* ----  End of BACKGROUND COLOR ------------------------------------------------------------------------------ */
/*=============================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
████████ ██ ███    ██ ████████ ███████
   ██    ██ ████   ██    ██    ██
   ██    ██ ██ ██  ██    ██    ███████
   ██    ██ ██  ██ ██    ██         ██
   ██    ██ ██   ████    ██    ███████

=============================================================================================*/
$background-tints: 5;
@for $i from 1 through $background-tints {
    @each $color-name, $color in $colors-primary {
        .bg-#{$color-name}-tint#{$i} {
            background-color: lighten($color, percentage($i / 17.5)) !important;
        }
    }
}
// -----  End of BACKGROUND TINTS  ---------------------------------------------
/*=============================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
████████ ██ ███    ██ ████████ ███████
   ██    ██ ████   ██    ██    ██
   ██    ██ ██ ██  ██    ██    ███████
   ██    ██ ██  ██ ██    ██         ██
   ██    ██ ██   ████    ██    ███████

=============================================================================================*/
$background-shades: 5;
@for $i from 1 through $background-shades {
    @each $color-name, $color in $colors-primary {
        .bg-#{$color-name}-shade#{$i} {
            background-color: darken($color, percentage($i / 20));
        }
    }
}
// -----  End of BACKGROUND SHADES  ---------------------------------------------
/* =============================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
 ██████  ██████   █████  ██████  ██ ███████ ███    ██ ████████ ███████
██       ██   ██ ██   ██ ██   ██ ██ ██      ████   ██    ██    ██
██   ███ ██████  ███████ ██   ██ ██ █████   ██ ██  ██    ██    ███████
██    ██ ██   ██ ██   ██ ██   ██ ██ ██      ██  ██ ██    ██         ██
 ██████  ██   ██ ██   ██ ██████  ██ ███████ ██   ████    ██    ███████

============================================================================================= */
@each $color-name, $color in $colors-primary {
    .bg-grd-tb-#{$color-name} {
        background: linear-gradient(180deg, $color, darken($color, 15%));
    }

    .bg-grd-bt-#{$color-name} {
        background: linear-gradient(0deg, $color, darken($color, 15%));
    }

    .bg-grd-lr-#{$color-name} {
        background: linear-gradient(to right, $color, darken($color, 15%));
    }

    .bg-grd-rl-#{$color-name} {
        background: linear-gradient(to left, $color, darken($color, 15%));
    }
}

.bg-grd-tb-blue-green {
    background: linear-gradient(180deg, $blue, $green);
}

.bg-grd-bt-blue-green {
    background: linear-gradient(0deg, $blue, $green);
}

.bg-grd-lr-blue-green {
    background: linear-gradient(to right, $blue, $green);
}

.bg-grd-rl-blue-green {
    background: linear-gradient(to left, $blue, $green);
}

.bg-grd-tb-blue-light-green {
    background: linear-gradient(180deg, $blue-light, $green);
}

.bg-grd-bt-blue-light-green {
    background: linear-gradient(0deg, $blue-light, $green);
}

.bg-grd-lr-blue-light-green {
    background: linear-gradient(to right, $blue-light, $green);
}

.bg-grd-rl-blue-light-green {
    background: linear-gradient(to left, $blue-light, $green);
}

.bg-grd-bt-blue,
.bg-grd-bt-blue-dark,
.bg-grd-bt-gray-dark1,
.bg-grd-bt-gray-dark2,
.bg-grd-bt-gray-light1,
.bg-grd-bt-gray-medium,
.bg-grd-bt-green,
.bg-grd-bt-green-dark,
.bg-grd-bt-orange,
.bg-grd-bt-orange-dark,
.bg-grd-bt-purple,
.bg-grd-bt-red,
.bg-grd-lr-blue,
.bg-grd-lr-blue-dark,
.bg-grd-lr-gray-dark1,
.bg-grd-lr-gray-dark2,
.bg-grd-lr-gray-light1,
.bg-grd-lr-gray-medium,
.bg-grd-lr-green,
.bg-grd-lr-green-dark,
.bg-grd-lr-orange,
.bg-grd-lr-orange-dark,
.bg-grd-lr-purple,
.bg-grd-lr-red,
.bg-grd-rl-blue,
.bg-grd-rl-blue-dark,
.bg-grd-rl-gray-dark1,
.bg-grd-rl-gray-dark2,
.bg-grd-rl-gray-light1,
.bg-grd-rl-gray-medium,
.bg-grd-rl-green,
.bg-grd-rl-green-dark,
.bg-grd-rl-orange,
.bg-grd-rl-orange-dark,
.bg-grd-rl-purple,
.bg-grd-rl-red,
.bg-grd-tb-blue,
.bg-grd-tb-blue-dark,
.bg-grd-tb-gray-dark1,
.bg-grd-tb-gray-dark2,
.bg-grd-tb-gray-light1,
.bg-grd-tb-gray-medium,
.bg-grd-tb-green,
.bg-grd-tb-green-dark,
.bg-grd-tb-orange,
.bg-grd-tb-orange-dark,
.bg-grd-tb-purple,
.bg-grd-tb-red {
    color: $white !important;
}
/* -----  End of BACKGROUND GRADIENTS  --------------------------------------------- */
/* =============================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
██████   ██████  ███████ ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██    ██ ██      ██    ██    ██ ██    ██ ████   ██ ██
██████  ██    ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██      ██    ██      ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██       ██████  ███████ ██    ██    ██  ██████  ██   ████ ███████

============================================================================================= */
$bg-pos: (
    "left"  : "left",
    "right" : "right",
    "top"   : "top",
    "bottom": "bottom",
    "center": "center"
);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $side, $side-name in $bg-pos {
            .#{$size}-bg-pos-#{$side} {
                background-position: #{$side-name} !important;
            }
        }
    }
}

// -----  End of BACKGROUND POSITIONS  ---------------------------------------------

// =============================================================================================
// ██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
// ██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
// ██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
// ██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
// ██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
// ███████ ██ ███████ ███████
// ██      ██    ███  ██
// ███████ ██   ███   █████
//      ██ ██  ███    ██
// ███████ ██ ███████ ███████
// =============================================================================================

$bg-size: (
    "unset"  : "unset",
    "cover"  : "cover",
    "contain": "contain"
);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $size-option in $bg-size {
            .#{$size}-bg-size-#{$size} {
                background-size: #{$size} !important;
            }
        }
    }
}

// -----  End of BACKGROUND SIZE  ---------------------------------------------

/* =============================================================================================

██ ███    ███  █████   ██████  ███████
██ ████  ████ ██   ██ ██       ██
██ ██ ████ ██ ███████ ██   ███ █████
██ ██  ██  ██ ██   ██ ██    ██ ██
██ ██      ██ ██   ██  ██████  ███████
 ██████  ██████   █████  ██████  ██ ███████ ███    ██ ████████
██       ██   ██ ██   ██ ██   ██ ██ ██      ████   ██    ██
██   ███ ██████  ███████ ██   ██ ██ █████   ██ ██  ██    ██
██    ██ ██   ██ ██   ██ ██   ██ ██ ██      ██  ██ ██    ██
 ██████  ██   ██ ██   ██ ██████  ██ ███████ ██   ████    ██
 ██████  ██    ██ ███████ ██████  ██       █████  ██    ██
██    ██ ██    ██ ██      ██   ██ ██      ██   ██  ██  ██
██    ██ ██    ██ █████   ██████  ██      ███████   ████
██    ██  ██  ██  ██      ██   ██ ██      ██   ██    ██
 ██████    ████   ███████ ██   ██ ███████ ██   ██    ██

============================================================================================= */
@mixin gradient-overlay-image {
    display        : block;
    position       : absolute;
    background-size: cover;
    height         : 75%;
    width          : 100%;
    content        : "";
    bottom         : 0;

}
@mixin gradient-overlay-image-full {
    display        : block;
    position       : absolute;
    background-size: cover;
    height         : 100%;
    width          : 100%;
    content        : "";
    bottom         : 0;

}
@mixin gradient-overlay-image-angled {
    display        : block;
    position       : absolute;
    background-size: cover;
    height         : 100%;
    width          : 100%;
    content        : "";
    bottom         : 0;

}

.gradient-overlay-white {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($white,0) 0%,rgba($white,0) 50%,rgba($white,1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-blue {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue,0) 0%,rgba($blue,0) 50%,rgba($blue,1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-blue-dark {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue-dark,0) 0%,rgba($blue-dark,0) 50%,rgba($blue-dark,1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-gray-dark1 {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($gray-dark1,0) 0%,rgba($gray-dark1,0) 50%,rgba($gray-dark1,1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-gray-dark2 {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($gray-dark2,0) 0%,rgba($gray-dark2,0) 50%,rgba($gray-dark2,1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-black {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($black, 0) 50%, rgba($black, 1) 100%);
        @include gradient-overlay-image;
    }
}

.gradient-overlay-white-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($white, 0) 20%, rgba($white, .9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue, 0) 20%, rgba($blue, .9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-dark-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue-dark, 0) 20%, rgba($blue-dark, 0.9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-gray-dark1-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($gray-dark1, 0) 20%, rgba($gray-dark1, 0.9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-gray-dark2-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($gray-dark2, 0) 20%, rgba($gray-dark2, 0.9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-black-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($black, 0) 20%, rgba($black, .9) 65%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-angled {
    position: relative;

    &::after {
        background-image: linear-gradient(135deg, rgba($blue, 0) 30%, rgba($blue, 0.9) 80%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-dark-angled {
    position: relative;

    &::after {
        background-image: linear-gradient(135deg, rgba($blue-dark, 0) 30%, rgba($blue-dark, 0.9) 80%);
        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-dark-angled2 {
    position: relative;

    &::after {
        background-image: linear-gradient(165deg, rgba($blue-dark, 0) 65%, rgba($blue-dark, 0.9) 90%);
        @include gradient-overlay-image-full;
    }
}
// -----  End of IMAGE GRADIENT OVERLAY  ---------------------------------------------
/* =============================================================================================
███████ ██ ██      ██
██      ██ ██      ██
█████   ██ ██      ██
██      ██ ██      ██
██      ██ ███████ ███████
 ██████  ██████  ██       ██████  ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██ ██
██      ██    ██ ██      ██    ██ ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██      ██
 ██████  ██████  ███████  ██████  ██   ██ ███████
============================================================================================= */
@each $color-name, $color in $colors-primary {
    .fill-#{$color-name} {
        fill: $color !important;
    }
}
/* -----  End of FILL COLORS  --------------------------------------------- */
/* =============================================================================================
██████   ██████  ██   ██     ███████ ██   ██  █████  ██████   ██████  ██     ██ ███████
██   ██ ██    ██  ██ ██      ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██ ██
██████  ██    ██   ███       ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██ ███████
██   ██ ██    ██  ██ ██           ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██      ██
██████   ██████  ██   ██     ███████ ██   ██ ██   ██ ██████   ██████   ███ ███  ███████
============================================================================================= */
%box-shadow,
.box-shadow {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.2);
}

.box-shadow2 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.4);
}

.box-shadow3 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.6);
}

.box-shadow4 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.8);
}

.bxsh-tb {
    box-shadow: inset 0 50px 50px -40px transparentize($black, .85), inset 0 -50px 50px -40px transparentize($black, .85);
}

.bxsh-b {
    box-shadow: inset 0 -50px 50px -40px transparentize($black, .85);
}

.bxsh-t {
    box-shadow: inset 0 50px 50px -40px transparentize($black, .85);
}
/* -----  End of BOX SHADOWS  --------------------------------------------- */
/*=============================================================================================

██████   ██████  ██   ██     ███████ ██   ██  █████  ██████   ██████  ██     ██
██   ██ ██    ██  ██ ██      ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
██████  ██    ██   ███       ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
██   ██ ██    ██  ██ ██           ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
██████   ██████  ██   ██     ███████ ██   ██ ██   ██ ██████   ██████   ███ ███
██   ██  ██████  ██    ██ ███████ ██████
██   ██ ██    ██ ██    ██ ██      ██   ██
███████ ██    ██ ██    ██ █████   ██████
██   ██ ██    ██  ██  ██  ██      ██   ██
██   ██  ██████    ████   ███████ ██   ██

=============================================================================================*/
@mixin box-shadow-hover() {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);

    &:hover {
        box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.4);
        transform : scale(1.01);
    }
}

.box-shadow-hover {
    @include box-shadow-hover();
}
// -----  End of BOX SHADOW HOVER  ---------------------------------------------
/* =============================================================================================

██   ██  ██████  ██    ██ ███████ ██████       ██████  ██████   ██████  ██     ██
██   ██ ██    ██ ██    ██ ██      ██   ██     ██       ██   ██ ██    ██ ██     ██
███████ ██    ██ ██    ██ █████   ██████      ██   ███ ██████  ██    ██ ██  █  ██
██   ██ ██    ██  ██  ██  ██      ██   ██     ██    ██ ██   ██ ██    ██ ██ ███ ██
██   ██  ██████    ████   ███████ ██   ██      ██████  ██   ██  ██████   ███ ███

============================================================================================= */
@include breakpoint(medium) {
    .hover-grow {
        transition: all 0.3s ease;
        position  : relative;
        z-index   : 1;
        box-shadow: 0;
        overflow  : visible;
        // border    : 0;
        &.is-active,
        &:hover {
            transform       : scale(1.035);
            transform-origin: left center;
            z-index         : 10;
            box-shadow      : 0 5px 10px 0 rgba(0, 0, 0, 0.2);
        }
    }
}
// -----  End of HOVER GROW  ---------------------------------------------
// =============================================================================================
// ██████  ██     ██     ████████  ██████       ██████  ██████  ██       ██████  ██████
// ██   ██ ██     ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██   ██
// ██████  ██  █  ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██████
// ██   ██ ██ ███ ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██   ██
// ██████   ███ ███         ██     ██████       ██████  ██████  ███████  ██████  ██   ██
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// =============================================================================================

.bw-color-hover {
    filter: grayscale(1);
    transition: all 0.5s ease;

    &:hover {
        filter: grayscale(0);
        transition: all 0.5s ease;
    }
}
// -----  End of BW TO COLOR HOVER  ---------------------------------------------
/* =============================================================================================

████████ ███████ ██   ██ ████████     ███████ ██   ██  █████  ██████   ██████  ██     ██
   ██    ██       ██ ██     ██        ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
   ██    █████     ███      ██        ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
   ██    ██       ██ ██     ██             ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
   ██    ███████ ██   ██    ██        ███████ ██   ██ ██   ██ ██████   ██████   ███ ███

============================================================================================= */
.text-shadow {
    text-shadow: 0 0 20px rgba(0,0,0,1);
}
// -----  End of TEXT SHADOW  ---------------------------------------------
/* ====================================================================================================
██████  ██ ██    ██ ██ ██████  ███████ ██████  ███████
██   ██ ██ ██    ██ ██ ██   ██ ██      ██   ██ ██
██   ██ ██ ██    ██ ██ ██   ██ █████   ██████  ███████
██   ██ ██  ██  ██  ██ ██   ██ ██      ██   ██      ██
██████  ██   ████   ██ ██████  ███████ ██   ██ ███████
==================================================================================================== */
%hr,
hr {
    margin   : 2rem auto;
    max-width: 100%;
}

hr.light {
    border-color: rgba(255,255,255,.35);
}

hr.dark {
    border-color: rgba(0,0,0,.35);
}

hr.gradient {
    @extend %hr;
    background: linear-gradient(to right, $blue-light, $green);
    border    : none;
    height    : 2px;
}
@each $color-name, $color in $colors-primary {
    hr.#{$color-name} {
        border-bottom-color: $color;
    }
}

.vertical-divider {
    border: 2px solid $blue;
}

.vertical-divider-left {
    border-width      : 2px;
    border-right-width: 0;
    border-style      : solid;
    border-image      : linear-gradient(to bottom, $blue-light, $green, rgba(0, 0, 0, 0)) 0 100%;
}

.vertical-divider-right {
    border-width     : 2px;
    border-left-width: 0;
    border-style     : solid;
    border-image     : linear-gradient(to bottom, $blue-light, $green, rgba(0, 0, 0, 0)) 0 100%;
}
/* ----  End of DIVIDERS  -------------------------------------------------------------------------- */
/* ====================================================================================================
████████ ██    ██ ██████   ██████   ██████  ██████   █████  ██████  ██   ██ ██    ██
   ██     ██  ██  ██   ██ ██    ██ ██       ██   ██ ██   ██ ██   ██ ██   ██  ██  ██
   ██      ████   ██████  ██    ██ ██   ███ ██████  ███████ ██████  ███████   ████
   ██       ██    ██      ██    ██ ██    ██ ██   ██ █��  ██ ██      ██   ██    ██
   ██       ██    ██       ██████   ██████  ██   ██ ██   ██ ██      ██   ██    ██
==================================================================================================== */
// RFS mixin.
//
// Automated font-resizing.
//
// See https://github.com/MartijnCuppens/rfs.
// See configuration for options
// Minimum fontsize.
$rfs-minimum-font-size: 15px;
$rfs-font-size-unit: px;

// Breakpoint at where font-size starts decreasing if screen width is smaller.
$rfs-breakpoint: 1024px;
$rfs-breakpoint-unit: px;

// Resize font-size based on screen height and width.
$rfs-two-dimensional: false;

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class: "disable";

@import "../bower_components/rfs/scss/_rfs.scss";

:root *,
_::-webkit-full-page-media,
_:future {
    min-width: 0;
}

* {
    // hyphens               : auto;
    // overflow-wrap         : break-word;
    // word-wrap             : break-word;
    // word-break            : break-word;
    font-variant-ligatures: common-ligatures;
    font-feature-settings : "liga", "clig";
    // font-variant-ligatures    : contextual;
    // font-feature-settings     : "calt";
    font-variant-ligatures: discretionary-ligatures;
    font-feature-settings : "dlig";
    // font-feature-settings     : "salt";
    font-kerning          : normal;
    font-feature-settings : "kern";
    // font-variant-numeric      : lining-nums;
    // font-feature-settings     : "lnum";
    // font-variant-numeric : oldstyle-nums;
    // font-feature-settings: 'onum';
    // font-variant-numeric      : diagonal-fractions;
    // font-feature-settings     : "frac";
    // font-variant-numeric      : ordinal;
    // font-feature-settings     : "ordn";
    // font-feature-settings     : "ss01";
    font-feature-settings : “ital”;
}

body,
html {
    @include responsive-font-size(20);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    // hyphens: auto;
}

%h1,
h1 {
    @include responsive-font-size(84);
    font-weight: 300;
}

%h2,
h2 {
    @include responsive-font-size(63);
    font-weight: 300;
}

%h3,
h3 {
    @include responsive-font-size(47);
}

%h4,
h4 {
    @include responsive-font-size(36);
    font-weight: bold;
}

%h5,
h5 {
    @include responsive-font-size(27);
    font-weight: bold;
}

%h6,
h6 {
    @include responsive-font-size(20);
    font-weight: bold;
}

%p,
p {
    @include responsive-font-size(20);
}

body {
    // color     : $gray-dark2;
    // background: $gray-light3;
}

.lh0 {
    line-height: 0;
}

.lh1 {
    line-height: 1;
}

%small,
.small {
    // font-size: $small-font-size;
    @include responsive-font-size(15);
}

%tiny,
.tiny {
    // font-size: 60%;
    @include responsive-font-size(12);
}

sup {
    top: -0.4em;
}
/* ==============================  TYPOGRAPHY HELPERS  ============================== */
@for $i from 1 through 10 {
    .fw#{$i*100} {
        font-weight: $i*100;
    }
}

%text-normal,
.text-normal {
    font-weight: normal !important;
}

%text-light,
.text-light {
    font-weight: 100 !important;
}

%text-light-italic,
.text-light-italic {
    font-weight: 100 !important;
    font-style : italic;
}

%text-bold,
.strong,
.text-bold,
strong {
    font-weight: bold !important;
}

%text-bold-italic,
.text-bold-italic {
    font-weight: bold !important;
    font-style : italic;
}

%text-italic,
.text-italic {
    font-style: italic !important;
}

%text-caps,
.text-caps {
    text-transform: uppercase;
}

%text-title,
.text-title {
    text-transform: capitalize;
}

%text-sentence,
.text-sentence {
    text-transform: none !important;
}

%text-center {
    text-align: center;
}
@each $color-name, $color in $colors-primary {
    .text-#{$color-name} {
        color: $color !important;
    }
}

.text-wrap {
    white-space: normal;
}

.text-nowrap {
    white-space: nowrap;
}

.no-hyphens {
    hyphens: none;
}

.hyphens {
    hyphens: auto;
}
// .text-white * {
//     // color: $white !important;
// }
// .blue-bold-italic {
//     font-weight: bold;
//     font-style : italic !important;
//     color      : $blue;
// }

blockquote cite.text-white {
    -webkit-text-fill-color: $white;
    fill                   : $white;
}

.hanging-punctuation {
    text-indent: -0.5em;
}
/* Special pain is taken to make this work on ALL background colors. If you're going to use it on a white (or black) background, you can simplify the code furhter. */
@mixin gradient-text($background, $gradient) {
    background: white;
    color     : black;
    position  : relative;
    // Hide aliased edges caused by mixing blend modes. Will appear as a faint dark outline on certain backgrounds. Tweak to improve rendering
    // text-shadow: 1px 1px 0 $background, 1px -1px 0 $background, -1px -1px 0 $background, -1px 1px 0 $background;
    &::after,
    &::before {
        position      : absolute;
        top           : 0;
        right         : 0;
        bottom        : 0;
        left          : 0;
        // Make cursor ignore these, allowing text underneath to be clicked and selected
        pointer-events: none;
    }

    &::before {
        // Gradient
        background    : $gradient;
        content       : "";
        display       : block;
        mix-blend-mode: screen;
    }
    // Everything below can be removed when using a #fff background. Ditto when using a black background, provided the mix-blend-modes, text, background color are reversed. (Screen to multiply, white to black)
    &::after {
        // Duplicate gradient text. Yes, it's ugly. Change the value below without changing the HTML for fun times.
        // content: $text;
        background    : $background;
        color         : white;
        mix-blend-mode: multiply;
    }
}

%text-gradient,
.text-gradient {
    background             : linear-gradient(to right, $blue-light, $green);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display                : inline-block;
};

%text-gradient-block,
.text-gradient-block {
    background          : linear-gradient(to right, $blue-light, $green);
    display             : inline;
    box-decoration-break: clone;
    padding             : 0.1rem 0.5rem 0;
    line-height         : 1.4;
};

.gradient-transparent-white-25 {
    background: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,1) 25%);
}

.gradient-transparent-black-25 {
    background: linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,1) 25%);
}

pre code {
    // padding: 0;
}

.heading-lines {
    overflow  : hidden;
    text-align: center;
}

.heading-lines:after,
.heading-lines:before {
    background-color: $gray-light2;
    content         : "";
    display         : inline-block;
    height          : 1px;
    position        : relative;
    vertical-align  : middle;
    width           : 50%;
}

.heading-lines:before {
    right      : 0.5em;
    margin-left: -50%;
}

.heading-lines:after {
    left        : 0.5em;
    margin-right: -50%;
}
// =============================================================================================
// MIXIN FOR MULTILINE TEXT
// This mixin is a cross-browser CSS-only solution to automatically truncate a set number of lines of text.
// This is also called "Line Clamping"
// See these resources for more info:
// https://css-tricks.com/line-clampin/
// https://codepen.io/siiron/pen/jfBhy
// =============================================================================================
/* Begin required CSS. */
.line-clamp {
    display           : block;
    display           : -webkit-box;
    -webkit-box-orient: vertical;
    position          : relative;
    line-height       : 1.3;
    overflow          : hidden;
    text-overflow     : ellipsis;
    padding           : 0 !important;
}

.line-clamp:after {
    content   : "…";
    text-align: right;
    bottom    : 0;
    right     : 0;
    width     : 25%;
    display   : block;
    position  : absolute;
    height    : calc(initial * 1.3);
    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 75%);
}
@supports (-webkit-line-clamp: 1) {
    .line-clamp:after {
        display: none !important;
    }
}

.line-clamp-1 {
    -webkit-line-clamp: 1;
    height            : calc(initial * 1.3 * 1);
}

.line-clamp-2 {
    -webkit-line-clamp: 2;
    height            : calc(initial * 1.3 * 2);
}

.line-clamp-3 {
    -webkit-line-clamp: 3;
    height            : calc(initial * 1.3 * 3);
}

.line-clamp-4 {
    -webkit-line-clamp: 4;
    height            : calc(initial * 1.3 * 4);
}

.line-clamp-5 {
    -webkit-line-clamp: 5;
    height            : calc(initial * 1.3 * 5);
}
/* ----  End of TYPOGRAPHY;  -------------------------------------------------------------------------- */
/* ====================================================================================================

██      ██ ███    ██ ██   ██ ███████
██      ██ ████   ██ ██  ██  ██
██      ██ ██ ██  ██ █████   ███████
██      ██ ██  ██ ██ ██  ██       ██
███████ ██ ██   ████ ██   ██ ███████

==================================================================================================== */
a {
    text-decoration: none;
    font-weight    : bold;
    // hyphens        : auto;
    overflow-wrap  : break-word;
    word-wrap      : break-word;

    &:hover {
        transition: 0.3s ease-out;
    }
}
/* ----  End of LINKS  -------------------------------------------------------------------------- */
/* =============================================================================================

██  ██████  ██████  ███    ██
██ ██      ██    ██ ████   ██
██ ██      ██    ██ ██ ██  ██
██ ██      ██    ██ ██  ██ ██
██  ██████  ██████  ██   ████
███████  ██████  ███    ██ ████████
██      ██    ██ ████   ██    ██
█████   ██    ██ ██ ██  ██    ██
██      ██    ██ ██  ██ ██    ██
██       ██████  ██   ████    ██

============================================================================================= */
.logo-facebook,
.logo-linkedin,
.logo-twitter-bird,
.navigation-drawer {
    font-weight: normal;
}

.icomoon-liga,
i {
    display: inline-block;
}
/* -----  End of ICON FONT  --------------------------------------------- */
/* =============================================================================================

██  ██████  ██████  ███    ██ ███████
██ ██      ██    ██ ████   ██ ██
██ ██      ██    ██ ██ ██  ██ ███████
██ ██      ██    ██ ██  ██ ██      ██
██  ██████  ██████  ██   ████ ███████

============================================================================================= */
.icon-left svg {
    margin-right: 0.7em;
    float       : left;
}

.icon-right svg {
    margin-left: 0.85em;
    float      : right;
}
/* -----  End of ICONS  --------------------------------------------- */
/* =============================================================================================

██████  ██       ██████   ██████ ██   ██  ██████  ██    ██  ██████  ████████ ███████ ███████
██   ██ ██      ██    ██ ██      ██  ██  ██    ██ ██    ██ ██    ██    ██    ██      ██
██████  ██      ██    ██ ██      █████   ██    ██ ██    ██ ██    ██    ██    █████   ███████
██   ██ ██      ██    ██ ██      ██  ██  ██ ▄▄ ██ ██    ██ ██    ██    ██    ██           ██
██████  ███████  ██████   ██████ ██   ██  ██████   ██████   ██████     ██    ███████ ███████
                                             ▀▀
============================================================================================= */
blockquote {
    @extend %text-gradient;
    @extend %h5;
    font-style  : italic;
    border      : 1px solid $gray-light2;
    border-left : 0;
    border-right: 0;
    padding     : 3.75rem 0;
    text-align  : center;

    %cite,
    cite {
        color                  : $gray-dark2;
        -webkit-text-fill-color: $gray-dark2;
        fill                   : $gray-dark2;
        margin-top             : 1.875rem;
    }
}

/* -----  End of BLOCKQUOTES  --------------------------------------------- */
/* ===========================================================================================================
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
================================================================================================== */
ul {
    margin-bottom: 2rem;
}

li {
    margin-bottom: 1rem;
}

li:last-child {
    // margin-bottom: 0;
}

li ol,
li ul {
    margin-top: 1rem;
}
@include breakpoint(medium up) {
    ul.inline-list li {
        display: inline-block;
        margin : 0 1rem 0 0;
    }
}

ul.circle {
    list-style-type: circle;
}

ul.square {
    list-style-type: square;
}

dl dt {
    font-weight: bold;
    margin-top : 1rem;
}
/* ----  End of LISTS  --------------------------------------------------------------------- */
/* ==========================================================================================================
██      ██ ███    ██ ██   ██
██      ██ ████   ██ ██  ██
██      ██ ██ ██  ██ █████
██      ██ ██  ██ ██ ██  ██
███████ ██ ██   ████ ██   ██
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
================================================================================================== */
.arrow {
    display    : inline-flex;
    align-items: center;

    &::after {
        font-family: "Cognizant-Icons";
        content    : "\e907" !important;
        font-weight: bold;
        margin-left: 0.5rem;
        position   : unset !important;
        right      : unset !important;
        width      : unset !important;
        height     : unset !important;
        margin-top : unset !important;
        background : unset !important;
    }
}

.arrow-end {
    position: relative;

    &::after {
        font-family: "Cognizant-Icons";
        content    : "\e907";
        position   : absolute;
        right      : 0;
    }
}
/* ----  End of LINK LISTS  --------------------------------------------------------------------- */
/* ====================================================================================================
██████  ██    ██ ████████ ████████  ██████  ███    ██ ███████
██   ██ ██    ██    ██       ██    ██    ██ ████   ██ ██
██████  ██    ██    ██       ██    ██    ██ ██ ██  ██ ███████
██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██      ██
██████   ██████     ██       ██     ██████  ██   ████ ███████
==================================================================================================== */
.button {
    text-decoration: none;
    text-transform : uppercase;
    // margin-left    : 0.5rem;
    margin-right   : 0.5rem;
    @include responsive-font-size(20);

    & i {
        // line-height: 0;
    }
    // + .button {
    //     margin-left: 0.5rem;
    // }
    // & + .button:nth-child(n+2) {
    //     margin-left : 0.5rem;
    //     margin-right: 0.5rem;
    // }
    // & + .button:nth-last-of-type(1) {
    //     // margin-left : 0.5rem;
    //     margin-right: 0;
    // }
    &.tiny {
        @include responsive-font-size(12);
    }

    &.small {
        @include responsive-font-size(15);
    }

    &.large {
        @include responsive-font-size(27);
    }

    &.xlarge {
        @include responsive-font-size(36);
    }

    &.back:after {
        content: "";
        margin : 0;
    }

    &.back:before {
        margin-right: 0.5rem;
        font-family : "Cognizant-Icons";
        content     : "\e905";
        color       : $white;
        font-weight : 600;
    }

    &.download:after {
        font-family: "Cognizant-Icons";
        content    : "\e920" !important;
        font-weight: bold;
        margin-left: 0.5rem;
        position   : unset !important;
        right      : unset !important;
        width      : unset !important;
        height     : unset !important;
        margin-top : unset !important;
        background : unset !important;
    }

    &.white {
        background: $white;
        color     : $blue;
    }

    &.white:after {
        color: $blue;
    }

    &.white:hover {
        background: darken($white, 5%);
    }

    &.disabled {
        background: $gray-light1;
    }

    &.gradient {
        background: linear-gradient(to right, $blue-light, $green);
    }

    &.gradient-border {
        border-width      : 2px;
        border-style      : solid;
        border-image      : linear-gradient(to right, $blue-light 0%, $green 100%);
        border-image-slice: 1;
    }
}
/* ----  End of BUTTON  -------------------------------------------------------------------------- */
/* ===========================================================================================================
██████  ██    ██ ████████ ████████  ██████  ███    ██
██   ██ ██    ██    ██       ██    ██    ██ ████   ██
██████  ██    ██    ██       ██    ██    ██ ██ ██  ██
██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██
███ ██
██████   ██████     ██       ██     ██████  ██   ████
 ██████  ██████   ██████  ██    ██ ██████  ███████
██       ██   ██ ██    ██ ██    ██ ██   ██ ██
██   ███ ██████  ██    ██ ██    ██ ██████  ███████
██    ██ ██   ██ ██    ██ ██    ██ ██           ██
 ██████  ██   ██  ██████   ██████  ██      ███████
========================================================████
================================================================================================== */
.button-group .button:after {
    // content: '';
}
/* =============================================================================================

██████  ██████  ███████  █████  ██████   ██████ ██████  ██    ██ ███    ███ ██████  ███████
██   ██ ██   ██ ██      ██   ██ ███   ██ ██      ██   ██ ██    ██ ████  ████ ██   ██ ██
██████  ██████  █████   ███████ ██   ██ ██      ██████  ██    ██ ██ ████ ██ ██████  ███████
██   ██ ██   ██ ██      ██   ██ ██   ██ ██      ██   ██ ██    ██ ██  ██  ██ ██   ██      ██
██████  ██   ██ ███████ ██   ██ ██████   ██████ ██   ██  ██████  ██      ██ ██████  ███████

============================================================================================= */
.breadcrumbs a:link {
    font-weight: normal;
}
// -----  End of BREADCRUMBS  ---------------------------------------------
/* ----  End of BUTTON GROUPS  --------------------------------------------------------------------- */
/* ===========================================================================================================
███████  ██████  ██████  ███    ███ ███████
██      ██    ██ ██   ██ ████  ████ ██
█████   ██    ██ ██████  ██ ████ ██ ███████
██      ██    ██ ██   ██ ██  ██  ██      ██
██       ██████  ██   ██ ██      ██ ███████
================================================================================================== */
[type='color'],
[type='date'],
[type='datetime'],
[type='datetime-local'],
[type='email'],
[type='month'],
[type='number'],
[type='password'],
[type='search'],
[type='tel'],
[type='text'],
[type='time'],
[type='url'],
[type='week'],
textarea {
    height: initial;
}

button {
    font-family: $body-font-family;
    font-weight: bold;
}

label {
    cursor: pointer;
}

.fieldset,
fieldset {
    border: none;
    @include callout;
}
@include breakpoint(medium up) {
    .fieldset,
    fieldset {
        box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.1);
        padding   : 2rem;
    }
}

legend {
    @extend %h5;
    background: transparent !important;
}

textarea {
    min-height: 200px;
}

input[type=checkbox],
input[type=radio] {
    margin-bottom: 0;
    margin-right : 0.5rem;
}

input[type=radio] + .form-error {
    margin-top: 0 !important;
}

.form-error,
.help-text {
    font-style: italic;
}

.reveal-if-active {
    opacity   : 0;
    max-height: 0;
    overflow  : hidden;
    transform : scale(0.95);
    transition: all 0.5s;
    display   : block;

    input[type=text] {
        width: 100%;
    }

    input[type="checkbox"]:checked ~ &,
    input[type="radio"]:checked ~ & {
        opacity      : 1;
        max-height   : 100000px;
        transform    : scale(1);
        overflow     : visible;
        margin-bottom: 2rem;
    }
}

.checkbox {
    position: relative;
    margin  : 0 1rem 0 0;
    cursor  : pointer;

    &:before {
        transition        : transform 0.4s cubic-bezier(.45,1.8,.5,.75);
        transform         : rotate(-45deg) scale(0, 0);
        content           : "";
        position          : absolute;
        top               : 2px;
        left              : 2px;
        z-index           : 1;
        width             : 12px;
        height            : 6px;
        border            : 2px solid $white;
        border-top-style  : none;
        border-right-style: none;
    }

    &:checked {
        &:before {
            transform: rotate(-45deg) scale(1, 1);
        }

        &:after {
            background  : $blue;
            border-color: $blue-light;
        }
    }

    &:after {
        content   : "";
        position  : absolute;
        top       : -4px;
        left      : -2px;
        width     : 20px;
        height    : 20px;
        background: #fff;
        border    : 0.12rem solid $gray-light1;
        cursor    : pointer;
        box-shadow: inset 0 1px 2px rgba(51,51,51,0.1);
    }
}

.radio {
    position: relative;
    margin  : 0 1rem 0 0;
    cursor  : pointer;

    &:before {
        transition   : transform 0.4s cubic-bezier(.45,1.8,.5,.75);
        transform    : scale(0,0);
        content      : "";
        position     : absolute;
        z-index      : 1;
        top          : 3px;
        left         : 3px;
        z-index      : 1;
        width        : 10px;
        height       : 10px;
        background   : $blue;
        border-radius: 50%;
    }

    &:checked {
        &:before {
            transform: scale(1,1);
        }
    }

    &:after {
        content      : "";
        position     : absolute;
        top          : -2px;
        left         : -2px;
        width        : 20px;
        height       : 20px;
        background   : #fff;
        border       : 0.12rem solid $gray-light1;
        border-radius: 50%;
        box-shadow   : inset 0 1px 2px rgba(51,51,51,0.1);
        // margin-bottom: .5rem;
    }
}

.checkbox.is-invalid-input:after,
.radio.is-invalid-input:after {
    border-color: $red !important;
}

input.placeholder-white::placeholder {
    color: $white;
}

select {
    height       : 2.25rem;
    padding-right: 1em;
    background   : url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%23999999' stroke='%23999999' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 45%;
    // background-size: 15px;
}

/* ----  End of FORMS  --------------------------------------------------------------------- */
/* =============================================================================================

███████ ██       ██████   █████  ████████
██      ██      ██    ██ ██   ██    ██
█████   ██      ██    ██ ███████    ██
██      ██      ██    ██ ██   ██    ██
██      ███████  ██████  ██   ██    ██
██       █████  ██████  ███████ ██      ███████
██      ██   ██ ██   ██ ██      ██      ██
██      ███████ ██████  █████   ██      ███████
██      ██   ██ ██   ██ ██      ██           ██
███████ ██   ██ ██████  ███████ ███████ ███████

============================================================================================= */
// =============================================================================================
// float-label-css
// 1.0.1
// Bulletproof CSS-only implementation of Float Label pattern with automatic fallback for ANY non-supporting browser.
// https://github.com/tonystar/float-label-css.git
// Anton Staroverov (https://tonystar.me)
// =============================================================================================
@mixin float-label-container {
    display : block;
    position: relative;
}
@mixin float-label {
    > span,
    label {
        position  : absolute;
        left      : 0.5rem;
        top       : 0;
        cursor    : text;
        font-size : 75%;
        opacity   : 1;
        transition: all 0.2s;
        @content;
    }
}
@mixin float-label-input {
    &::placeholder {
        opacity   : 1;
        transition: all 0.2s;
        color     : rgba($gray-dark1, .4);
    }

    &:placeholder-shown:not(:focus)::placeholder {
        opacity: 0;
    }
}
@mixin float-label-scaled {
    &:placeholder-shown:not(:focus) + * {
        font-size: inherit;
        opacity  : 1;
        @content;
        top      : 0.7rem;
    }
}

.has-float-label {
    @include float-label-container;
    @include float-label;

    select {
        appearance: none;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%2353565a' stroke='%2353565a' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 25% !important;
    }

    input,
    select,
    textarea {
        @include float-label-input;
        font-size    : inherit;
        padding-top  : 1.2rem;
        border       : 0;
        border-radius: 0;
        box-shadow   : none;
        background   : none;
        border-bottom: 1px solid rgba($gray-dark1, .2);
        @include float-label-scaled {
            top: 0.5rem;
        }

        &:focus {
            outline     : none;
            background  : none;
            box-shadow  : none;
            border-width: 0 0 1px 0;
            border-color: rgba($blue-light, 1);
            box-shadow  : 0 1px 0 rgba($blue-light, 1);
        }
    }

    & span {
        // color: $white;
    }

    & input:focus + span {
        color: $blue;
    }

    & .form-error {
        position : relative;
        left     : 0;
        top      : 0;
        font-size: initial;
        color    : inherit !important;
    }

    & .is-invalid-input:not(:focus) {
        border-color: $red;
        color       : $red;
    }
}

form.white {
    select {
        appearance: none;
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%23ffffff' stroke='%23ffffff' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 25% !important;
    }

    & input,
    & select,
    & textarea {
        background   : none;
        color        : $white;
        border-bottom: 1px solid rgba($white,.7);

        &:focus {
            background  : none;
            box-shadow  : none;
            border-width: 0 0 1px 0;
            border-color: rgba($blue-light, 1);
            box-shadow  : 0 1px 0 rgba($blue-light, 1);
        }

        &::placeholder {
            color: rgba($white, .4);
        }
    }

    & span {
        color: $white;
    }

    & input:focus + span {
        color: $blue;
    }

    & .form-error {
        position : relative;
        left     : 0;
        top      : 0;
        font-size: initial;
        color    : inherit !important;
    }

    & .is-invalid-label span {
        color: $red;
    }

    & .is-invalid-input:not(:focus) {
        border-color: $red;
        color       : $red;
    }
}
// -----  End of FLOAT LABELS  ---------------------------------------------
/* =============================================================================================
████████  █████  ██████  ██      ███████ ███████
   ██    ██   ██ ██   ██ ██      ██      ██
   ██    ███████ ██████  ██      █████   ███████
   ██    ██   ██ ██   ██ ██      ██           ██
   ██    ██   ██ ██████  ███████ ███████ ███████
============================================================================================= */
table {
    border-collapse: collapse;
}

td,
th {
    border      : 1px solid;
    border-color: inherit;
}

tbody tr:nth-child(even) {
    border: 1px solid $gray-light2;
}

tfoot td,
tfoot th,
thead td,
thead th {
    font-weight: bold;
}
/* -----  End of TABLES  --------------------------------------------- */
/* =============================================================================================

████████  █████  ██████  ███████
   ██    ██   ██ ██   ██ ██
   ██    ███████ ██████  ███████
   ██    ██   ██ ██   ██      ██
   ██    ██   ██ ██████  ███████

============================================================================================= */
.tabs {
    border: 0;
}
// ==============================  VERTICAL TAB STYLES  ==============================

.tabs-title {
    position     : relative;
    margin-bottom: 0;

    a {
        border-width: 1px 1px 1px 6px;
        border-style: solid;
        border-color: $tab-background $tab-content-border $tab-content-border transparent;
        transition  : $button-transition;
        background  : $gray-light2;

        &:focus {
            background: $gray-light2;
            color     : $gray-light1;
        }

        &:hover {
            color     : $gray-light1;
            background: $gray-light3;
        }
    }

    &.is-active a {
        border-width: 1px 1px 1px 6px;
        border-style: solid;
        border-color: $tab-content-border $white $tab-content-border $blue-light;
        background  : $white;
        color       : $blue-dark;
    }

    &[class*="bg-steps"] a {
        border-width: 0;
    }

    &-rounded {
        border-radius: 1000px;
    }
}

.tabs-content {
    &.vertical {
        margin-left: -1px;
        border     : 1px solid $tab-content-border;

        & .tabs-panel {
            min-height: 500px;
        }
    }
}
// ==============================  HORIZONTAL TAB STYLES  ==============================

.tabs:not(.vertical) {
    border: 1px solid $tab-content-border;

    & + .tabs-content {
        border    : 1px solid $tab-content-border;
        border-top: 0;
    }

    .tabs-title {
        border-color : transparent;
        margin-bottom: -1px;

        a {
            border-width: 6px 1px 1px 1px;
            border-style: solid;
            border-color: transparent $tab-background $tab-content-border transparent;
            transition  : $button-transition;
            background  : $gray-light2;
            padding-top : calc(#{$tab-item-padding} - 6px);

            &:focus {
                background: $gray-light2;
                color     : $gray-light1;
            }

            &:hover {
                color     : $gray-light1;
                background: $gray-light3;
            }
        }

        &.is-active a {
            border-width: 6px 1px 1px 1px;
            border-style: solid;
            border-color: $blue-light $tab-content-border $white $white;
            background  : $white;
            color       : $blue-dark;
        }

        &:first-of-type.is-active {
            border-left: 0 solid;
        }

        &:last-of-type.is-active {}
    }
}
@keyframes tab-panel-fade-in {
    0% {
        opacity   : 0;
        max-height: 500px;
    }

    50% {
        opacity: 1;
    }

    100% {
        max-height: 999px;
    }
}
// ==============================  TABS PANEL  ==============================

.tabs-panel {
    &.is-active {
        animation: tab-panel-fade-in 1s ease;
    }
}
// -----  End of TABS  ---------------------------------------------
/* ===================================================================================================
 █████   ██████  ██████  ██████  ██████  ██████  ██  ██████  ███    ██
██   ██ ██      ██      ██    ██ ██   ██ ██   ██ ██ ██    ██ ████   ██
███████ ██      ██      ██    ██ ██████  ██   ██ ██ ██    ██ ██ ██  ██
██   ██ ██      ██      ██    ██ ██   ██ ██   ██ ██ ██    ██ ██  ██ ██
██   ██  ██████  ██████  ██████  ██   ██ ██████  ██  ██████  ██   ████
==================================================================================================== */
.accordion {
    color: $white;
}

.accordion-item {
    margin-bottom: 2px;
    background   : $blue;
    border-radius: 0;
}

.accordion-title {
    @extend %h6;
    text-decoration: none;
    margin         : 0;
    padding-right  : 2.5rem;
    border         : none !important;

    &:before {
        margin-top: -0.75rem;
        font-size : 1.5rem;
    }
}

.accordion-content,
:last-child > .accordion-content:last-child {
    border: 1px solid $gray-light2;
}

a.accordion-title,
a.accordion-title:focus,
a.accordion-title:hover {
    color: $white;
}

.accordion-arrow .accordion-title::before {
    font-family: "Cognizant-Icons";
    content    : "\e907";
    transform  : rotate(90deg);
    font-weight: 600;
    font-size  : inherit;
    margin     : 0;
    padding    : 0;
    line-height: 0;
    color      : $white !important;
}

.accordion-arrow .is-active .accordion-title::before {
    font-family: "Cognizant-Icons";
    content    : "\e907";
    transform  : rotate(-90deg);
    font-weight: 600;
    font-size  : inherit;
    margin     : 0;
    padding    : 0;
    line-height: 0;
    color      : $white !important;
}
/* ==============================  ACCORDION MINIMAL DIVIDER  ============================== */
.accordion-line {
    padding: 0;

    & .accordion-item {
        background: transparent;
        color     : $blue;
    }

    & .accordion-title {
        // line-height: 0;
        // display: inline-block;
        color: $blue;
        // border     : 2px solid $blue !important;
        // padding    : 0.75rem;
    }

    & .accordion-title:before,
    .accordion-title:after {
        content   : "";
        position  : absolute;
        border-top: 1px solid $gray-light2;
        width     : 100%;
        transform : none;
        top       : 50%;
    }

    & .accordion-title:before {
        right       : 100%;
        margin-right: 1rem;
    }

    & .accordion-title:after {
        left       : 100%;
        margin-left: 1rem;
    }

    & .accordion-title:focus {
        background: transparent;
        color     : $blue;
    }
}
/* ----  End of ACCORDION  -------------------------------------------------------------------------- */
// =============================================================================================
// ███████ ██ ██████  ███████     ██      ██ ███    ██ ███████ ███████
// ██      ██ ██   ██ ██          ██      ██ ████   ██ ██      ██
// ███████ ██ ██   ██ █████       ██      ██ ██ ██  ██ █████   ███████
//      ██ ██ ██   ██ ██          ██      ██ ██  ██ ██ ██           ██
// ███████ ██ ██████  ███████     ███████ ██ ██   ████ ███████ ███████
// =============================================================================================
$sidelines-text-padding: 0.5em !default;
$sidelines-line-thickness: 1px !default;
$sidelines-line-length: 9999px !default;
$sidelines-line-color: null !default;
$sidelines-line-style: solid !default;
$sidelines-double-line: false !default;
$sidelines-double-line-spacing: 0.5em !default;
@mixin sidelines($text-padding: $sidelines-text-padding, $line-thickness: $sidelines-line-thickness, $line-length: $sidelines-line-length, $line-color: $sidelines-line-color, $line-style: $sidelines-line-style, $double-line: $sidelines-double-line, $double-line-spacing: $sidelines-double-line-spacing) {
    display    : block;
    text-align : center;
    overflow   : hidden;
    white-space: nowrap;

    span {
        display      : inline-block;
        position     : relative;
        padding-left : $text-padding;
        padding-right: $text-padding;

        &:after,
        &:before {
            content         : '';
            position        : absolute;
            height          : 100%;
            width           : $line-length;
            top             : 50%;
            border-top-style: $line-style;
            border-top-width: $line-thickness;
            @if $line-color != null {
                border-top-color: $line-color;
            }
            @if $double-line {
                border-bottom-style: $line-style;
                border-bottom-width: $line-thickness;
                border-bottom-color: $line-color;
                height             : $double-line-spacing;
                margin-top         : -($double-line-spacing/2);
            } @else 
            if $line-thickness > 1 {
                margin-top: -(floor($line-thickness/2));
            }
        }

        &:before {
            right: 100%;
        }

        &:after {
            left: 100%;
        }
    }
}

.type-sidelines {
    @include sidelines();
}

.double {
    @include sidelines($double-line: true);
}

.custom {
    @include sidelines($text-padding: 20px, $line-length: 100%, $line-color: #2980b9, $line-thickness: 4px, $line-style: dotted);
}

.custom-2 {
    @include sidelines($line-color: #27ae60, $line-thickness: 4px);
}
// -----  End of SIDE LINES  ---------------------------------------------

// =============================================================================================
// ███████ ██      ███████ ██   ██ ██ ██████  ██      ███████
// ██      ██      ██       ██ ██  ██ ██   ██ ██      ██
// █████   ██      █████     ███   ██ ██████  ██      █████
// ██      ██      ██       ██ ██  ██ ██   ██ ██      ██
// ██      ███████ ███████ ██   ██ ██ ██████  ███████ ███████
//  ██████  ██    ██ ███████ ██████  ███████ ██       ██████  ██     ██
// ██    ██ ██    ██ ██      ██   ██ ██      ██      ██    ██ ██     ██
// ██    ██ ██    ██ █████   ██████  █████   ██      ██    ██ ██  █  ██
// ██    ██  ██  ██  ██      ██   ██ ██      ██      ██    ██ ██ ███ ██
//  ██████    ████   ███████ ██   ██ ██      ███████  ██████   ███ ███
// =============================================================================================

// Based on the technique from this article:
// http://kizu.ru/en/blog/flexible-overflow/

// ************************
// EXAMPLE MARKUP
// <span class="overflower">
//   <span
//     class="overflower-short"
//     aria-hidden="true"
//     title="Some long text that could become shorter"
//   >
//     Short text here is.
//   </span>
//   <span class="overflower-long">
//     Some long text that could become shorter.
//   </span>
// </span>
// ************************

.overflower {
    display      : inline-block;
    overflow     : hidden;

    box-sizing   : border-box;
    max-width    : 100%;
    height       : 1.5em;
    line-height  : 1.5em;

    white-space  : nowrap;
    text-overflow: ellipsis;
}

.overflower-long {
    display: inline;
}

.overflower-short {
    display: none;
}

@supports (flex-wrap: wrap) {
    .overflower {
        display  : inline-flex;
        flex-wrap: wrap;
    }

    .overflower-short {
        display      : block;
        overflow     : hidden;

        flex-grow    : 1;
        width        : 0;

        text-overflow: ellipsis;
    }

    .overflower-long {
        flex-basis: 100%;
    }
}

// -----  End of FLEXIBLE OVERFLOW  ---------------------------------------------

// =============================================================================================
// ██████  ██████   ██████  ██████  ██████   ██████  ██     ██ ███    ██
// ██   ██ ██   ██ ██    ██ ██   ██ ██   ██ ██    ██ ██     ██ ████   ██
// ██   ██ ██████  ██    ██ ██████  ██   ██ ██    ██ ██  █  ██ ██ ██  ██
// ██   ██ ██   ██ ██    ██ ██      ██   ██ ██    ██ ██ ███ ██ ██  ██ ██
// ██████  ██   ██  ██████  ██      ██████   ██████   ███ ███  ██   ████
// ███    ███ ███████ ███    ██ ██    ██
// ████  ████ ██      ████   ██ ██    ██
// ██ ████ ██ █████   ██ ██  ██ ██    ██
// ██  ██  ██ ██      ██  ██ ██ ██    ██
// ██      ██ ███████ ██   ████  ██████
// =============================================================================================

.dropdown.menu.arrow-white > li.is-dropdown-submenu-parent > a::after {
    border-top-color: #fff !important;
    //  background: blue;
}
// -----  End of DROPDOWN MENU  ---------------------------------------------
/* =============================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
 ██████  ██████   █████  ██████  ██ ███████ ███    ██ ████████
██       ██   ██ ██   ██ ██   ██ ██ ██      ████   ██    ██
██   ███ ██████  ███████ ██   ██ ██ █████   ██ ██  ██    ██
██    ██ ██   ██ ██   ██ ██   ██ ██ ██      ██  ██ ██    ██
 ██████  ██   ██ ██   ██ ██████  ██ ███████ ██   ████    ██
███████ ████████ ███████ ██████  ███████
██         ██    ██      ██   ██ ██
███████    ██    █████   ██████  ███████
     ██    ██    ██      ██           ██
███████    ██    ███████ ██      ███████

============================================================================================= */
/* ==============================  ACCORDION BARS BACKGROUND COLORS  ============================== */
@for $i from 0 through 100 {
    .accordion-gradient-#{$i} {
        background: mix($green, $blue, $i);
    }
}
/* ==============================  BLUE TO GREEN BACKGROUND COLOR STEPS  ============================== */
@for $i from 0 through 100 {
    .bg-steps-blue-green-#{$i} {
        background: mix($blue, $green, $i);

        > a {
            background: none !important;
        }
    }
}
/* ==============================  BLUE BACKGROUND COLOR STEPS  ============================== */
@for $i from 0 through 100 {
    .bg-steps-blue-#{$i} {
        background: mix($blue-dark, $blue-light, $i);

        > a {
            background: none !important;
        }
    }
}
/* ==============================  GREEN BACKGROUND COLOR STEPS  ============================== */
@for $i from 0 through 100 {
    .bg-steps-green-#{$i} {
        background: mix($green-dark, $green, $i);

        > a {
            background: none !important;
        }
    }
}
// -----  End of BACKGROUND GRADIENT STEPS  ---------------------------------------------
/* ======================================================================================================
 ██████  █████  ██      ██       ██████  ██    ██ ███��██████ ███████
██      ██   ██ ██      ██      ██    ██ ██    ██    ██    ██
██      ███████ ██      ██      ██    ██ ██    ██    ██    ███████
██      ██   ██ ██      ██      ██    ██ ██    ██    ██         ██
 ██████ ██   ██ ███████ ███████  ██████   ██████     ██    ███████
================================================================================================== */
.callout {
    &.small {
        @include callout-size(1rem);
    }
}

.callout > :last-child {
    // margin-bottom: auto;
}
@each $color-name, $color in $colors-primary {
    .callout-#{$color-name} {
        background-color: lighten($color, 20%) !important;
    }
}

.callout-blue-dark,
.callout-gray-dark1,
.callout-gray-dark2,
.callout-gray-medium,
.callout-green-dark {
    color: $white !important;
}

.callout-gradient-black {
    color             : $white;
    background        : rgba(0,0,0,.75);
    border-width      : 4px;
    border-style      : solid;
    border-image      : linear-gradient(to right, $blue-light 0, $green 100%);
    border-image-slice: 1;
}
/* ----  End of CALLOUTS  --------------------------------------------------------------------- */
/* =============================================================================================

 ██████  █████  ██████  ██████  ███████
██      ██   ██ ██   ██ ██   ██ ██
██      ███████ ██████  ██   ██ ███████
██      ██   ██ ██   ██ ██   ██      ██
 ██████ ██   ██ ██   ██ ██████  ███████

============================================================================================= */
.card {
    flex-grow: 1;
}

.card-section + .card-section {
    padding-top: 0;
}
// -----  End of CARDS  ---------------------------------------------
/* =============================================================================================

██       █████  ██████  ███████ ██      ███████
██      ██   ██ ██   ██ ██      ██      ██
██      ███████ ██████  █████   ██      ███████
██      ██   ██ ██   ██ ██      ██           ██
███████ ██   ██ ██████  ███████ ███████ ███████

============================================================================================= */
.label {
    font-weight: bold;
    // text-transform: uppercase;
    font-size  : 15px;
    line-height: inherit;
}
// -----  End of LABELS  ---------------------------------------------
/* ==========================================================================================================
███    ███ ███████ ███    ██ ██    ██           ██    ██ ███████ ██████  ████████ ██  ██████  █████  ██
████  ████ ██      ████   ██ ██    ██           ██    ██ ██      ██   ██    ██    ██ ██      ██   ██ ██
██ ████ ██ █████   ██ ██  ██ ██    ██ █████     ██    ██ █████   ██████     ██    ██ ██      ███████ ██
██  ██  ██ ██      ██  ██ ██ ██    ██            ██  ██  ██      ██   ██    ██    ██ ██      ██   ██ ██
██      ██ ███████ ██   ████  ██████              ████   ███████ ██   ██    ██    ██  ██████ ██   ██ ███████
================================================================================================== */
.menu.vertical > li {
    margin: 0;

    & .active {
        background: $blue;
        color     : $white;
    }
}
/* ----  End of MENU- VERTICAL  --------------------------------------------------------------------- */
/* ===========================================================================================================
███████ ██    ██ ██████  ███    ██  █████  ██    ██
██      ██    ██ ██   ██ ████   ██ ██   ██ ██    ██
███████ ██    ██ ██████  ██ ██  ██ ███████ ██    ██
     ██ ██    ██ ██   ██ ██  ██ ██ ██   ██  ██  ██
███████  ██████  ██████  ██   ████ ██   ██   ████
██████   █████  ██████
██   ██ ██   ██ ██   ██
██████  ███████ ██████
██   ██ ██   ██ ██   ██
██████  ██   ██ ██   ██
================================================================================================== */
#subNavBar a.active,
#subNavBar a:hover {
    background: $blue-dark;
    color     : $white;
}
/* ----  End of SUBNAV BAR  ------------------------------------------------------------------------------------- */
/* =============================================================================================
████████  ██████  ██████
   ██    ██    ██ ██   ██
   ██    ██    ██ ██████
   ██    ██    ██ ██
   ██     ██████  ██
██████   █████  ██████
██   ██ ██   ██ ██   ██
██████  ███████ ██████
██   ██ ██   ██ ██   ██
██████  ██   ██ ██   ██

============================================================================================= */
.no-js {
    @include breakpoint(small only) {
        .top-bar {
            display: none;
        }
    }
    @include breakpoint(medium) {
        .title-bar {
            display: none;
        }
    }
}

.top-bar-left {
    margin-right: auto;
}

.menu > li > a:hover {
    background: transparentize($blue, .8);
    // background: $button-background-hover;
}
/* -----  End of TOP BAR  --------------------------------------------- */
/* =============================================================================================

██████  ███████ ██    ██ ███████  █████  ██
██   ██ ██      ██    ██ ██      ██   ██ ██
██████  █████   ██    ██ █████   ███████ ██
██   ██ ██       ██  ██  ██      ██   ██ ██
██   ██ ███████   ████   ███████ ██   ██ ███████

============================================================================================= */
// -----  End of REVEAL  ---------------------------------------------
/* =============================================================================================

 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████
██  ██████  ██████  ███    ██ ███████
██ ██      ██    ██ ████   ██ ██
██ ██      ██    ██ ██ ██  ██ ███████
██ ██      ██    ██ ██  ██ ██      ██
██  ██████  ██████  ██   ████ ███████

============================================================================================= */
@for $index from 1 through 6 {
    h#{$index}.anim-icon {
        margin     : 0;
        display    : inline-block;
        line-height: 0;
        color      : white;
        font-weight: normal;
        text-align : center;
    }
}

.anim-icon {
    & i {
        transition: all 500ms cubic-bezier(0.770, 0.000, 0.175, 1.000);
        display   : block;

        & + .anim-text {
            font-size : $small-font-size - 15;
            display   : block;
            transition: all, 0.3s;
            transform : translateY(-1rem);
            opacity   : 0;
            transition: all 500ms cubic-bezier(0.770, 0.000, 0.175, 1.000);
            /* easeInOutQuart */
        }
    }

    &:hover i {
        transform: translateY(-.75rem);

        & + .anim-text {
            transform: translateY(0);
            opacity  : 1;
        }
    }
}
// -----  End of ANIMATION- ICONS  ---------------------------------------------
/* =============================================================================================

 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████
███████ ██      ██ ██████  ███████     ██    ██ ██████
██      ██      ██ ██   ██ ██          ██    ██ ██   ██
███████ ██      ██ ██   ██ █████       ██    ██ ██████
     ██ ██      ██ ██   ██ ██          ██    ██ ██
███████ ███████ ██ ██████  ███████      ██████  ██

============================================================================================= */
.anim-slide-up {
    min-height: 200px;

    .slide-up-section1,
    .slide-up-section2 {
        transition: all 0.35s ease;
        transform : translateY(125%);
        height    : 70px;
    }

    .slide-up-section2 {
        opacity: 0;
    }

    &:hover .slide-up-section1,
    &:hover .slide-up-section2 {
        transform: translateY(0%);
    }

    &:hover .slide-up-section2 {
        opacity: 1;
    }
}
// -----  End of ANIMATION SLIDE UP  ---------------------------------------------
/* ==========================================================================================================
███████ ██      ██  ██████ ██   ██
██      ██      ██ ██      ██  ██
███████ ██      ██ ██      █████
     ██ ██      ██ ██      ██  ██
███████ ███████ ██  ██████ ██   ██
 ██████  █████  ██████   ██████  ██    ██ ███████ ███████ ██
██      ██   ██ ██   ██ ██    ██ ██    ██ ██      ██      ██
██      ███████ ██████  ██    ██ ██    ██ ███████ █████   ██
██      ██   ██ ██   ██ ██    ██ ██    ██      ██ ██      ██
 ██████ ██   ██ ██   ██  ██████   ██████  ███████ ███████ ███████
================================================================================================== */
$slick-font-path: "../fonts/slick/";
@font-face {
    font-family: "slick";
    src        : slick-font-url("slick.eot");
    src        : slick-font-url("slick.eot?#iefix") format("embedded-opentype"), slick-font-url("slick.woff") format("woff"), slick-font-url("slick.ttf") format("truetype"),format("truetype"), slick-font-url("slick.svg#slick") format("svg");
    font-weight: normal;
    font-style : normal;
}

.slick-slide {
    overflow: hidden;

    img {
        display: inline-block;
    }
}

.slick-next,
.slick-prev {
    width           : 2rem;
    height          : 2rem;
    transition      : all, 500ms;
    transform-origin: center 100%;
    transform-style : preserve-3D;
}

.slick-prev {
    left: -2rem;
}

.slick-next {
    right: -2rem;
}

.slick-next:focus,
.slick-next:hover,
.slick-prev:focus,
.slick-prev:hover {
    // transform: scale(1.1);
}

.slick-next:before,
.slick-prev:before {
    color      : $black;
    font-size  : 2rem;
    font-family: "Cognizant-Icons";
    font-weight: 600;
    opacity    : 1;
}
@include breakpoint(small only) {
    .slick-next:before,
    .slick-prev:before {
        font-size: 1.2rem;
    }
};

.slick-prev:before {
    content: "\e905";
}

.slick-next:before {
    content: "\e907";
}

.slick-dots li button:before {
    border-radius: 1000px;
    content      : "";
}

.square-dots .slick-dots li {
    margin  : 0 5px;
    height  : 5px;
    width   : 2rem;
    overflow: hidden;
}

.square-dots .slick-dots li button {
    width: 100%;

    &:before {
        border-radius: 0;
    }
}

.square-dots .slick-dots li button:before {
    font-weight: bold;
    width      : 2rem;
}

.square-dots .slick-dots li button:before {
    opacity: 0.5;
}

.square-dots .slick-dots li button:before:hover {
    opacity: 1;
}

.square-dots .slick-dots li.slick-active button:before {
    opacity: 1;
}
/* ==============================  WHITE CONTROLS  ============================== */
.white-dots .slick-dots li button:before {
    background: $white;
}

.white-dots .slick-dots li.slick-active button:before {
    background: $white;
    opacity   : 1;
}

.white-arrows .slick-next:before {
    color: $white;
}

.white-arrows .slick-prev:before {
    color: $white;
}
/* ==============================  BLACK CONTROLS  ============================== */
.black-dots .slick-dots li button:before {
    background: $black;
}

.black-dots .slick-dots li.slick-active button:before {
    background: $black;
    opacity   : 1;
}

.black-arrows .slick-next:before {
    color: $black;
}

.black-arrows .slick-prev:before {
    color: $black;
}
/* ==============================  BLUE CONTROLS  ============================== */
.blue-dots .slick-dots li button:before {
    background: $gray-light1;
}

.blue-dots .slick-dots li.slick-active button:before {
    background: $blue;
    opacity   : 1;
}

.blue-arrows .slick-next:before {
    color: $blue;
}

.blue-arrows .slick-prev:before {
    color: $blue;
}
// ==============================  FULL WIDTH CONTROLS  ==============================

.fw-controls .slick-dots {
    display: flex !important;
}

.fw-controls .slick-dots li {
    flex-grow: 1;
    width    : 100%;
}

.fw-controls .slick-dots li {
    margin : 0;
    padding: 0;
}

.fw-controls .slick-dots li button:before {
    background: $black;
    width     : 100%;
}

.fw-controls .slick-dots li.slick-active button:before {
    background: linear-gradient(to right, $blue, $green);
    opacity   : 1;
}
// ==============================  INSIDE ARROWS  ==============================

.inside-arrows {
    & .slick-prev {
        left   : 0;
        z-index: 1;
    }

    & .slick-next {
        right: 0;
    }
}
@include breakpoint(small only) {
    .inside-arrows {
        & .slick-prev {
            left: 0;
        }

        & .slick-next {
            right: 0;
        }
    }
}
// ==============================  INSIDE DOTS  ==============================

.inside-dots {
    & .slick-dots {
        bottom: 1rem;
    }
}
/* ----  End of SLICK CAROUSEL  -------------------------------------------------------------------------- */
/* ===========================================================================================================
███████  ██████ ██████   ██████  ██      ██      ██    ██ ██████
██      ██      ██   ██ ██    ██ ██      ██      ██    ██ ██   ██
███████ ██      ██████  ██    ██ ██      ██      ██    ██ ██████
     ██ ██      ██   ██ ██    ██ ██      ██      ██    ██ ██
███████  ██████ ██   ██  ██████  ███████ ███████  ██████  ██
=========================================================================================================== */
#scrollUp {
    font-size          : 75%;
    bottom             : 10px;
    right              : 10px;
    padding            : 0 0 0 1rem;
    background         : rgba(0,114,143,0.85);
    background-position: right center;
    color              : $white;
}

#scrollUp:after {
    font-family: "Cognizant-Icons";
    content    : "\e909";
    color      : #fff;
    font-weight: 600;
    margin     : 0 0 0 1rem;
    padding    : 0.5rem;
    background : #00708c;
    display    : inline-block!important;
}

.scrollup--show {
    // bottom    : 1rem;
    // right     : 1rem;
    position       : fixed;
    @include mui-fade(in);
    display        : flex;
    flex-direction : column;
    justify-content: space-between;
    align-items    : flex-end;
    z-index        : 10;
    padding        : 5rem 1rem 1rem;

    & .button {
        background: transparentize($blue-dark, .15);
    }
}

.scrollUpContactUs--show {
    top       : 1rem;
    right     : 1rem;
    background: transparentize($blue-dark, .15);
    position  : fixed;
}
/* ----  End of SCROLLUP  --------------------------------------------------------------------- */
/* ===========================================================================================================
███████ ███████ ██      ███████  ██████ ████████     ██████
██      ██      ██      ██      ██         ██             ██
███████ █████   ██      █████   ██         ██         █████
     ██ ██      ██      ██      ██         ██        ██
████�����██ ███████ ███████ ███████  ██████    ██        ███████
================================================================================================== */
.select2 {
    // margin-bottom: $form-spacing;
}

.select2-selection--single {
    // padding: 0.625rem;
    // height : 100% !important;
    padding: 0.4rem;
    height : 2.25rem !important;
}

.select2-selection__placeholder {
    color: $body-font-color !important;
}

.select2-container--default .select2-results__option--highlighted[aria-selected] {
    background-color: $blue;
}

.select2-results__option {
    margin : 0;
    padding: 0.5rem;
}

.select2-dropdown--above,
.select2-dropdown--below {
    padding: 0.5rem;
}

.select2-container--default .select2-results > .select2-results__options {
    // min-height: 400px;
    // overflow-y: auto;
}

.select2-selection__arrow {
    height: 100% !important;
    right : 18px !important;
    top   : -2px !important;

    b {
        border-color: $gray-light1 transparent transparent transparent !important;
        border-style: solid;
        border-width: 9px 8px 0 8px !important;
    }
}

.select2-container--open {
    .select2-selection--single {
        .select2-selection__arrow {
            b {
                border-color: transparent transparent $gray-light1 transparent !important;
                border-width: 0 8px 9px 8px !important;
            }
        }
    }
}

.select2-container--default .select2-selection--single {
    border-radius: 0;
    border-color : $gray-light2;
}

.select2-dropdown {
    border-color: $blue;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.select2-search__field:focus {
    border-color: $gray-light2;
    border      : $input-border-focus !important;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple,
.select2-container--default.select2-container--open.select2-container--below .select2-selection--single {
    border-color: $gray-light2;
    border      : $input-border-focus !important;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.img-flag {
    margin-right: 0.5rem;
}
/* ----  End of SELECT 2  --------------------------------------------------------------------- */
/* =============================================================================================
███████  ██████   ██████  ████████ ███████ ██████
██      ██    ██ ██    ██    ██    ██      ██   ██
█████   ██    ██ ██    ██    ██    █████   ██████
██      ██    ██ ██    ██    ██    ██      ██   ██
██       ██████   ██████     ██    ███████ ██   ██
============================================================================================= */
.footer-blue-bar {
    li a:hover {
        background: $button-background-hover;
    }
}

.footer {
    ul li {
        // margin-bottom: 0.5rem !important;
    }

    a:hover {
        color: $blue !important;
    }
}
/* -----  End of FOOTER  --------------------------------------------- */
/* =============================================================================================

██████  ███████  █████  ██████
██   ██ ██      ██   ██ ██   ██
██████  █████   ███████ ██   ██
██   ██ ██      ██   ██ ██   ██
██   ██ ███████ ██   ██ ██████
███    ███  ██████  ██████  ███████
████  ████ ██    ██ ██   ██ ██
██ ████ ██ ██    ██ ██████  █████
██  ██  ██ ██    ██ ██   ██ ██
██      ██  ██████  ██   ██ ███████
██      ██ ███    ██ ██   ██
██      ██ ████   ██ ██  ██
██      ██ ██ ██  ██ █████
██      ██ ██  ██ ██ ██  ██
███████ ██ ██   ████ ██   ██

============================================================================================= */
.read-more {
    position     : relative;
    padding-right: 1rem;
}

a.morelink {
    position   : absolute;
    top        : 0;
    right      : 0;
    font-family: "Cognizant-Icons";
    // color      : $gray-light1;
    transition : all 0.25s ease-out;

    &.less {
        transform: rotate(135deg);
        color    : $blue-light;
    }
}

.morecontent span {
    display: none;
}
// -----  End of READ MORE LINK  ---------------------------------------------
/* =============================================================================================

██████  ██████  ██  ██████  ██████  ██ ████████ ██    ██
██   ██ ██   ██ ██ ██    ██ ██   ██ ██    ██     ██  ██
██████  ██████  ██ ██    ██ ██████  ██    ██      ████
██      ██   ██ ██ ██    ██ ██   ██ ██    ██       ██
██      ██   ██ ██  ██████  ██   ██ ██    ██       ██
███    ██  █████  ██    ██
████   ██ ██   ██ ██    ██
██ ██  ██ ███████ ██    ██
██  ██ ██ ██   ██  ██  ██
██   ████ ██   ██   ████

============================================================================================= */
.priority-nav__dropdown {
    position       : inherit;
    background     : $blue;
    padding        : 1rem;
    list-style-type: none;
}
// -----  End of PRIORITY NAV  ---------------------------------------------
/* =============================================================================================

██████  ██   ██    ██ ██████
██   ██ ██    ██  ██  ██   ██
██████  ██     ████   ██████
██      ██      ██    ██   ██
██      ███████ ██    ██   ██

============================================================================================= */
// $plyr-color-main: $blue;
// $plyr-font-family: "Proxima Nova";
// $plyr-font-size-small: 15px;
// $plyr-font-size-base: 20px; 
// -----  End of PLYR  ---------------------------------------------
/* =============================================================================================

██       █████  ████████ ███████ ███████ ████████
██      ██   ██    ██    ██      ██         ██
██      ███████    ██    █████   ███████    ██
██      ██   ██    ██    ██           ██    ██
███████ ██   ██    ██    ███████ ███████    ██
████████ ██   ██ ██ ███    ██ ██   ██ ██ ███    ██  ██████
   ██    ██   ██ ██ ████   ██ ██  ██  ██ ████   ██ ██
   ██    ███████ ██ ██ ██  ██ █████   ██ ██ ██  ██ ██   ███
   ██    ██   ██ ██ ██  ██ ██ ██  ██  ██ ██  ██ ██ ██    ██
   ██    ██   ██ ██ ██   ████ ██   ██ ██ ██   ████  ██████
██   ██ ███████  █████  ██████  ███████ ██████
██   ██ ██      ██   ██ ██   ██ ██      ██   ██
███████ █████   ███████ ██   ██ █████   ██████
██   ██ ██      ██   ██ ██   ██ ██      ██   ██
██   ██ ███████ ██   ██ ██████  ███████ ██   ██
██ ███    ███  █████   ██████  ███████
██ ████  ████ ██   ██ ██       ██
██ ██ ████ ██ ███████ ██   ███ █████
██ ██  ██  ██ ██   ██ ██    ██ ██
██ ██      ██ ██   ██  ██████  ███████

============================================================================================= */
.lt-header-image {
    height  : 100px;
    overflow: hidden;

    & img {
        // object-fit: cover !important;
        width: 100%;
        // height: 100px;
    }
}

.object-fit-cover {
    object-fit: cover;
}

.object-fit-contain {
    object-fit: contain;
}

.object-position-top-left {
    object-position: 0 0;
}

.object-position-top-right {
    object-position: 0 100%;
}

.object-position-top-center {
    object-position: 0 50%;
}

.object-position-bottom-left {
    object-position: 100% 0;
}

.object-position-bottom-right {
    object-position: 100% 100%;
}

.object-position-bottom-center {
    object-position: 100% 50%;
}

.object-position-center {
    object-position: 50% 50%;
}
// -----  End of LATEST THINKING HEADER IMAGE  ---------------------------------------------
/* =============================================================================================

██████  ███████ ██    ██ ███████  █████  ██
██   ██ ██      ██    ██ ██      ██   ██ ██
██████  █████   ██    ██ █████   ███████ ██
██   ██ ██       ██  ██  ██      ██   ██ ██
██   ██ ███████   ████   ███████ ██   ██ ███████

============================================================================================= */
.reveal {
    outline-width: 0;
}
// -----  End of REVEAL  ---------------------------------------------
/* =============================================================================================

██   ██ ███████  █████  ██████  ███████ ██████      ███    ███ ███████ ███    ██ ██    ██
██   ██ ██      ██   ██ ██   ██ ██      ██   ██     ████  ████ ██      ████   ██ ██    ██
███████ █████   ███████ ██   ██ █████   ██████      ██ ████ ██ █████   ██ ██  ██ ██    ██
██   ██ ██      ██   ██ ██   ██ ██      ██   ██     ██  ██  ██ ██      ██  ██ ██ ██    ██
██   ██ ███████ ██   ██ ██████  ███████ ██   ██     ██      ██ ███████ ██   ████  ██████

============================================================================================= */
@keyframes fadeInRotate {
    0% {
        transform: translateY(-100px);
        opacity  : 0;
    }

    100% {
        transform: translateY(0);
        opacity  : 1;
    }
}

.header-menu {
    // background         : url("../content/dam/cognizant_foundation/images/gradient-top.png") no-repeat;
    background-size    : 100% 100%;
    background-position: center top;
    z-index            : 2;

    & .button {
        &::after {
            font-family: "Cognizant-Ions";
            content    : "\e903";
            font-weight: bold;
            font-size  : $small-font-size;
            margin-left: 0.5rem;
            margin-top : 2px;
        }

        &:hover {
            background: rgba(39,51,56,.99) !important;
        }

        &.hover {
            background: rgba(39,51,56,.99) !important;

            &::after {
                content  : "\e91a" !important;
                animation: fadeInRotate 0.5s;
            }
        }
    }

    & .dropdown-pane {
        // background         : rgba(39,51,56,.99) url("../images/nav-mesh.svg") no-repeat;
        background-size    : contain;
        background-position: center bottom;
        left               : 0 !important;
        width              : 100% !important;

        & .is-open {
            // transition: visibility 0s !important;
        }
    }
}
// -----  End of HEADER MENU  ---------------------------------------------
// 
/* =============================================================================================

██████  ██████  ██ ██      ██      ██████   ██████  ██     ██ ███    ██
██   ██ ██   ██ ██ ██      ██      ██   ██ ██    ██ ██     ██ ████   ██
██   ██ ██████  ██ ██      ██      ██   ██ ██    ██ ██  █  ██ ██ ██  ██
██   ██ ██   ██ ██ ██      ██      ██   ██ ██    ██ ██ ███ ██ ██  ██ ██
██████  ██   ██ ██ ███████ ███████ ██████   ██████   ███ ███  ██   ████

============================================================================================= */
.is-drilldown-submenu-parent > a::after {
    font-family: "Cognizant-Icons";
    content    : "\e907";
    border     : none;
    margin-top : 0;
    top        : 30%;
    font-size  : $small-font-size;
    font-weight: bold;
}

.js-drilldown-back > a::before {
    font-family : "Cognizant-Icons";
    content     : "\e905";
    border      : none;
    margin-top  : 2px;
    margin-right: 1rem;
    font-size   : $small-font-size;
    font-weight : bold;
}
// -----  End of DRILLDOWN  ---------------------------------------------
/* =============================================================================================

███████ ████████ ██  ██████ ██   ██ ██    ██
██         ██    ██ ██      ██  ██   ██  ██
███████    ██    ██ ██      █████     ████
     ██    ██    ██ ██      ██  ██     ██
███████    ██    ██  ██████ ██   ██    ██
 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ �█ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████

============================================================================================= */
@keyframes slideInDown {
    from {
        transform : translate3d(0, -100%, 0);
        visibility: visible;
    }

    to {
        transform: translate3d(0, 0, 0);
    }
}
@keyframes slideInUp {
    from {
        transform: translate3d(0, 100%, 0);
    }

    to {
        visibility: hidden;
        transform : translate3d(0, 0%, 0);
    }
}

.sticky.is-anchored {
    // animation: slideInUp 0.5s;
}

.sticky.is-stuck {
    animation: slideInDown 0.5s;
}
// -----  End of STICKY ANIMATION  ---------------------------------------------

#navBar-gray {
    hyphens: auto;
}
/* =============================================================================================

███    ██  █████  ██    ██
████   ██ ██   ██ ██    ██
██ ██  ██ ██�█████ ██    ██
██  ██ ██ ██   ██  ██  ██
██   ████ ██   ██   ████
██████  ██      ██    ██ ███████     ██████   █████  ██████
██   ██ ██      ██    ██ ██          ██   ██ ██   ██ ██   ██
██████  ██      ██    ██ █████       ██████  ███████ ██████
██   ██ ██      ██    ██ ██          ██   ██ ██   ██ ██   ██
██████  ███████  ██████  ███████     ██████  ██   ██ ██   ██

============================================================================================= */
.blue-bar {
    & a {
        color: $white;

        &:hover {
            background: $white !important;
            color     : $blue-dark;
        }
    }

    & a.active {
        background: transparentize($white, .80) !important;

        &:hover {
            background: $white !important;
            color     : $blue-dark;
        }
    }
}
// -----  End of NAV BLUE BAR  ---------------------------------------------
/* =============================================================================================

██    ██ ██ ██████  ███████  ██████
██    ██ ██ ██   ██ ██      ██    ██
██    ██ ██ ██   ██ █████   ██    ██
 ██  ██  ██ ██   ██ ██      ██    ██
  ████   ██ ▖�█ ██████  ███████  ██████
██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████

=============================================================================================*/
.video-background {
    position: relative;
    overflow: hidden;
    // z-index: -1;
    video {
        position  : absolute;
        left      : 50%;
        top       : 50%;
        width     : 100%;
        min-width : 100%;
        min-height: 100%;
        transform : translate(-50%,-50%);
        z-index   : -1;
        object-fit: cover;
    }
}

div iframe.video {
    position  : absolute;
    top       : 0;
    left      : 0;
    width     : 100%;
    height    : 100%;
    object-fit: cover;
}
// -----  End of VIDEO BACKGROUND  ---------------------------------------------
/* =============================================================================================

██     ██  ██████  ██████  ██      ██████  ██     ██ ██ ██████  ███████
██     ██ ██    ██ ██   ██ ██      ██   ██ ██     ██ ██ ██   ██ ██
██  █  ██ ██    ██ ██████  ██      ██   ██ ██  █  ██ ██ ██   ██ █████
██ ███ ██ ██    ██ ██   ██ ██      ██   ██ ██ ███ ██ ██ ██   ██ ██
 ███ ███   ██████  ██   ██ ███████ ██████   ███ ███  ██ ██████  ███████
███    ███ ███████ ███    ██ ██    ██
████  ████ ██      ████   ██ ██    ██
██ ████ ██ █████   ██ ██  ██ ██    ██
██  ██  ██ ██      ██  ██ ██ ██    ██
██      ██ ███████ ██   ████  ██████

============================================================================================= */
#language-menu li > a {
    display       : table;
    vertical-align: middle;
    width         : 100%;
}
// -----  End of WORLDWIDE MENU  ---------------------------------------------
/* =============================================================================================

 ██████ ██       ██████  ███████ ███████     ██████  ██    ██ ████████ ████████  ██████  ███    ██
██      ██      ██    ██ ██      ██          ██   ██ ██    ██    ██       ██    ██    ██ ████   ██
██      ██      ██    ██ ███████ █████       ██████  ██    ██    ██       ██    ██    ██ ██ ██  ██
██      ██      ██    ██      ██ ██          ██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██
 ██████ ███████  ██████  ███████ ███████     ██████   ██████     ██       ██     ██████  ██   ████

============================================================================================= */
.reveal {
    overflow: visible;

    .close-button.outside {
        top          : -1rem;
        right        : 0;
        font-size    : $small-font-size;
        display      : flex;
        align-content: middle;
        margin       : 0;
        line-height  : 0;

        span {
            font-size  : 2rem;
            margin-left: 0.5rem;
        }
    }
}
// -----  End of CLOSE BUTTON  ---------------------------------------------
/* =============================================================================================

 █████  ███    ██ ██ ███    ███ ███████ ██ ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██      ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██      ██ ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ███████ ██    ██    ██  ██████  ██   ████

============================================================================================= */
.animsition-loading,
.animsition-loading:after {
    width        : 32px;
    height       : 32px;
    position     : fixed;
    top          : 50%;
    left         : 50%;
    margin-top   : -16px;
    margin-left  : -16px;
    border-radius: 50%;
    z-index      : 100;
}

.animsition-loading {
    background-color         : transparent;
    border-top               : 5px solid rgba($blue, 1);
    border-right             : 5px solid rgba($blue, 1);
    border-bottom            : 5px solid rgba($blue, 1);
    border-left              : 5px solid rgba($black, .1);
    transform                : translateZ(0);
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-duration       : 0.8s;
    animation-name           : animsition-loading;
}
// -----  End of ANIMSITION  ---------------------------------------------
// =============================================================================================
// ██       █████  ███████ ██    ██ ███████ ██ ███████ ███████ ███████
// ██      ██   ██    ███   ██  ██  ██      ██    ███  ██      ██
// ██      ███████   ███     ████   ███████ ██   ███   █████   ███████
// ██      ██   ██  ███       ██         ██ ██  ███    ██           ██
// ███████ ██   ██ ███████    ██    ███████ ██ ███████ ███████ ███████
// =============================================================================================

.lazyload,
.lazyloading {
    opacity: 0;
}

.lazyloaded {
    opacity   : 1;
    transition: opacity 300ms;
}
// -----  End of LAZYSIZES  ---------------------------------------------
/* =============================================================================================

██████   █████  ██████  ████████ ███    ██ ███████ ██████
██   ██ ██   ██ ██   ██    ██    ████   ██ ██      ██   ██
██████  ███████ ██████     ██    ██ ██  ██ █████   ██████
██      ██   ██ ██   ██    ██    ██  ██ ██ ██      ██   ██
██      ██   ██ ██   ██    ██    ██   ████ ███████ ██   ██
██       ██████   ██████   ██████  ███████
██      ██    ██ ██       ██    ██ ██
██      ██    ██ ██   ███ ██    ██ ███████
██      ██    ██ ██    ██ ██    ██      ██
███████  ██████   ██████   ██████  ███████

============================================================================================= */
.partner-logo {
    max-width : 200px;
    min-height: 75px;
    max-height: 75px;
}
// -----  End of PARTNER LOGOS  ---------------------------------------------

// =============================================================================================
// ██████   █████  ███    ██ ███    ██ ███████ ██████  ███████
// ██   ██ ██   ██ ████   ██ ████   ██ ██      ██   ██ ██
// ██████  ███████ ██ ██  ██ ██ ██  ██ █████   ██████  ███████
// ██   ██ ██   ██ ██  ██ ██ ██  ██ ██ ██      ██   ██      ██
// ██████  ██   ██ ██   ████ ██   ████ ███████ ██   ██ ███████
// =============================================================================================
.banner-header {
    background-size    : cover;
    background-position: center center;
    @include breakpoint(small only) {
        .row {
            min-height: 350px;
            display   : block;
        }
    };
    @include breakpoint(medium) {
        .row {
            min-height: 500px;
        }
    };
}

.banner-logoLockup {
    background: rgba(255,255,255,.9);
    @include breakpoint(small only) {
        max-width    : 150px;
        margin-bottom: 1rem;
    };
}

.banner-mesh {
    background-position: bottom left;
    background-repeat  : no-repeat;

    @include breakpoint(small) {
        background-size: contain;
    };

    @include breakpoint(medium) {
        background-size: 75%;
    };

    @include breakpoint(large) {
        background-size: 50%;
    };
}
// -----  End of BANNERS  ---------------------------------------------

.hover-hide {
    visibility: visible;
}

.hover-hide:hover {
    visibility: hidden;
}

.hover-show {
    opacity   : 0;
    transition: all 0.2s ease-out;
}

.hover-show:hover {
    opacity: 1;
}
