@charset 'utf-8';

@import 'settings';
@import '../node_modules/foundation-sites/scss/foundation.scss';
@import '../node_modules/motion-ui/src/motion-ui.scss';

// GLOBAL STYLES
@include foundation-global-styles;
@include foundation-forms;
@include foundation-typography;

// GRIDS (choose one)
// @include foundation-xy-grid-classes;
// @include foundation-grid;
@include foundation-flex-grid;

// GENERIC COMPONENTS
@include foundation-button;
// @include foundation-button-group;
@include foundation-close-button;
@include foundation-label;
// @include foundation-progress-bar;
// @include foundation-slider;
@include foundation-switch;
@include foundation-table;

// BASIC COMPONENTS
// @include foundation-badge;
@include foundation-breadcrumbs;
@include foundation-callout;
@include foundation-card;
@include foundation-dropdown;
@include foundation-pagination;
@include foundation-tooltip;

// CONTAINERS
@include foundation-accordion;
@include foundation-media-object;
// @include foundation-orbit;
@include foundation-responsive-embed;
@include foundation-tabs;
// @include foundation-thumbnail;

// MENU-BASED CONTAINERS
@include foundation-menu;
// @include foundation-menu-icon;
@include foundation-accordion-menu;
// @include foundation-drilldown-menu;
@include foundation-dropdown-menu;

// LAYOUT COMPONENTS
@include foundation-off-canvas;
@include foundation-reveal;
@include foundation-sticky;
@include foundation-title-bar;
// @include foundation-top-bar;

// HELPERS
@include foundation-float-classes;
@include foundation-flex-classes;
@include foundation-visibility-classes;
// @include foundation-prototype-classes;

// MOTION UI
@include motion-ui-transitions;
@include motion-ui-animations;

// ====================================================================================
// FONTS
// ====================================================================================
@import "../fonts/ProximaNovaFonts/ProximaNova.scss";
$icomoon-font-path: "../fonts/Cognizant-Icons-FONT/fonts";
@import "../fonts/Cognizant-Icons-FONT/style.scss";

// ====================================================================================
// PLUGINS
// ====================================================================================
@import "../node_modules/aos/src/sass/aos.scss";
@import "../node_modules/slick-carousel/slick/slick-theme.scss";
@import "../node_modules/slick-carousel/slick/slick.scss";
@import "../node_modules/hamburgers/_sass/hamburgers/hamburgers.scss";

/* ===========================================================================================
██████  ███████ ██████  ██    ██  ██████   ██████  ██ ███    ██  ██████
██   ██ ██      ██   ██ ██    ██ ██       ██       ██ ████   ██ ██
██   ██ █████   ██████  ██    ██ ██   ███ ██   ███ ██ ██ ██  ██ ██   ███
██   ██ ██      ██   ██ ██    ██ ██    ██ ██    ██ ██ ██  ██ ██ ██    ██
██████  ███████ ██████   ██████   ██████   ██████  ██ ██   ████  ██████
=========================================================================================== */
* {
    // background-color: rgba(0,255,0,0.1);
}
/* ----  End of DEBUGGING  -------------------------------------------------------------------------- */
/*====================================================================================

███    ███  ██████  ████████ ██  ██████  ███    ██     ██    ██ ██
████  ████ ██    ██    ██    ██ ██    ██ ████   ██     ██    ██ ██
██ ████ ██ ██    ██    ██    ██ ██    ██ ██ ██  ██     ██    ██ ██
██  ██  ██ ██    ██    ██    ██ ██    ██ ██  ██ ██     ██    ██ ██
██      ██  ██████     ██    ██  ██████  ██   ████      ██████  ██

====================================================================================*/
// $motion-ui-easings: ( default: bounce-in, linear: linear, ease: ease, ease-in: ease-in, ease-out: ease-out, ease-in-out: ease-in-out, bounce-in: cubic-bezier(0.485, 0.155, 0.24, 1.245), bounce-out: cubic-bezier(0.485, 0.155, 0.515, 0.845), bounce-in-out: cubic-bezier(0.76, -0.245, 0.24, 1.245), );
// -----  End of MOTION UI  ---------------------------------------------
/* ====================================================================================
██    ██ ████████ ██ ██      ██ ████████ ██    ██
██    ██    ██    ██ ██      ██    ██     ██  ██
██    ██    ██    ██ ██      ██    ██      ████
██    ██    ██    ██ ██      ██    ██       ██
 ██████     ██    ██ ███████ ██    ██       ██
==================================================================================== */
[data-sticky] {
    // width    : 100%;
    // max-width: $global-width !important;
}

br {
    clear: both;
}

%radius,
.radius {
    border-radius: 4px;
}

%rounded,
.rounded::after,
.rounded::before {
    border-radius: 1000px;
}
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @if $size != $-zf-zero-breakpoint {
            .#{$size}-rounded {
                border-radius: 1000px;
            }
        } @else {
            .rounded {
                border-radius: 1000px;
            }
        }
    }
}
/* -----  End of UTILITY  --------------------------------------------- */
/* ==================================================================================================
██████   ██████  ███████ ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██    ██ ██      ██    ██    ██ ██    ██ ████   ██ ██
██████  ██    ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██      ██    ██      ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██       ██████  ███████ ██    ██    ██  ██████  ██   ████ ███████
========================================================================================= */
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $position in (inherit, relative, absolute, fixed) {
            @if $size != $-zf-zero-breakpoint {
                .#{$size}-#{$position} {
                    position: $position !important;
                }
            } @else {
                .#{$position} {
                    position: $position !important;
                }
            }
        }
    }
}

%top,
.top {
    top: 0;
}

%bottom,
.bottom {
    bottom: 0;
}

%overflow-scroll,
.overflow-scroll {
    overflow: scroll;
}

%overflow-scroll-x,
.overflow-scroll-x {
    overflow-x: scroll;
}

%overflow-hidden-x,
.overflow-hidden-x {
    overflow-x: hidden;
}

%overflow-scroll-y,
.overflow-scroll-y {
    overflow-y: scroll;
}

%overflow-hidden-y,
.overflow-hidden-y {
    overflow-y: hidden;
}

%overflow-visible,
.overflow-visible {
    overflow: visible;
}

%overflow-hidden,
.overflow-hidden {
    overflow: hidden;
}

%block,
.block {
    display: block !important;
}

%inline,
.inline {
    display: inline !important;
}

%inline-block,
.inline-block {
    display: inline-block !important;
}

.flex {
    display: flex !important;
}
/* ----  End of POSITIONS  --------------------------------------------------------------------- */
/* ==================================================================================================
██     ██ ██ ██████  ████████ ██   ██
██     ██ ██ ██   ██    ██    ██   ██
██  █  ██ ██ ██   ██    ██    ███████
██ ███ ██ ██ ██   ██    ██    ██   ██
 ███ ███  ██ ██████     ██    ██   ██
 ██████  ██    ██ ███████ ██████  ██████  ██ ██████  ███████ ███████
██    ██ ██    ██ ██      ██   ██ ██   ██ ██ ██   ██ ██      ██
██    ██ ██    ██ █████   ██████  ██████  ██ ██   ██ █████   ███████
██    ██  ██  ██  ██      ██   ██ ██   ██ ██ ██   ██ ██           ██
 ██████    ████   ███████ ██   ██ ██   ██ ██ ██████  ███████ ███████
========================================================================================= */
$widths: 20;
@for $i from 1 through $widths {
    .w#{$i*5} {
        width: $i*5%;
        // max-width: $i*5%;
    }
}
@for $i from 1 through $widths {
    .max-w#{$i*5} {
        max-width: $i*5%;
    }
}
@for $i from 1 through $widths {
    .min-w#{$i*5} {
        min-width: $i*5%;
    }
}

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-w66 {
            width: 66%;
        }

        .#{$size}-w33 {
            width: 33%;
        }
    }
}

.w100px {
    width: 100px;
}

.w100vw {
    width: 100vw;
}
/* ----  End of WIDTH OVERRIDES  --------------------------------------------------------------------- */
/* ==================================================================================================
██   ██ ███████ ██  ██████  ██   ██ ████████
██   ██ ██      ██ ██       ██   ██    ██
███████ █████   ██ ██   ███ ███████    ██
██   ██ ██      ██ ██    ██ ██   ██    ██
██   ██ ███████ ██  ██████  ██   ██    ██
 ██████  ██    ██ ███████ ██████  ██████  ██ ██████  ███████ ███████
██    ██ ██    ██ ██      ██   ██ ██   ██ ██ ██   ██ ██      ██
██    ██ ██    ██ █████   ██████  ██████  ██ ██   ██ █████   ███████
██    ██  ██  ██  ██      ██   ██ ██   ██ ██ ██   ██ ██           ██
 ██████    ████   ███████ ██   ██ ██   ██ ██ ██████  ███████ ███████
========================================================================================= */
$heights: 20;
// @for $i from 7 through $heights {
//     .h#{$i} {
//         height: $i + px !important;
//     }
// }
@for $i from 1 through $heights {
    .h#{$i*5}vh {
        height: $i*5 + vh !important;
    };
}
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-h25 {
            height: 25%;
        }

        .#{$size}-h33 {
            height: 33.3333%;
        }

        .#{$size}-h50 {
            height: 50%;
        }

        .#{$size}-h66 {
            height: 66.6666%;
        }

        .#{$size}-h75 {
            height: 75%;
        }

    }
}

.h100 {
    height: 100%;
    // min-height: 100%;
}

.h500px {
    height: 500px;
}

.h300px {
    height: 300px;
}

.h100vh {
    height: 100vh;
}
/* ----  End of HEIGHT OVERRIDES  --------------------------------------------------------------------- */
/* ====================================================================================

 ██████  ██████   █████   ██████ ██ ████████ ██ ███████ ███████
██    ██ ██   ██ ██   ██ ██      ██    ██    ██ ██      ██
██    ██ ██████  ███████ ██      ██    ██    ██ █████   ███████
██    ██ ██      ██   ██ ██      ██    ██    ██ ██           ██
 ██████  ██      ██   ██  ██████ ██    ██    ██ ███████ ███████

==================================================================================== */
$opacities: 20;
@for $i from 1 through $opacities {
    .opacity-#{$i*10} {
        opacity: unquote(".") + $i*10;
    }
}
// -----  End of OPACITIES  ---------------------------------------------
/* ====================================================================================

███████      ██ ███    ██ ██████  ███████ ██   ██
   ███       ██ ████   ██ ██   ██ ██       ██ ██
  ███  █████ ██ ██ ██  ██ ██   ██ █████     ███
 ███         ██ ██  ██ ██ ██   ██ ██       ██ ██
███████      ██ ██   ████ ██████  ███████ ██   ██

====================================================================================*/
$zindexes: 11;
@for $i from -11 through $zindexes {
    .z#{$i} {
        z-index: $i !important;
    }
}
// -----  End of Z-INDEX  ---------------------------------------------
/* ====================================================================================
███████ ██      ███████ ██   ██
██      ██      ██       ██ ██
█████   ██      █████     ███
██      ██      ██       ██ ██
██      ███████ ███████ ██   ██
 ██████  ██████  ██ ██████
██       ██   ██ ██ ██   ██
██   ███ ██████  ██ ██   ██
██    ██ ██   ██ ██ ██   ██
 ██████  ██   ██ ██ ██████
 █████  ██████  ██████  ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██   ██ ██   ██ ██    ██    ██ ██    ██ ████   ██ ██
███████ ██   ██ ██   ██ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██   ██ ██   ██ ██   ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██   ██ ██████  ██████  ██    ██    ██  ██████  ██   ████ ███████
==================================================================================== */
.flex-wrap {
    flex-wrap: wrap !important;
}

.flex-grow {
    flex-grow: 1 !important;
}

.flex-dir-row {
    flex-direction: row;
}

.flex-child-auto {
    flex: 1 1 auto;
}

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-flex-container {
            display: flex !important;
        }

        .#{$size}-shrink {
            flex     : 0 0 auto;
            max-width: 100%;
        }

        .#{$size}-flex-dir-row {
            flex-direction: row;
        }

        .#{$size}-flex-child-auto {
            flex: 1 1 auto;
        }

        .#{$size}-align-top {
            align-items: flex-start;
        }

        .#{$size}-align-bottom {
            align-items: flex-end;
        }

        .#{$size}-align-middle {
            align-items: center;
        }

        .#{$size}-align-center {
            justify-content: center;
        }

        .#{$size}-align-left {
            justify-content: flex-start;
        }

        .#{$size}-align-right {
            justify-content: flex-end;
        }
    }
}
/* -----  End of FLEX GRID ADDITIONS  --------------------------------------------- */
/* ====================================================================================
██     ██ ██   ██ ██ ████████ ███████
██     ██ ██   ██ ██    ██    ██
██  █  ██ ███████ ██    ██    █████
██ ███ ██ ██   ██ ██    ██    ██
 ███ ███  ██   ██ ██    ██    ███████
███████ ██████   █████   ██████ ███████
██      ██   ██ ██   ██ ██      ██
███████ ██████  ███████ ██      █████
     ██ ██      ██   ██ ██      ██
███████ ██      ██   ██  ██████ ███████
========================================================================================= */
$whitespace: 12;
/* ==============================  MARGINS  ============================== */
$margin-sides-all-positive: (m);
$margin-sides-all-negative: (mn);
$margin-sides-positive: (
    mt: top,
    mr: right,
    mb: bottom,
    ml: left
);
$margin-sides-negative: (
    mtn: top,
    mrn: right,
    mbn: bottom,
    mln: left
);
$margin-x-positive: (mx);
$margin-y-positive: (my);
$margin-x-negative: (mxn);
$margin-y-negative: (myn);

$padding-sides-all: (p);
$padding-sides: (
    pt: top,
    pr: right,
    pb: bottom,
    pl: left
);
$padding-x: (px);
$padding-y: (py);
// ==============================  HALF SIZES  ==============================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $side in $margin-sides-all-positive {
            .#{$size}-#{$side}-half {
                margin: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-sides-positive {
            .#{$size}-#{$side}-half {
                margin-#{$sideHalf}: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-x-positive {
            .#{$size}-#{$side}-half {
                margin-right: 0.5rem !important;
                margin-left : 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $margin-y-positive {
            .#{$size}-#{$side}-half {
                margin-top   : 0.5rem !important;
                margin-bottom: 0.5rem !important;
            }
        }
        @each $side in $padding-sides-all {
            .#{$size}-#{$side}-half {
                padding: 0.5rem !important;
            }
        }
        @each $side, $sideHalf in $padding-sides {
            .#{$size}-#{$side}-half {
                padding-#{$sideHalf}: 0.5rem !important;
            }
        }
        @each $side in $padding-x {
            .#{$size}-#{$side}-half {
                padding-right: 0.5rem !important;
                padding-left : 0.5rem !important;
            }
        }
        @each $side in $padding-y {
            .#{$size}-#{$side}-half {
                padding-top   : 0.5rem !important;
                padding-bottom: 0.5rem !important;
            }
        }
    }
}

@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 0 to $whitespace {
            @each $side in $margin-sides-all-positive {
                .#{$size}-#{$side}#{$i} {
                    margin: #{$i}rem !important;
                }
            }
            @each $side in $margin-sides-all-negative {
                .#{$size}-#{$side}#{$i} {
                    margin: -#{$i}rem !important;
                }
            }
            @each $side, $sideFull in $margin-sides-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-#{$sideFull}: #{$i}rem !important;
                }
            }
            @each $side, $sideFull in $margin-sides-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-#{$sideFull}: -#{$i}rem !important;
                }
            }
            @each $side in $margin-x-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-right: #{$i}rem !important;
                    margin-left : #{$i}rem !important;
                }
            }
            @each $side in $margin-x-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-right: -#{$i}rem !important;
                    margin-left : -#{$i}rem !important;
                }
            }
            @each $side in $margin-y-positive {
                .#{$size}-#{$side}#{$i} {
                    margin-top   : #{$i}rem !important;
                    margin-bottom: #{$i}rem !important;
                }
            }
            @each $side in $margin-y-negative {
                .#{$size}-#{$side}#{$i} {
                    margin-top   : -#{$i}rem !important;
                    margin-bottom: -#{$i}rem !important;
                }
            }
        }
    }
}
/* ============================  PADDINGS  ============================== */
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 0 to $whitespace {
            @each $side, $sideFull in $padding-sides {
                .#{$size}-#{$side}#{$i} {
                    padding-#{$sideFull}: #{$i}rem !important;
                }
            }
            @each $side in $padding-sides-all {
                .#{$size}-#{$side}#{$i} {
                    padding: #{$i}rem !important;

                }
            }
            @each $side in $padding-x {
                .#{$size}-#{$side}#{$i} {
                    padding-right: #{$i}rem !important;
                    padding-left : #{$i}rem !important;
                }
            }
            @each $side in $padding-y {
                .#{$size}-#{$side}#{$i} {
                    padding-top   : #{$i}rem !important;
                    padding-bottom: #{$i}rem !important;
                }
            }
        }
    }
}

.mxn1-5 {
    margin: 0 -1.5rem !important;
}

.pt25 {
    padding-top: 25%;
}

.pt33 {
    padding-top: 33.3333%;
}

.pt50 {
    padding-top: 50%;
}

.pt66 {
    padding-top: 66.6666%;
}

.pt75 {
    padding-top: 75%;
}

.pt100 {
    padding-top: 100%;
}
/* ----  End of WHITESPACES  -------------------------------------------------------------------------- */
/* ===========================================================================================
 ██████  ██████  ██       ██████  ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██ ██
██      ██    ██ ██      ██    ██ ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██      ██
 ██████  ██████  ███████  ██████  ██   ██ ███████
=========================================================================================== */
$blue: $primary-color;
$blue-light: #0499EE;
$blue-dark: darken($blue, 10%);
$green: $success-color;
$green-light: lighten($green, 10%);
$green-dark: darken($green, 10%);
$orange: $warning-color;
$orange-dark: #f4633a;
$gray-dark1: lighten($black, 20%);
$gray-dark2: lighten($black, 40%);
$gray-light1: lighten($black, 60%);
$gray-light2: lighten($black, 80%);
$gray-light3: lighten($black, 90%);
$purple: #5c068c;
$purple-dark: #3c1053;
$magenta: #c800a1;
$magenta-dark: #840b55;
$red: #e1523d;
$colors-primary: (
    "black"     : $black,
    "white"     : $white,
    "blue"      : $blue,
    blue-light  : $blue-light,
    blue-dark   : $blue-dark,
    "green"     : $green,
    green-light : $green-light,
    green-dark  : $green-dark,
    gray-dark1  : $gray-dark1,
    gray-dark2  : $gray-dark2,
    gray-light1 : $gray-light1,
    gray-light2 : $gray-light2,
    gray-light3 : $gray-light3,
    "orange"    : $orange,
    orange-dark : $orange-dark,
    "purple"    : $purple,
    purple-dark : $purple-dark,
    "magenta"   : $magenta,
    magenta-dark: $magenta-dark
);
$colors-secondary: (
    "red": $red,
);
/* ----  End of COLORS  -------------------------------------------------------------------------- */

/* ==================================================================================================
██████   ██████  ██████  ██████  ███████ ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██ ██
██████  ██    ██ ██████  ██   ██ █████   ██████  ███████
██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██      ██
██████   ██████  ██   ██ ██████  ███████ ██   ██ ███████
========================================================================================= */
$border-width: 5;
$border-side: (
    "t": top,
    "r": right,
    "b": bottom,
    "l": left
);
// @include -zf-each-breakpoint($small: true, $auto-insert-breakpoints: true) {
//     @for $i from 1 through $border-width {
//         .#{$-zf-size}-bd#{$i} {
//             border: $i + px solid $gray-light2 !important;
//         }
//     }
// }

// ====================================================================================
// NO BORDER
// ====================================================================================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        .#{$size}-bd0 {
            border: 0 !important;
        }
    }
}

// ====================================================================================
// BORDER ALL SIDES GRAY-LIGHT2
// ====================================================================================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 1 through $border-width {
            .#{$size}-bd#{$i} {
                border: #{$i}px solid $gray-light2 !important;
            }
        }
    }
}

// ====================================================================================
// BORDER, INDIVIDUAL SIDES, GRAY LIGHT 2
// ====================================================================================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 1 through $border-width {
            @each $side-name, $side in $border-side {
                .#{$size}-bd-#{$side-name}#{$i} {
                    border-#{$side}: #{$i}px $gray-light2 solid !important;
                }
            }
        }
    }
}

// ====================================================================================
// BORDER, ALL SIDES, ALL PRIMARY COLORS
// ====================================================================================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 1 through $border-width {
            @each $color-name, $color in $colors-primary {
                .#{$size}-bd-#{$color-name}#{$i} {
                    border: #{$i}px solid $color !important;
                }
            }
        }
    }
}

// ====================================================================================
// BORDER, INDIVIDUAL SIDES, ALL PRIMARY COLORS
// ====================================================================================
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @for $i from 1 through $border-width {
            @each $side-name, $side in $border-side {
                @each $color-name, $color in $colors-primary {
                    .#{$size}-bd-#{$side-name}-#{$color-name}#{$i} {
                        border-#{$side}: #{$i}px $color solid !important;
                    }
                }
            }
        }
    }
}
// @each $size in $breakpoint-classes {
//     @include breakpoint($size) {
//         @each $color-name, $color in $colors-primary {
//             .#{$size}-bd-#{$color-name} {
//                 border: 2px solid $color !important;
//             }
//         }
//     }
// }
// @for $i from 1 through $border-width {
//     .bd-gradient#{$i} {
//         border-width      : $i + px;
//         border-style      : solid;
//         border-image      : linear-gradient(to right, $blue-light 0%, $green 100%);
//         border-image-slice: 1;
//         border-color      : inherit;
//     }
// }
// $rounded-gradient-border-width: 2px;

// .rounded-gradient-border,
// .tabs.rounded-gradient-border .tabs-title.is-active a {
//     position     : relative;
//     background   : linear-gradient(to right, $blue-light 0%, $green 100%);
//     border-radius: 100%;
//     z-index      : 1;
// 
//     &:after {
//         position         : absolute;
//         display          : block;
//         top              : $rounded-gradient-border-width;
//         left             : $rounded-gradient-border-width;
//         width            : calc(100% - #{$rounded-gradient-border-width}*2);
//         height           : calc(100% - #{$rounded-gradient-border-width}*2);
//         content          : "";
//         background-color : inherit;
//         background-repeat: no-repeat;
//         background-size  : cover;
//         border-radius    : 1000px;
//         overflow         : hidden;
//         z-index          : -1;
//         transition       : $button-transition;
//     }
// }
// 
// .button.rounded-gradient-border:hover {
//     &:after {
//         background: unset;
//     }
// }
// 
// .tabs.rounded-gradient-border.bg-black .tabs-title.is-active a:after {
//     background: black;
// }
/* ----  End of BORDERS  --------------------------------------------------------------------- */

/* ===========================================================================================
██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████  ███████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██ ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██ ███████
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██      ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████  ███████
 ██████  ██████  ██       ██████  ██████
██      ██    ██ ██      ██    ██ ██   ██
██      ██    ██ ██      ██    ██ ██████
██      ██    ██ ██      ██    ██ ██   ██
 ██████  ██████  ███████  ██████  ██   ██
=========================================================================================== */
@each $color-name, $color in $colors-primary {
    .bg-#{$color-name} {
        background-color: $color !important;
    }
}

@each $color-name, $color in $colors-secondary {
    .bg-#{$color-name} {
        background-color: $color !important;
    }
}

.bg-blue-dark,
.bg-gray-dark1,
.bg-gray-dark2,
.bg-gray-medium,
.bg-green-dark,
.bg-orange-dark,
.bg-purple,
.bg-red {
    color: $white !important;
}

.bg-transparent {
    background: transparent !important;
}
/* ----  End of BACKGROUND COLOR ------------------------------------------------------------------------------ */

// =============================================================================================
// ██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
// ██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
// ██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
// ██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
// ██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
//  ██████  ██████   █████   ██████ ██ ████████ ██    ██
// ██    ██ ██   ██ ██   ██ ██      ██    ██     ██  ██
// ██    ██ ██████  ███████ ██      ██    ██      ████
// ██    ██ ██      ██   ██ ██      ██    ██       ██
//  ██████  ██      ██   ██  ██████ ██    ██       ██
// =============================================================================================
$bg-opacitites: 10;
$bg-opacitites-colors: (
    "black": $black,
    "white": $white,
);

@for $i from 1 through $bg-opacitites {
    @each $color-name, $color in $bg-opacitites-colors {
        .bg-#{$color-name}-opacity-#{$i*10} {
            // opacity: unquote(".") + $i*10;
            background-color: transparentize($color, $i/10);
            // background-color: transparentize($color, ($i*0.10));
        }
    }
}
// -----  End of BACKGROUND OPACITY  ---------------------------------------------

/*====================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
████████ ██ ███    ██ ████████ ███████
   ██    ██ ████   ██    ██    ██
   ██    ██ ██ ██  ██    ██    ███████
   ██    ██ ██  ██ ██    ██         ██
   ██    ██ ██   ████    ██    ███████

====================================================================================*/
$background-tints: 5;
@for $i from 1 through $background-tints {
    @each $color-name, $color in $colors-primary {
        .bg-#{$color-name}-tint#{$i} {
            background-color: lighten($color, percentage($i / 12)) !important;
        }
    }
}
// -----  End of BACKGROUND TINTS  ---------------------------------------------

/* ====================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
██████   ██████  ███████ ██ ████████ ██  ██████  ███    ██ ███████
██   ██ ██    ██ ██      ██    ██    ██ ██    ██ ████   ██ ██
██████  ██    ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██ ███████
██      ██    ██      ██ ██    ██    ██ ██    ██ ██  ██ ██      ██
██       ██████  ███████ ██    ██    ██  ██████  ██   ████ ███████

==================================================================================== */
$bg-pos: (
    "left"  : "left",
    "right" : "right",
    "top"   : "top",
    "bottom": "bottom",
    "center": "center"
);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $side, $side-name in $bg-pos {
            .#{$size}-bg-pos-#{$side} {
                background-position: #{$side-name} !important;
            }
        }
    }
}

// -----  End of BACKGROUND POSITIONS  ---------------------------------------------

// ====================================================================================
// ██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
// ██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
// ██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
// ██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
// ██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
// ███████ ██ ███████ ███████
// ██      ██    ███  ██
// ███████ ██   ███   █████
//      ██ ██  ███    ██
// ███████ ██ ███████ ███████
// ====================================================================================

$bg-size: (
    "unset"  : "unset",
    "cover"  : "cover",
    "contain": "contain"
);
@each $size in $breakpoint-classes {
    @include breakpoint($size) {
        @each $size-option, $bg-size-option in $bg-size {
            .#{$size}-bg-size-#{$size-option} {
                background-size: #{$bg-size-option} !important;
            }
        }
    }
}

// -----  End of BACKGROUND SIZE  ---------------------------------------------

// ====================================================================================
// ██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
// ██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
// ██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
// ██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
// ██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
//  █████  ████████ ████████  █████   ██████ ██   ██ ███    ███ ███████ ███    ██ ████████
// ██   ██    ██       ██    ██   ██ ██      ██   ██ ████  ████ ██      ████   ██    ██
// ███████    ██       ██    ███████ ██      ███████ ██ ████ ██ █████   ██ ██  ██    ██
// ██   ██    ██       ██    ██   ██ ██      ██   ██ ██  ██  ██ ██      ██  ██ ██    ██
// ██   ██    ██       ██    ██   ██  ██████ ██   ██ ██      ██ ███████ ██   ████    ██
// ====================================================================================
.bg-attach-fixed {
    background-attachment: fixed !important;
}
// -----  End of BACKGROUND ATTACHMENT  ---------------------------------------------

/* ====================================================================================

██ ███    ███  █████   ██████  ███████
██ ████  ████ ██   ██ ██       ██
██ ██ ████ ██ ███████ ██   ███ █████
██ ██  ██  ██ ██   ██ ██    ██ ██
██ ██      ██ ██   ██  ██████  ███████
 ██████  ██████   █████  ██████  ██ ███████ ███    ██ ████████
██       ██   ██ ██   ██ ██   ██ ██ ██      ████   ██    ██
██   ███ ██████  ███████ ██   ██ ██ █████   ██ ██  ██    ██
██    ██ ██   ██ ██   ██ ██   ██ ██ ██      ██  ██ ██    ██
 ██████  ██   ██ ██   ██ ██████  ██ ███████ ██   ████    ██
 ██████  ██    ██ ███████ ██████  ██       █████  ██    ██
██    ██ ██    ██ ██      ██   ██ ██      ██   ██  ██  ██
██    ██ ██    ██ █████   ██████  ██      ███████   ████
██    ██  ██  ██  ██      ██   ██ ██      ██   ██    ██
 ██████    ████   ███████ ██   ██ ███████ ██   ██    ██

==================================================================================== */
@mixin gradient-overlay-image {
    position       : absolute;
    bottom         : 0;

    display        : block;

    width          : 100%;
    height         : 75%;

    content        : "";

    background-size: cover;

}
@mixin gradient-overlay-image-full {
    position       : absolute;
    bottom         : 0;

    display        : block;

    width          : 100%;
    height         : 100%;

    content        : "";

    background-size: cover;

}
@mixin gradient-overlay-image-angled {
    position       : absolute;
    bottom         : 0;

    display        : block;

    width          : 100%;
    height         : 100%;

    content        : "";

    background-size: cover;

}

.gradient-overlay-white {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($white,0) 0%,rgba($white,0) 50%,rgba($white,1) 100%);

        @include gradient-overlay-image;
    }
}

.gradient-overlay-blue {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue,0) 0%,rgba($blue,0) 50%,rgba($blue,1) 100%);

        @include gradient-overlay-image;
    }
}

.gradient-overlay-black {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($black, 0) 50%, rgba($black, 1) 100%);

        @include gradient-overlay-image;
    }
}

.gradient-overlay-white-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($white, 0) 20%, rgba($white, 0.9) 65%);

        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($blue, 0) 20%, rgba($blue, 0.7) 65%);

        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-black-full {
    position: relative;

    &::after {
        background-image: linear-gradient(to bottom, rgba($black, 0) 20%, rgba($black, 0.7) 65%);

        @include gradient-overlay-image-full;
    }
}

.gradient-overlay-blue-angled {
    position: relative;

    &::after {
        background-image: linear-gradient(135deg, rgba($blue, 0) 30%, rgba($blue, 0.7) 80%);

        @include gradient-overlay-image-full;
    }
}

// -----  End of IMAGE GRADIENT OVERLAY  ---------------------------------------------
/* ====================================================================================
███████ ██ ██      ██
██      ██ ██      ██
█████   ██ ██      ██
██      ██ ██      ██
██      ██ ███████ ███████
 ██████  ██████  ██       ██████  ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██ ██
██      ██    ██ ██      ██    ██ ██████  ███████
██      ██    ██ ██      ██    ██ ██   ██      ██
 ██████  ██████  ███████  ██████  ██   ██ ███████
==================================================================================== */
@each $color-name, $color in $colors-primary {
    .fill-#{$color-name} {
        fill: $color !important;
    }
}
/* -----  End of FILL COLORS  --------------------------------------------- */
/* ====================================================================================
██████   ██████  ██   ██     ███████ ██   ██  █████  ██████   ██████  ██     ██ ███████
██   ██ ██    ██  ██ ██      ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██ ██
██████  ██    ██   ███       ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██ ███████
██   ██ ██    ██  ██ ██           ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██      ██
██████   ██████  ██   ██     ███████ ██   ██ ██   ██ ██████   ██████   ███ ███  ███████
==================================================================================== */
%box-shadow,
.box-shadow {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.2);
}

.box-shadow2 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.4);
}

.box-shadow3 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.6);
}

.box-shadow4 {
    box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.8);
}

.bxsh-tb {
    box-shadow: inset 0 50px 50px -40px transparentize($black, .85), inset 0 -50px 50px -40px transparentize($black, .85);
}

.bxsh-b {
    box-shadow: inset 0 -50px 50px -40px transparentize($black, .85);
}

.bxsh-t {
    box-shadow: inset 0 50px 50px -40px transparentize($black, .85);
}
/* -----  End of BOX SHADOWS  --------------------------------------------- */
/*====================================================================================

██████   ██████  ██   ██     ███████ ██   ██  █████  ██████   ██████  ██     ██
██   ██ ██    ██  ██ ██      ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
██████  ██    ██   ███       ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
██   ██ ██    ██  ██ ██           ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
██████   ██████  ██   ██     ███████ ██   ██ ██   ██ ██████   ██████   ███ ███
██   ██  ██████  ██    ██ ███████ ██████
██   ██ ██    ██ ██    ██ ██      ██   ██
███████ ██    ██ ██    ██ █████   ██████
██   ██ ██    ██  ██  ██  ██      ██   ██
██   ██  ██████    ████   ███████ ██   ██

====================================================================================*/
@mixin box-shadow-hover() {
    transition: all 0.6s cubic-bezier(0.165, 0.84, 0.44, 1);

    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &:hover {
        transform : scale(1.01);

        box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.4);
    }
}

.box-shadow-hover {
    @include box-shadow-hover();
}
// -----  End of BOX SHADOW HOVER  ---------------------------------------------
/* ====================================================================================

██   ██  ██████  ██    ██ ███████ ██████       ██████  ██████   ██████  ██     ██
██   ██ ██    ██ ██    ██ ██      ██   ██     ██       ██   ██ ██    ██ ██     ██
███████ ██    ██ ██    ██ █████   ██████      ██   ███ ██████  ██    ██ ██  █  ██
██   ██ ██    ██  ██  ██  ██      ██   ██     ██    ██ ██   ██ ██    ██ ██ ███ ██
██   ██  ██████    ████   ███████ ██   ██      ██████  ██   ██  ██████   ███ ███

==================================================================================== */
@include breakpoint(medium) {
    .hover-grow {
        position  : relative;
        z-index   : 1;

        overflow  : visible;

        transition: all 0.3s ease;

        box-shadow: 0;
        // border    : 0;
        &.is-active,
        &:hover {
            z-index         : 10;

            transform       : scale(1.035);
            transform-origin: center;

            box-shadow      : 0 5px 10px 0 rgba(0, 0, 0, 0.2);
        }
    }
}
// -----  End of HOVER GROW  ---------------------------------------------

// =============================================================================================
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// ██████  ███████ ██    ██ ███████  █████  ██
// ██   ██ ██      ██    ██ ██      ██   ██ ██
// ██████  █████   ██    ██ █████   ███████ ██
// ██   ██ ██       ██  ██  ██      ██   ██ ██
// ██   ██ ███████   ████   ███████ ██   ██ ███████
// =============================================================================================

@keyframes reveal-content {
    0% {
        display: none;

        opacity: 0;
    }

    1% {
        display  : block;

        transform: scale(0);

        opacity  : 0;
    }

    100% {
        transform: scale(1);

        opacity  : 1;
    }
}

.hover-reveal-trigger {
    // align-items: flex-end;
    // position: relative;
    // overflow: hidden;
    // padding: 0;

    .hover-reveal-middle {
        padding   : 1.5rem;
        // max-height: 0;

        transition: all 0.5s ease;
        // position  : absolute;
        // bottom    : 0;
        transform : translateY(200%);

        opacity   : 1;
        // transform : scaleY(0);
        background: rgba($black, .5);
    }

    .hover-reveal-bottom,
    .hover-reveal-top {
        transition: all 0.5s ease;
        // position  : absolute;
        // bottom    : 0;
        // max-height: 0;
        transform : translateY(100%);

        opacity   : 0;
    }

    .hover-reveal-bottom {
        // transform : translateY(100%);
        // opacity   : 0;
        // max-height: 0;
    }

    &:hover {
        // align-items: center;
        // padding: 1rem;

        .hover-reveal-middle {
            // position  : absolute;
            // bottom    : 50%;
            // transform : translateY(0);
            // opacity   : 1;
            // transition: all 0.5s ease;
            // transform : scaleY(1);
            // max-height: 200px;
        }

        .hover-reveal-bottom,
        .hover-reveal-middle,
        .hover-reveal-top {
            transition: all 0.5s ease;
            // position  : relative;
            // bottom    : 0;
            // max-height: 500px;
            transform : translateY(0);

            opacity   : 1;
        }

        .hover-reveal-bottom {
            // animation : reveal-content 1s;
            // transition: all 0.5s ease;
            // opacity   : 1;
            // max-height: 150px;
        }
    }
}
// -----  End of HOVER REVEAL  ---------------------------------------------

// =============================================================================================
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// ██████   ██████  ██████  ██████  ███████ ██████       ██████  ██████   ██████  ██     ██
// ██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██     ██       ██   ██ ██    ██ ██     ██
// ██████  ██    ██ ██████  ██   ██ █████   ██████      ██   ███ ██████  ██    ██ ██  █  ██
// ██   ██ ██    ██ ██   ██ ██   ██ ██      ██   ██     ██    ██ ██   ██ ██    ██ ██ ███ ██
// ██████   ██████  ██   ██ ██████  ███████ ██   ██      ██████  ██   ██  ██████   ███ ███
// =============================================================================================
.hover-border-grow {
    // outline   : 0 solid transparent;
    transition: all 0.3s ease;

    box-shadow: 0 0 0 0 $green;

    &:hover {
        cursor    : pointer;
        transition: all 0.3s ease;
        // outline   : 1rem solid $green;

        box-shadow: 0 0 0 1rem $green;
    }
}
// -----  End of HOVER BORDER GROW  ---------------------------------------------

// =============================================================================================
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// ██   ██ ██ ██████  ███████        ██        ███████ ██   ██  ██████  ██     ██
// ██   ██ ██ ██   ██ ██             ██        ██      ██   ██ ██    ██ ██     ██
// ███████ ██ ██   ██ █████       ████████     ███████ ███████ ██    ██ ██  █  ██
// ██   ██ ██ ██   ██ ██          ██  ██            ██ ██   ██ ██    ██ ██ ███ ██
// ██   ██ ██ ██████  ███████     ██████       ███████ ██   ██  ██████   ███ ███
// =============================================================================================
.hover-hide-show {
    position: relative;

    overflow: hidden;

    .hide-on-hover {
        transition: all 0.35s ease-out;
        transform : translateY(0%);

    }

    .show-on-hover {
        transition: all 0.35s ease-out;
        transform : translateY(100%);

        opacity   : 0;
    }

    &:hover {
        .hide-on-hover {
            transition: all 0.35s ease-out;
            transform : translateY(100%);
        }

        .show-on-hover {
            transition: all 0.35s ease-out;
            transform : translateY(0%);

            opacity   : 1;
        }
    }
}
// -----  End of HOVER HIDE & SHOW  ---------------------------------------------

// =============================================================================================
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// ███████ ██      ██ ██████  ███████     ██    ██ ██████
// ██      ██      ██ ██   ██ ██          ██    ██ ██   ██
// ███████ ██      ██ ██   ██ █████       ██    ██ ██████
//      ██ ██      ██ ██   ██ ██          ██    ██ ██
// ███████ ███████ ██ ██████  ███████      ██████  ██
// =============================================================================================
.hover-slide-up {
    position  : relative;

    min-height: 280px;

    .slide-up-section1 {
        position  : absolute;
        bottom    : 0;

        height    : 50%;
        padding   : 2rem 1rem 1rem;

        transition: all 0.3s ease-out;

        background: $white;
    }

    .slide-up-section2 {
        max-height: 0;

        transition: all 0.3s ease-out;

        opacity   : 0;
    }

    &:hover .slide-up-section1 {
        height    : 100%;
        padding   : 1rem;

        background: $green;

        * {
            color: $white !important;
        }
    }

    &:hover .slide-up-section2 {
        max-height: 200px;

        opacity   : 1;
        color     : $white !important;
    }
}
// -----  End of HOVER SLIDE UP  ---------------------------------------------

// ====================================================================================
// ██████  ██     ██     ████████  ██████       ██████  ██████  ██       ██████  ██████
// ██   ██ ██     ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██   ██
// ██████  ██  █  ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██████
// ██   ██ ██ ███ ██        ██    ██    ██     ██      ██    ██ ██      ██    ██ ██   ██
// ██████   ███ ███         ██     ██████       ██████  ██████  ███████  ██████  ██   ██
// ██   ██  ██████  ██    ██ ███████ ██████
// ██   ██ ██    ██ ██    ██ ██      ██   ██
// ███████ ██    ██ ██    ██ █████   ██████
// ██   ██ ██    ██  ██  ██  ██      ██   ██
// ██   ██  ██████    ████   ███████ ██   ██
// ====================================================================================

.bw-color-hover {
    transition: all 0.5s ease;

    filter: grayscale(1);

    &:hover {
        transition: all 0.5s ease;

        filter: grayscale(0);
    }
}
// -----  End of BW TO COLOR HOVER  ---------------------------------------------
/* ====================================================================================

████████ ███████ ██   ██ ████████     ███████ ██   ██  █████  ██████   ██████  ██     ██
   ██    ██       ██ ██     ██        ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
   ██    █████     ███      ██        ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
   ██    ██       ██ ██     ██             ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
   ██    ███████ ██   ██    ██        ███████ ██   ██ ██   ██ ██████   ██████   ███ ███

==================================================================================== */
.text-shadow {
    text-shadow: 0 0 20px rgba(0,0,0,1);
}
// -----  End of TEXT SHADOW  ---------------------------------------------
/* ===========================================================================================
██████  ██ ██    ██ ██ ██████  ███████ ██████  ███████
██   ██ ██ ██    ██ ██ ██   ██ ██      ██   ██ ██
██   ██ ██ ██    ██ ██ ██   ██ █████   ██████  ███████
██   ██ ██  ██  ██  ██ ██   ██ ██      ██   ██      ██
██████  ██   ████   ██ ██████  ███████ ██   ██ ███████
=========================================================================================== */
%hr,
hr {
    margin: 2rem auto;
    // max-width: 100%;
}

hr.light {
    border-color: rgba(255,255,255,.35);
}

hr.dark {
    border-color: rgba(0,0,0,.35);
}

@each $color-name, $color in $colors-primary {
    hr.#{$color-name} {
        border-bottom-color: $color;
    }
}

.vertical-divider {
    border: 2px solid $blue;
}

.vertical-divider-left {
    border-width      : 2px;
    border-style      : solid;
    border-right-width: 0;
    border-image      : $blue;
}

.vertical-divider-right {
    border-width     : 2px;
    border-style     : solid;
    border-left-width: 0;
    border-image     : $blue;
}
/* ----  End of DIVIDERS  -------------------------------------------------------------------------- */
/* ===========================================================================================
████████ ██    ██ ██████   ██████   ██████  ██████   █████  ██████  ██   ██ ██    ██
   ██     ██  ██  ██   ██ ██    ██ ██       ██   ██ ██   ██ ██   ██ ██   ██  ██  ██
   ██      ████   ██████  ██    ██ ██   ███ ██████  ███████ ██████  ███████   ████
   ██       ██    ██      ██    ██ ██    ██ ██   ██ ███  ██ ██      ██   ██    ██
   ██       ██    ██       ██████   ██████  ██   ██ ██   ██ ██      ██   ██    ██
=========================================================================================== */
// RFS mixin.
//
// Automated font-resizing.
//
// See https://github.com/MartijnCuppens/rfs.
// See configuration for options
// Minimum fontsize.
$rfs-base-font-size: 15px;
$rfs-font-size-unit: px;

// Breakpoint at where font-size starts decreasing if screen width is smaller.
$rfs-breakpoint: 1024px;
$rfs-breakpoint-unit: px;

// Resize font-size based on screen height and width.
$rfs-two-dimensional: false;

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class: "disable";

@import "../node_modules/rfs/scss.scss";

:root *,
_::-webkit-full-page-media,
_:future {
    min-width: 0;
}

* {
    // hyphens               : auto;
    // overflow-wrap         : break-word;
    // word-wrap             : break-word;
    // word-break            : break-word;
    font-variant-ligatures: common-ligatures;
    font-feature-settings : "liga", "clig";
    // font-variant-ligatures    : contextual;
    // font-feature-settings     : "calt";
    font-variant-ligatures: discretionary-ligatures;
    font-feature-settings : "dlig";
    // font-feature-settings     : "salt";
    font-kerning          : normal;
    font-feature-settings : "kern";
    // font-variant-numeric      : lining-nums;
    // font-feature-settings     : "lnum";
    // font-variant-numeric : oldstyle-nums;
    // font-feature-settings: 'onum';
    // font-variant-numeric      : diagonal-fractions;
    // font-feature-settings     : "frac";
    // font-variant-numeric      : ordinal;
    // font-feature-settings     : "ordn";
    // font-feature-settings     : "ss01";
    font-feature-settings : “ital”;
    font-feature-settings : "case";
    font-feature-settings : "zero";
}

@mixin lhCrop($line-height, $capital-letter: 1) {
    &::before {
        display   : block;

        width     : 0;
        height    : 0;
        margin-top: calc((#{$capital-letter} - #{$line-height}) * 0.5em);

        content   : '';
    }
}

.text-to-crop {
    @include lhCrop(1.2, 0.75); //using Roboto font family
}

body,
html {
    @include responsive-font-size(20);
}

// h1,
// h2,
// h3,
// h4,
// h5,
// h6 {
//     text-transform: lowercase !important;
// 
//     &::first-letter {
//         text-transform: uppercase !important;
//     }
// }

%h1,
h1 {
    // font-weight: 300;
    line-height: 1.1;

    @include responsive-font-size(84);
}

%h2,
h2 {
    // font-weight: 300;
    line-height: 1.1;

    @include responsive-font-size(63);
}

%h3,
h3 {
    @include responsive-font-size(47);
}

%h4,
h4 {
    @include responsive-font-size(36);
    // font-weight: bold;
}

%h5,
h5 {
    @include responsive-font-size(27);
    // font-weight: bold;
}

%h6,
h6 {
    @include responsive-font-size(20);
    // font-weight: bold;
}

%p,
p {
    @include responsive-font-size(20);
}

body {
    // color     : $gray-dark2;
    // background: $gray-light3;
}

.lh0 {
    line-height: 0;
}

.lh1 {
    line-height: 1;
}

.lh2 {
    line-height: 2;
}

%small,
.small {
    // font-size: $small-font-size;
    @include responsive-font-size(15);
}

%tiny,
.tiny {
    // font-size: 60%;
    @include responsive-font-size(12);
}

sup {
    top: -0.4em;
}
/* ==============================  TYPOGRAPHY HELPERS  ============================== */
@for $i from 1 through 10 {
    .fw#{$i*100} {
        font-weight: $i*100;
    }
}

%text-normal,
.text-normal {
    font-weight: normal !important;
}

%text-light,
.text-light {
    font-weight: 100 !important;
}

%text-light-italic,
.text-light-italic {
    font-weight: 100 !important;
    font-style : italic;
}

%text-bold,
.strong,
.text-bold,
strong {
    font-weight: bold !important;
}

%text-bold-italic,
.text-bold-italic {
    font-weight: bold !important;
    font-style : italic;
}

%text-italic,
.text-italic {
    font-style: italic !important;
}

%text-caps,
.text-caps {
    text-transform: uppercase !important;
}

%text-title,
.text-title {
    text-transform: capitalize !important;
}

%text-sentence,
.text-sentence {
    text-transform: none !important;
}

%text-center {
    text-align: center;
}

// =============================================================================================
// ████████ ███████ ██   ██ ████████      ██████  ██████  ██       ██████  ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██ ██
//    ██    █████     ███      ██        ██      ██    ██ ██      ██    ██ ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██      ██
//    ██    ███████ ██   ██    ██         ██████  ██████  ███████  ██████  ██   ██ ███████
// =============================================================================================
@each $color-name, $color in $colors-primary {
    .text-#{$color-name} {
        color: $color !important;
    }
}
@each $color-name, $color in $colors-secondary {
    .text-#{$color-name} {
        color: $color !important;
    }
}

.text-white h1,
.text-white h2,
.text-white h3,
.text-white h4,
.text-white h5,
.text-white h6,
.text-white li,
.text-white p {
    color: $white;
}

.text-wrap {
    white-space: normal;
}

.text-nowrap {
    white-space: nowrap;
}

.no-hyphens {
    hyphens: none;
}

.hyphens {
    hyphens: auto;
}

blockquote cite.text-white {
    -webkit-text-fill-color: $white;
    fill                   : $white;
}

.hanging-punctuation {
    text-indent: -0.5em;
}

.gradient-transparent-white-25 {
    background: linear-gradient(to right, rgba(255,255,255,0), rgba(255,255,255,1) 25%);
}

.gradient-transparent-black-25 {
    background: linear-gradient(to right, rgba(0,0,0,0), rgba(0,0,0,1) 25%);
}

pre code {
    // padding: 0;
}

.heading-lines {
    overflow  : hidden;

    text-align: center;
}

.heading-lines:after,
.heading-lines:before {
    position        : relative;

    display         : inline-block;

    width           : 50%;
    height          : 1px;

    content         : "";
    vertical-align  : middle;

    background-color: $gray-light2;
}

.heading-lines:before {
    right      : 0.5em;

    margin-left: -50%;
}

.heading-lines:after {
    left        : 0.5em;

    margin-right: -50%;
}
// ====================================================================================
// MIXIN FOR MULTILINE TEXT
// This mixin is a cross-browser CSS-only solution to automatically truncate a set number of lines of text.
// This is also called "Line Clamping"
// See these resources for more info:
// https://css-tricks.com/line-clampin/
// https://codepen.io/siiron/pen/jfBhy
// ====================================================================================
/* Begin required CSS. */
.line-clamp {
    position          : relative;

    display           : block;
    display           : -webkit-box;
    overflow          : hidden;
    -webkit-box-orient: vertical;

    padding           : 0 !important;

    text-overflow     : ellipsis;

    line-height       : 1.3;
}

.line-clamp:after {
    position  : absolute;
    right     : 0;
    bottom    : 0;

    display   : block;

    width     : 25%;
    height    : calc(initial * 1.3);

    content   : "…";
    text-align: right;

    background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 75%);
}
@supports (-webkit-line-clamp: 1) {
    .line-clamp:after {
        display: none !important;
    }
}

.line-clamp-1 {
    height            : calc(initial * 1.3 * 1);

    -webkit-line-clamp: 1;
}

.line-clamp-2 {
    height            : calc(initial * 1.3 * 2);

    -webkit-line-clamp: 2;
}

.line-clamp-3 {
    height            : calc(initial * 1.3 * 3);

    -webkit-line-clamp: 3;
}

.line-clamp-4 {
    height            : calc(initial * 1.3 * 4);

    -webkit-line-clamp: 4;
}

.line-clamp-5 {
    height            : calc(initial * 1.3 * 5);

    -webkit-line-clamp: 5;
}
/* ----  End of TYPOGRAPHY;  -------------------------------------------------------------------------- */
/* ===========================================================================================

██      ██ ███    ██ ██   ██ ███████
██      ██ ████   ██ ██  ██  ██
██      ██ ██ ██  ██ █████   ███████
██      ██ ██  ██ ██ ██  ██       ██
███████ ██ ██   ████ ██   ██ ███████

=========================================================================================== */
a {
    text-decoration: none;
    word-wrap      : break-word;

    color          : $green-dark;

    font-weight    : bold;
    // hyphens        : auto;

    overflow-wrap  : break-word;

    &:hover {
        transition: 0.3s ease-out;
    }
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a {
    color: $green;
}
/* ----  End of LINKS  -------------------------------------------------------------------------- */
/* ====================================================================================

██  ██████  ██████  ███    ██
██ ██      ██    ██ ████   ██
██ ██      ██    ██ ██ ██  ██
██ ██      ██    ██ ██  ██ ██
██  ██████  ██████  ██   ████
███████  ██████  ███    ██ ████████
██      ██    ██ ████   ██    ██
█████   ██    ██ ██ ██  ██    ██
██      ██    ██ ██  ██ ██    ██
██       ██████  ██   ████    ██

==================================================================================== */
.logo-facebook,
.logo-linkedin,
.logo-twitter-bird,
.navigation-drawer {
    font-weight: normal;
}

.icomoon-liga,
i {
    display: inline-block;
}
/* -----  End of ICON FONT  --------------------------------------------- */
/* ====================================================================================

██  ██████  ██████  ███    ██ ███████
██ ██      ██    ██ ████   ██ ██
██ ██      ██    ██ ██ ██  ██ ███████
██ ██      ██    ██ ██  ██ ██      ██
██  ██████  ██████  ██   ████ ███████

==================================================================================== */
.icon-left svg {
    float       : left;

    margin-right: 0.7em;
}

.icon-right svg {
    float      : right;

    margin-left: 0.85em;
}
/* -----  End of ICONS  --------------------------------------------- */
/* ====================================================================================

██████  ██       ██████   ██████ ██   ██  ██████  ██    ██  ██████  ████████ ███████ ███████
██   ██ ██      ██    ██ ██      ██  ██  ██    ██ ██    ██ ██    ██    ██    ██      ██
██████  ██      ██    ██ ██      █████   ██    ██ ██    ██ ██    ██    ██    █████   ███████
██   ██ ██      ██    ██ ██      ██  ██  ██ ▄▄ ██ ██    ██ ██    ██    ██    ██           ██
██████  ███████  ██████   ██████ ██   ██  ██████   ██████   ██████     ██    ███████ ███████
                                             ▀▀
==================================================================================== */
blockquote {
    padding     : 3.75rem 0;

    text-align  : center;

    color       : $gray-light1;
    border      : 1px solid $gray-light2;
    border-right: 0;
    border-left : 0;

    font-weight : bold;
    font-style  : italic;

    @extend %h5;

    %cite,
    cite {
        margin-top             : 1.875rem;

        color                  : $black;

        font-weight            : normal;

        -webkit-text-fill-color: $black;
        fill                   : $black;
    }
}

/* -----  End of BLOCKQUOTES  --------------------------------------------- */
/* ==================================================================================================
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
========================================================================================= */
ul {
    margin-bottom: 2rem;
}

li {
    margin-bottom: 1rem;
}

li:last-child {
    // margin-bottom: 0;
}

li ol,
li ul {
    margin-top: 1rem;
}
@include breakpoint(medium up) {
    ul.inline-list li {
        display: inline-block;

        margin : 0 1rem 0 0;
    }
}

ul.circle {
    list-style-type: circle;
}

ul.square {
    list-style-type: square;
}

dl dt {
    margin-top : 1rem;

    font-weight: bold;
}
/* ----  End of LISTS  --------------------------------------------------------------------- */
/* =================================================================================================
██      ██ ███    ██ ██   ██
██      ██ ████   ██ ██  ██
██      ██ ██ ██  ██ █████
██      ██ ██  ██ ██ ██  ██
███████ ██ ██   ████ ██   ██
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
========================================================================================= */
.arrow {
    display    : inline-flex;
    align-items: center;

    &::after {
        position   : unset !important;
        right      : unset !important;

        width      : unset !important;
        height     : unset !important;
        margin-top : unset !important;
        margin-left: 0.5rem;

        content    : "\e907" !important;

        background : unset !important;

        font-family: "Cognizant-Icons";
        font-weight: bold;
    }

    &.arrow-solid-green {
        &::after {
            content    : "\e908" !important;

            color      : $green;

            font-family: "Cognizant-Icons";
        }
    }
}

.arrow-end {
    position: relative;

    &::after {
        position   : absolute;
        right      : 0;

        content    : "\e907";

        font-family: "Cognizant-Icons";
    }
}

/* ----  End of LINK LISTS  --------------------------------------------------------------------- */
/* ===========================================================================================
██████  ██    ██ ████████ ████████  ██████  ███    ██ ███████
██   ██ ██    ██    ██       ██    ██    ██ ████   ██ ██
██████  ██    ██    ██       ██    ██    ██ ██ ██  ██ ███████
██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██      ██
██████   ██████     ██       ██     ██████  ██   ████ ███████
=========================================================================================== */
.button {
    // margin-left    : 0.5rem;
    margin-right   : 0.5rem;

    text-decoration: none;
    text-transform : uppercase;

    @include responsive-font-size(20);

    & i {
        // line-height: 0;
    }
    // + .button {
    //     margin-left: 0.5rem;
    // }
    // & + .button:nth-child(n+2) {
    //     margin-left : 0.5rem;
    //     margin-right: 0.5rem;
    // }
    // & + .button:nth-last-of-type(1) {
    //     // margin-left : 0.5rem;
    //     margin-right: 0;
    // }
    &.tiny {
        @include responsive-font-size(12);
    }

    &.small {
        @include responsive-font-size(15);
    }

    &.large {
        @include responsive-font-size(27);
    }

    &.xlarge {
        @include responsive-font-size(36);
    }

    &.back:after {
        margin : 0;

        content: "";
    }

    &.back:before {
        margin-right: 0.5rem;

        content     : "\e905";

        color       : $white;

        font-family : "Cognizant-Icons";
        font-weight : 600;
    }

    &.download:after {
        position   : unset !important;
        right      : unset !important;

        width      : unset !important;
        height     : unset !important;
        margin-top : unset !important;
        margin-left: 0.5rem;

        content    : "\e920" !important;

        background : unset !important;

        font-family: "Cognizant-Icons";
        font-weight: bold;
    }

    &.white {
        color     : $green-dark;
        background: $white;
    }

    &.white:after {
        color: $green-dark;
    }

    &.white:hover {
        background: darken($white, 5%);
    }

    &.disabled {
        background: $gray-light1;
    }

    .bg-blue {
        &:hover {
            background: scale-color($blue, $lightness: -20%) !important;
        }
    }
}
/* ----  End of BUTTON  -------------------------------------------------------------------------- */
/* ==================================================================================================
██████  ██    ██ ████████ ████████  ██████  ███    ██
██   ██ ██    ██    ██       ██    ██    ██ ████   ██
██████  ██    ██    ██       ██    ██    ██ ██ ██  ██
██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██
███ ██
██████   ██████     ██       ██     ██████  ██   ████
 ██████  ██████   ██████  ██    ██ ██████  ███████
██       ██   ██ ██    ██ ██    ██ ██   ██ ██
██   ███ ██████  ██    ██ ██    ██ ██████  ███████
██    ██ ██   ██ ██    ██ ██    ██ ██           ██
 ██████  ██   ██  ██████   ██████  ██      ███████
========================================================████
========================================================================================= */
.button-group .button:after {
    // content: '';
}
/* ====================================================================================

██████  ██████  ███████  █████  ██████   ██████ ██████  ██    ██ ███    ███ ██████  ███████
██   ██ ██   ██ ██      ██   ██ ███   ██ ██      ██   ██ ██    ██ ████  ████ ██   ██ ██
██████  ██████  █████   ███████ ██   ██ ██      ██████  ██    ██ ██ ████ ██ ██████  ███████
██   ██ ██   ██ ██      ██   ██ ██   ██ ██      ██   ██ ██    ██ ██  ██  ██ ██   ██      ██
██████  ██   ██ ███████ ██   ██ ██████   ██████ ██   ██  ██████  ██      ██ ██████  ███████

==================================================================================== */
.breadcrumbs a:link {
    font-weight: normal;
}
// -----  End of BREADCRUMBS  ---------------------------------------------
/* ----  End of BUTTON GROUPS  --------------------------------------------------------------------- */
/* ==================================================================================================
███████  ██████  ██████  ███    ███ ███████
██      ██    ██ ██   ██ ████  ████ ██
█████   ██    ██ ██████  ██ ████ ██ ███████
██      ██    ██ ██   ██ ██  ██  ██      ██
██       ██████  ██   ██ ██      ██ ███████
========================================================================================= */
[type='color'],
[type='date'],
[type='datetime'],
[type='datetime-local'],
[type='email'],
[type='month'],
[type='number'],
[type='password'],
[type='search'],
[type='tel'],
[type='text'],
[type='time'],
[type='url'],
[type='week'],
textarea {
    height: initial;
}

button {
    font-family: $body-font-family;
    font-weight: bold;
}

label {
    cursor: pointer;
}

.fieldset,
fieldset {
    border: none;

    @include callout;
}
@include breakpoint(medium up) {
    .fieldset,
    fieldset {
        padding   : 2rem;

        box-shadow: 0 0.2rem 0.3rem rgba(0,0,0,0.1);
    }
}

legend {
    background: transparent !important;

    @extend %h5;
}

textarea {
    min-height: 200px;
}

input[type=checkbox],
input[type=radio] {
    margin-right : 0.5rem;
    margin-bottom: 0;
}

input[type=radio] + .form-error {
    margin-top: 0 !important;
}

.form-error,
.help-text {
    font-style: italic;
}

.reveal-if-active {
    display   : block;
    overflow  : hidden;

    max-height: 0;

    transition: all 0.5s;
    transform : scale(0.95);

    opacity   : 0;

    input[type=text] {
        width: 100%;
    }

    input[type="checkbox"]:checked ~ &,
    input[type="radio"]:checked ~ & {
        overflow     : visible;

        max-height   : 100000px;
        margin-bottom: 2rem;

        transform    : scale(1);

        opacity      : 1;
    }
}

.checkbox {
    position: relative;

    margin  : 0 1rem 0 0;

    cursor  : pointer;

    &:before {
        position          : absolute;
        z-index           : 1;
        top               : 2px;
        left              : 2px;

        width             : 12px;
        height            : 6px;

        content           : "";
        transition        : transform 0.4s cubic-bezier(.45,1.8,.5,.75);
        transform         : rotate(-45deg) scale(0, 0);

        border            : 2px solid $white;
        border-top-style  : none;
        border-right-style: none;
    }

    &:checked {
        &:before {
            transform: rotate(-45deg) scale(1, 1);
        }

        &:after {
            border-color: $green-dark;
            background  : $green;
        }
    }

    &:after {
        position  : absolute;
        top       : -4px;
        left      : -2px;

        width     : 20px;
        height    : 20px;

        content   : "";
        cursor    : pointer;

        border    : 0.12rem solid $gray-light1;
        background: #fff;
        box-shadow: inset 0 1px 2px rgba(51,51,51,0.1);
    }
}

.radio {
    position: relative;

    margin  : 0 1rem 0 0;

    cursor  : pointer;

    &:before {
        position     : absolute;
        z-index      : 1;
        z-index      : 1;
        top          : 3px;
        left         : 3px;

        width        : 10px;
        height       : 10px;

        content      : "";
        transition   : transform 0.4s cubic-bezier(.45,1.8,.5,.75);
        transform    : scale(0,0);

        border-radius: 50%;
        background   : $green;
    }

    &:checked {
        &:before {
            transform: scale(1,1);
        }
    }

    &:after {
        position     : absolute;
        top          : -2px;
        left         : -2px;

        width        : 20px;
        height       : 20px;

        content      : "";

        border       : 0.12rem solid $gray-light1;
        border-radius: 50%;
        background   : #fff;
        box-shadow   : inset 0 1px 2px rgba(51,51,51,0.1);
        // margin-bottom: .5rem;
    }
}

.checkbox.is-invalid-input:after,
.radio.is-invalid-input:after {
    border-color: $red !important;
}

input.placeholder-white::placeholder {
    color: $white;
}

select {
    height       : 2.25rem;
    padding-right: 1em;

    background   : url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%23999999' stroke='%23999999' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 45%;
    // background-size: 15px;
}

/* ----  End of FORMS  --------------------------------------------------------------------- */
/* ====================================================================================

███████ ██       ██████   █████  ████████
██      ██      ██    ██ ██   ██    ██
█████   ██      ██    ██ ███████    ██
██      ██      ██    ██ ██   ██    ██
██      ███████  ██████  ██   ██    ██
██       █████  ██████  ███████ ██      ███████
██      ██   ██ ██   ██ ██      ██      ██
██      ███████ ██████  █████   ██      ███████
██      ██   ██ ██   ██ ██      ██           ██
███████ ██   ██ ██████  ███████ ███████ ███████

==================================================================================== */
// ====================================================================================
// float-label-css
// 1.0.1
// Bulletproof CSS-only implementation of Float Label pattern with automatic fallback for ANY non-supporting browser.
// https://github.com/tonystar/float-label-css.git
// Anton Staroverov (https://tonystar.me)
// ====================================================================================
@mixin float-label-container {
    position: relative;

    display : block;
}
@mixin float-label {
    > span,
    label {
        position  : absolute;
        top       : 0;
        left      : 0.5rem;

        cursor    : text;
        transition: all 0.2s;

        opacity   : 1;

        font-size : 75%;
        @content;
    }
}
@mixin float-label-input {
    &::placeholder {
        transition: all 0.2s;

        opacity   : 1;
        color     : rgba($gray-dark1, .4);
    }

    &:placeholder-shown:not(:focus)::placeholder {
        opacity: 0;
    }
}
@mixin float-label-scaled {
    &:placeholder-shown:not(:focus) + * {
        top      : 0.7rem;

        opacity  : 1;

        font-size: inherit;
        @content;
    }
}

.has-float-label {
    @include float-label-container;
    @include float-label;

    select {
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%2353565a' stroke='%2353565a' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 25% !important;

        appearance: none;
    }

    input,
    select,
    textarea {
        padding-top  : 1.2rem;

        border       : 0;
        border-bottom: 1px solid rgba($gray-dark1, .2);
        border-radius: 0;
        background   : none;
        box-shadow   : none;

        font-size    : inherit;

        @include float-label-input;
        @include float-label-scaled {
            top: 0.5rem;
        }

        &:focus {
            border-width: 0 0 1px 0;
            border-color: rgba($blue-light, 1);
            outline     : none;
            background  : none;
            box-shadow  : none;
            box-shadow  : 0 1px 0 rgba($blue-light, 1);
        }
    }

    & span {
        // color: $white;
    }

    & input:focus + span {
        color: $blue-light;
    }

    & .form-error {
        position : relative;
        top      : 0;
        left     : 0;

        color    : inherit !important;

        font-size: initial;
    }

    & .is-invalid-input:not(:focus) {
        color       : $red;
        border-color: $red;
    }
}

form.white {
    select {
        background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24'%3E%3Ctitle%3Earrow-down%3C/title%3E%3Cpath d='M0 5.5v-.2c.1-.2.3-.3.5-.3h23c.2 0 .4.1.5.3 0 .2 0 .4-.1.5l-11.5 13c-.1.1-.2.2-.4.2s-.3-.1-.4-.2L.1 5.8C0 5.7 0 5.6 0 5.5zm22.4.5H1.6L12 17.7 22.4 6z' fill='%23ffffff' stroke='%23ffffff' stroke-width='1'/%3E%3C/svg%3E") no-repeat right 0.5rem bottom 25% !important;

        appearance: none;
    }

    & input,
    & select,
    & textarea {
        color        : $white;
        border-bottom: 1px solid rgba($white,.7);
        background   : none;

        &:focus {
            border-width: 0 0 1px 0;
            border-color: rgba($white, 1);
            background  : none;
            box-shadow  : none;
            box-shadow  : 0 1px 0 rgba($white, 1);
        }

        &::placeholder {
            color: rgba($white, .4);
        }
    }

    & span {
        color: $white;
    }

    & input:focus + span {
        color: $white;
    }

    & .form-error {
        position : relative;
        top      : 0;
        left     : 0;

        color    : inherit !important;

        font-size: initial;
    }

    & .is-invalid-label span {
        color: $red;
    }

    & .is-invalid-input:not(:focus) {
        color       : $red;
        border-color: $red;
    }
}
// -----  End of FLOAT LABELS  ---------------------------------------------
/* ====================================================================================
████████  █████  ██████  ██      ███████ ███████
   ██    ██   ██ ██   ██ ██      ██      ██
   ██    ███████ ██████  ██      █████   ███████
   ██    ██   ██ ██   ██ ██      ██           ██
   ██    ██   ██ ██████  ███████ ███████ ███████
==================================================================================== */
table {
    border-collapse: collapse;
}

td,
th {
    // border      : 1px solid;
    // border-color: $table-border;
}

tbody tr:nth-child(even) {
    // border: 1px solid $gray-light2;
}

tfoot td,
tfoot th,
thead td,
thead th {
    // font-weight: bold;
}
/* -----  End of TABLES  --------------------------------------------- */
/* ====================================================================================

████████  █████  ██████  ███████
   ██    ██   ██ ██   ██ ██
   ██    ███████ ██████  ███████
   ██    ██   ██ ██   ██      ██
   ██    ██   ██ ██████  ███████

==================================================================================== */
$tab-background: $gray-light3;

.tabs {
    border-width: 1px 0 1px 1px;
    border-style: solid;
    border-color: $tab-content-border transparent $tab-content-border $tab-content-border;
    background  : $tab-background;
}
// ==============================  VERTICAL TAB STYLES  ==============================

.tabs-title {
    position     : relative;

    margin-bottom: 0;

    a {
        transition: $button-transition;

        color     : $gray-dark2;
        background: $gray-light3;

        &:focus {
            color     : $gray-light3;
            background: $gray-light1;
        }

        &:hover {
            color     : $gray-dark1;
            background: $gray-light2;
        }
    }

    &.is-active a {
        color     : $green-dark;
        background: $white;
        box-shadow: inset 6px 0 0 0 $green;

        &:first-of-type {}

        &:last-of-type {}
    }

    &[class*="bg-steps"] a {
        border-width: 0;
    }

    &-rounded {
        border-radius: 1000px;
    }
}

.tabs-content {
    &.vertical {
        margin-left: -1px;

        border     : 1px solid $tab-content-border;

        & .tabs-panel {
            min-height: 500px;
        }
    }
}
// ==============================  HORIZONTAL TAB STYLES  ==============================

.tabs:not(.vertical) {
    border: 1px solid $tab-content-border;

    .tabs-title {
        a {
            transition  : $button-transition;

            color       : $gray-dark2;
            border-width: 0;
            background  : $gray-light3;

            &:focus {
                color     : $gray-light1;
                background: $gray-light2;
            }

            &:hover {
                color     : $gray-dark1;
                background: $gray-light2;
            }
        }

        &.is-active a {
            color     : $green-dark;
            background: $white;
            box-shadow: inset 0 6px 0 0 $green, 0 1px 0 0 $white;
        }

        &:first-of-type.is-active {
            border-left: 0 solid;
        }

        &:last-of-type.is-active {}
    }
}
@keyframes tab-panel-fade-in {
    0% {
        max-height: 500px;

        opacity   : 0;
    }

    50% {
        opacity: 1;
    }

    100% {
        max-height: 999px;
    }
}
// ==============================  TABS PANEL  ==============================

.tabs-panel {
    &.is-active {
        animation: tab-panel-fade-in 1s ease;
    }
}
// -----  End of TABS  ---------------------------------------------
/* ==========================================================================================
 █████   ██████  ██████  ██████  ██████  ██████  ██  ██████  ███    ██
██   ██ ██      ██      ██    ██ ██   ██ ██   ██ ██ ██    ██ ████   ██
███████ ██      ██      ██    ██ ██████  ██   ██ ██ ██    ██ ██ ██  ██
██   ██ ██      ██      ██    ██ ██   ██ ██   ██ ██ ██    ██ ██  ██ ██
██   ██  ██████  ██████  ██████  ██   ██ ██████  ██  ██████  ██   ████
=========================================================================================== */
.accordion {
    color: $white;
}

.accordion-item {
    margin-bottom: 2px;

    border-radius: 0;
    background   : $blue;
}

.accordion-title {
    margin         : 0;
    padding-right  : 2.5rem;

    text-decoration: none;

    border         : none !important;

    @extend %h6;

    &:before {
        margin-top: -0.75rem;

        font-size : 1.5rem;
    }
}

.accordion-content,
:last-child > .accordion-content:last-child {
    border: 1px solid $gray-light2;
}

a.accordion-title,
a.accordion-title:focus,
a.accordion-title:hover {
    color: $white;
}

.accordion-arrow .accordion-title::before {
    margin     : 0;
    padding    : 0;

    content    : "\e907";
    transform  : rotate(90deg);

    color      : $white !important;

    font-family: "Cognizant-Icons";
    font-size  : inherit;
    font-weight: 600;
    line-height: 0;
}

.accordion-arrow .is-active .accordion-title::before {
    margin     : 0;
    padding    : 0;

    content    : "\e907";
    transform  : rotate(-90deg);

    color      : $white !important;

    font-family: "Cognizant-Icons";
    font-size  : inherit;
    font-weight: 600;
    line-height: 0;
}
/* ==============================  ACCORDION MINIMAL DIVIDER  ============================== */
.accordion-line {
    padding: 0;

    & .accordion-item {
        color     : $blue;
        background: transparent;
    }

    & .accordion-title {
        // line-height: 0;
        // display: inline-block;
        color: $blue;
        // border     : 2px solid $blue !important;
        // padding    : 0.75rem;
    }

    & .accordion-title:before,
    .accordion-title:after {
        position  : absolute;
        top       : 50%;

        width     : 100%;

        content   : "";
        transform : none;

        border-top: 1px solid $gray-light2;
    }

    & .accordion-title:before {
        right       : 100%;

        margin-right: 1rem;
    }

    & .accordion-title:after {
        left       : 100%;

        margin-left: 1rem;
    }

    & .accordion-title:focus {
        color     : $blue;
        background: transparent;
    }
}
/* ----  End of ACCORDION  -------------------------------------------------------------------------- */
// ====================================================================================
// ███████ ██ ██████  ███████     ██      ██ ███    ██ ███████ ███████
// ██      ██ ██   ██ ██          ██      ██ ████   ██ ██      ██
// ███████ ██ ██   ██ █████       ██      ██ ██ ██  ██ █████   ███████
//      ██ ██ ██   ██ ██          ██      ██ ██  ██ ██ ██           ██
// ███████ ██ ██████  ███████     ███████ ██ ██   ████ ███████ ███████
// ====================================================================================
$sidelines-text-padding: 0.5em !default;
$sidelines-line-thickness: 1px !default;
$sidelines-line-length: 9999px !default;
$sidelines-line-color: null !default;
$sidelines-line-style: solid !default;
$sidelines-double-line: false !default;
$sidelines-double-line-spacing: 0.5em !default;
@mixin sidelines($text-padding: $sidelines-text-padding, $line-thickness: $sidelines-line-thickness, $line-length: $sidelines-line-length, $line-color: $sidelines-line-color, $line-style: $sidelines-line-style, $double-line: $sidelines-double-line, $double-line-spacing: $sidelines-double-line-spacing) {
    display    : block;
    overflow   : hidden;

    text-align : center;
    white-space: nowrap;

    span {
        position     : relative;

        display      : inline-block;

        padding-right: $text-padding;
        padding-left : $text-padding;

        &:after,
        &:before {
            position        : absolute;
            top             : 50%;

            width           : $line-length;
            height          : 100%;

            content         : '';

            border-top-width: $line-thickness;
            border-top-style: $line-style;
            @if $line-color != null {
                border-top-color: $line-color;
            }
            @if $double-line {
                height             : $double-line-spacing;
                margin-top         : -($double-line-spacing/2);

                border-bottom-width: $line-thickness;
                border-bottom-style: $line-style;
                border-bottom-color: $line-color;
            } @else 
            if $line-thickness > 1 {
                margin-top: -(floor($line-thickness/2));
            }
        }

        &:before {
            right: 100%;
        }

        &:after {
            left: 100%;
        }
    }
}

.type-sidelines {
    @include sidelines();
}

.double {
    @include sidelines($double-line: true);
}

.custom {
    @include sidelines($text-padding: 20px, $line-length: 100%, $line-color: $blue, $line-thickness: 4px, $line-style: dotted);
}

.custom-2 {
    @include sidelines($line-color: $blue, $line-thickness: 4px);
}
// -----  End of SIDE LINES  ---------------------------------------------

// ====================================================================================
// ███████ ██      ███████ ██   ██ ██ ██████  ██      ███████
// ██      ██      ██       ██ ██  ██ ██   ██ ██      ██
// █████   ██      █████     ███   ██ ██████  ██      █████
// ██      ██      ██       ██ ██  ██ ██   ██ ██      ██
// ██      ███████ ███████ ██   ██ ██ ██████  ███████ ███████
//  ██████  ██    ██ ███████ ██████  ███████ ██       ██████  ██     ██
// ██    ██ ██    ██ ██      ██   ██ ██      ██      ██    ██ ██     ██
// ██    ██ ██    ██ █████   ██████  █████   ██      ██    ██ ██  █  ██
// ██    ██  ██  ██  ██      ██   ██ ██      ██      ██    ██ ██ ███ ██
//  ██████    ████   ███████ ██   ██ ██      ███████  ██████   ███ ███
// ====================================================================================

// Based on the technique from this article:
// http://kizu.ru/en/blog/flexible-overflow/

// ************************
// EXAMPLE MARKUP
// <span class="overflower">
//   <span
//     class="overflower-short"
//     aria-hidden="true"
//     title="Some long text that could become shorter"
//   >
//     Short text here is.
//   </span>
//   <span class="overflower-long">
//     Some long text that could become shorter.
//   </span>
// </span>
// ************************

.overflower {
    display      : inline-block;
    overflow     : hidden;

    box-sizing   : border-box;
    max-width    : 100%;
    height       : 1.5em;

    white-space  : nowrap;
    text-overflow: ellipsis;

    line-height  : 1.5em;
}

.overflower-long {
    display: inline;
}

.overflower-short {
    display: none;
}

@supports (flex-wrap: wrap) {
    .overflower {
        display  : inline-flex;
        flex-wrap: wrap;
    }

    .overflower-short {
        display      : block;
        overflow     : hidden;
        flex-grow    : 1;

        width        : 0;

        text-overflow: ellipsis;
    }

    .overflower-long {
        flex-basis: 100%;
    }
}

// -----  End of FLEXIBLE OVERFLOW  ---------------------------------------------

// ====================================================================================
// ██████  ██████   ██████  ██████  ██████   ██████  ██     ██ ███    ██
// ██   ██ ██   ██ ██    ██ ██   ██ ██   ██ ██    ██ ██     ██ ████   ██
// ██   ██ ██████  ██    ██ ██████  ██   ██ ██    ██ ██  █  ██ ██ ██  ██
// ██   ██ ██   ██ ██    ██ ██      ██   ██ ██    ██ ██ ███ ██ ██  ██ ██
// ██████  ██   ██  ██████  ██      ██████   ██████   ███ ███  ██   ████
// ███    ███ ███████ ███    ██ ██    ██
// ████  ████ ██      ████   ██ ██    ██
// ██ ████ ██ █████   ██ ██  ██ ██    ██
// ██  ██  ██ ██      ██  ██ ██ ██    ██
// ██      ██ ███████ ██   ████  ██████
// ====================================================================================

.dropdown.menu.arrow-white > li.is-dropdown-submenu-parent > a::after {
    border-top-color: $white !important;
    //  background: blue;
}
// -----  End of DROPDOWN MENU  ---------------------------------------------
/* ====================================================================================

██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████
 ██████  ██████   █████  ██████  ██ ███████ ███    ██ ████████
██       ██   ██ ██   ██ ██   ██ ██ ██      ████   ██    ██
██   ███ ██████  ███████ ██   ██ ██ █████   ██ ██  ██    ██
██    ██ ██   ██ ██   ██ ██   ██ ██ ██      ██  ██ ██    ██
 ██████  ██   ██ ██   ██ ██████  ██ ███████ ██   ████    ██
███████ ████████ ███████ ██████  ███████
██         ██    ██      ██   ██ ██
███████    ██    █████   ██████  ███████
     ██    ██    ██      ██           ██
███████    ██    ███████ ██      ███████

==================================================================================== */
/* ==============================  ACCORDION BARS BACKGROUND COLORS  ============================== */
@for $i from 0 through 100 {
    .accordion-gradient-#{$i} {
        background: mix($blue-dark, $blue, $i);
    }
}
/* ==============================  BLUE BACKGROUND COLOR STEPS  ============================== */
@for $i from 0 through 100 {
    .bg-steps-blue-#{$i} {
        background: mix($blue-dark, $blue, $i);

        > a {
            background: none !important;
            box-shadow: none !important;
        }
    }
}
/* ==============================  GREEN BACKGROUND COLOR STEPS  ============================== */
@for $i from 0 through 100 {
    .bg-steps-green-#{$i} {
        background: mix($green-dark, $green, $i);

        > a {
            background: none !important;
            box-shadow: none !important;
        }
    }
}
// -----  End of BACKGROUND GRADIENT STEPS  ---------------------------------------------
/* =============================================================================================
 ██████  █████  ██      ██       ██████  ██    ██ ███████████ ███████
██      ██   ██ ██      ██      ██    ██ ██    ██    ██    ██
██      ███████ ██      ██      ██    ██ ██    ██    ██    ███████
██      ██   ██ ██      ██      ██    ██ ██    ██    ██         ██
 ██████ ██   ██ ███████ ███████  ██████   ██████     ██    ███████
========================================================================================= */
.callout {
    &.small {
        @include callout-size(1rem);
    }
}

.callout > :last-child {
    // margin-bottom: auto;
}
@each $color-name, $color in $colors-primary {
    .callout-#{$color-name} {
        background-color: lighten($color, 20%) !important;
    }
}

.callout-blue-dark,
.callout-gray-dark1,
.callout-gray-dark2,
.callout-gray-medium,
.callout-green-dark {
    color: $white !important;
}
/* ----  End of CALLOUTS  --------------------------------------------------------------------- */
/* ====================================================================================

 ██████  █████  ██████  ██████  ███████
██      ██   ██ ██   ██ ██   ██ ██
██      ███████ ██████  ██   ██ ███████
██      ██   ██ ██   ██ ██   ██      ██
 ██████ ██   ██ ██   ██ ██████  ███████

==================================================================================== */
.card {
    flex-grow: 1;
}

.card-section + .card-section {
    padding-top: 0;
}
// -----  End of CARDS  ---------------------------------------------
/* ====================================================================================

██       █████  ██████  ███████ ██      ███████
██      ██   ██ ██   ██ ██      ██      ██
██      ███████ ██████  █████   ██      ███████
██      ██   ██ ██   ██ ██      ██           ██
███████ ██   ██ ██████  ███████ ███████ ███████

==================================================================================== */
.label {
    // text-transform: uppercase;
    font-size    : responsive-font-size(15);
    font-weight  : bold;
    line-height  : inherit;
    margin-bottom: 0.5rem;
}
// -----  End of LABELS  ---------------------------------------------
/* =================================================================================================
███    ███ ███████ ███    ██ ██    ██           ██    ██ ███████ ██████  ████████ ██  ██████  █████  ██
████  ████ ██      ████   ██ ██    ██           ██    ██ ██      ██   ██    ██    ██ ██      ██   ██ ██
██ ████ ██ █████   ██ ██  ██ ██    ██ █████     ██    ██ █████   ██████     ██    ██ ██      ███████ ██
██  ██  ██ ██      ██  ██ ██ ██    ██            ██  ██  ██      ██   ██    ██    ██ ██      ██   ██ ██
██      ██ ███████ ██   ████  ██████              ████   ███████ ██   ██    ██    ██  ██████ ██   ██ ███████
========================================================================================= */
.menu.vertical > li {
    margin: 0;

    & .active {
        color     : $white;
        background: $green;
    }
}
/* ----  End of MENU- VERTICAL  --------------------------------------------------------------------- */

/* ====================================================================================
████████  ██████  ██████
   ██    ██    ██ ██   ██
   ██    ██    ██ ██████
   ██    ██    ██ ██
   ██     ██████  ██
██████   █████  ██████
██   ██ ██   ██ ██   ██
██████  ███████ ██████
██   ██ ██   ██ ██   ██
██████  ██   ██ ██   ██

==================================================================================== */
.no-js {
    @include breakpoint(small only) {
        .top-bar {
            display: none;
        }
    }
    @include breakpoint(medium) {
        .title-bar {
            display: none;
        }
    }
}

.top-bar-left {
    margin-right: auto;
}

.menu > li > a:hover {
    background: transparentize($green, .8);
    // background: $button-background-hover;
}
/* -----  End of TOP BAR  --------------------------------------------- */

/* ====================================================================================

 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████
██  ██████  ██████  ███    ██ ███████
██ ██      ██    ██ ████   ██ ██
██ ██      ██    ██ ██ ██  ██ ███████
██ ██      ██    ██ ██  ██ ██      ██
██  ██████  ██████  ██   ████ ███████

==================================================================================== */
@for $index from 1 through 6 {
    h#{$index}.anim-icon {
        display    : inline-block;

        margin     : 0;

        text-align : center;

        color      : white;

        font-weight: normal;
        line-height: 0;
    }
}

.anim-icon {
    & i {
        display   : block;

        transition: all 500ms cubic-bezier(0.770, 0.000, 0.175, 1.000);

        & + .anim-text {
            display   : block;

            transition: all, 0.3s;
            transition: all 500ms cubic-bezier(0.770, 0.000, 0.175, 1.000);
            transform : translateY(-1rem);

            opacity   : 0;

            font-size : $small-font-size - 15;
            /* easeInOutQuart */
        }
    }

    &:hover i {
        transform: translateY(-.75rem);

        & + .anim-text {
            transform: translateY(0);

            opacity  : 1;
        }
    }
}
// -----  End of ANIMATION- ICONS  ---------------------------------------------
/* ====================================================================================

 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████
███████ ██      ██ ██████  ███████     ██    ██ ██████
██      ██      ██ ██   ██ ██          ██    ██ ██   ██
███████ ██      ██ ██   ██ █████       ██    ██ ██████
     ██ ██      ██ ██   ██ ██          ██    ██ ██
███████ ███████ ██ ██████  ███████      ██████  ██

==================================================================================== */
.anim-slide-up {
    min-height: 200px;

    .slide-up-section1,
    .slide-up-section2 {
        height    : 70px;

        transition: all 0.35s ease;
        transform : translateY(125%);
    }

    .slide-up-section2 {
        opacity: 0;
    }

    &:hover .slide-up-section1,
    &:hover .slide-up-section2 {
        transform: translateY(0%);
    }

    &:hover .slide-up-section2 {
        opacity: 1;
    }
}
// -----  End of ANIMATION SLIDE UP  ---------------------------------------------
/* =================================================================================================
███████ ██      ██  ██████ ██   ██
██      ██      ██ ██      ██  ██
███████ ██      ██ ██      █████
     ██ ██      ██ ██      ██  ██
███████ ███████ ██  ██████ ██   ██
 ██████  █████  ██████   ██████  ██    ██ ███████ ███████ ██
██      ██   ██ ██   ██ ██    ██ ██    ██ ██      ██      ██
██      ███████ ██████  ██    ██ ██    ██ ███████ █████   ██
██      ██   ██ ██   ██ ██    ██ ██    ██      ██ ██      ██
 ██████ ██   ██ ██   ██  ██████   ██████  ███████ ███████ ███████
========================================================================================= */
$slick-font-path: "../fonts/slick/";
@font-face {
    font-family: "slick";
    font-weight: normal;
    font-style : normal;

    src        : slick-font-url("slick.eot");
    src        : slick-font-url("slick.eot?#iefix") format("embedded-opentype"), slick-font-url("slick.woff") format("woff"), slick-font-url("slick.ttf") format("truetype"),format("truetype"), slick-font-url("slick.svg#slick") format("svg");
}

.slick-slide {
    overflow: hidden;

    img {
        display: inline-block;
    }
}

.slick-next,
.slick-prev {
    width           : 2rem;
    height          : 2rem;

    transition      : all, 500ms;
    transform-origin: center 100%;

    transform-style : preserve-3D;
}

.slick-prev {
    left: -2rem;
}

.slick-next {
    right: -2rem;
}

.slick-next:focus,
.slick-next:hover,
.slick-prev:focus,
.slick-prev:hover {
    // transform: scale(1.1);
}

.slick-next:before,
.slick-prev:before {
    opacity    : 1;
    color      : $black;

    font-family: "Cognizant-Icons";
    font-size  : 2rem;
    font-weight: 600;
}
@include breakpoint(small only) {
    .slick-next:before,
    .slick-prev:before {
        font-size: 1.2rem;
    }
};

.slick-prev:before {
    content: "\e905";
}

.slick-next:before {
    content: "\e907";
}

.slick-dots li button:before {
    content      : "";

    border-radius: 1000px;
}

.square-dots .slick-dots li {
    overflow: hidden;

    width   : 2rem;
    height  : 5px;
    margin  : 0 5px;
}

.square-dots .slick-dots li button {
    width: 100%;

    &:before {
        border-radius: 0;
    }
}

.square-dots .slick-dots li button:before {
    width      : 2rem;

    font-weight: bold;
}

.square-dots .slick-dots li button:before {
    opacity: 0.5;
}

.square-dots .slick-dots li button:before:hover {
    opacity: 1;
}

.square-dots .slick-dots li.slick-active button:before {
    opacity: 1;
}
/* ==============================  WHITE CONTROLS  ============================== */
.white-dots .slick-dots li button:before {
    background: $white;
}

.white-dots .slick-dots li.slick-active button:before {
    opacity   : 1;
    background: $white;
}

.white-arrows .slick-next:before {
    color: $white;
}

.white-arrows .slick-prev:before {
    color: $white;
}
/* ==============================  BLACK CONTROLS  ============================== */
.black-dots .slick-dots li button:before {
    background: $black;
}

.black-dots .slick-dots li.slick-active button:before {
    opacity   : 1;
    background: $black;
}

.black-arrows .slick-next:before {
    color: $black;
}

.black-arrows .slick-prev:before {
    color: $black;
}
/* ==============================  BLUE CONTROLS  ============================== */
.blue-dots .slick-dots li button:before {
    background: $gray-light1;
}

.blue-dots .slick-dots li.slick-active button:before {
    opacity   : 1;
    background: $blue;
}

.blue-arrows .slick-next:before {
    color: $blue;
}

.blue-arrows .slick-prev:before {
    color: $blue;
}
/* ==============================  GREEN CONTROLS  ============================== */
.green-dots .slick-dots li button:before {
    background: $gray-light1;
}

.green-dots .slick-dots li.slick-active button:before {
    opacity   : 1;
    background: $green;
}

.green-arrows .slick-next:before {
    color: $green;
}

.green-arrows .slick-prev:before {
    color: $green;
}
// ==============================  FULL WIDTH CONTROLS  ==============================

.fw-controls .slick-dots {
    display: flex !important;
}

.fw-controls .slick-dots li {
    flex-grow: 1;

    width    : 100%;
}

.fw-controls .slick-dots li {
    margin : 0;
    padding: 0;
}

.fw-controls .slick-dots li button:before {
    width     : 100%;

    background: $black;
}

.fw-controls .slick-dots li.slick-active button:before {
    opacity   : 1;
    background: linear-gradient(to right, $blue, $blue-light);
}
// ==============================  INSIDE ARROWS  ==============================

.inside-arrows {
    & .slick-prev {
        z-index: 1;
        left   : 0;
    }

    & .slick-next {
        right: 0;
    }
}
@include breakpoint(small only) {
    .inside-arrows {
        & .slick-prev {
            left: 0;
        }

        & .slick-next {
            right: 0;
        }
    }
}
// ==============================  INSIDE DOTS  ==============================

.inside-dots {
    & .slick-dots {
        bottom: 1rem;
    }
}
/* ----  End of SLICK CAROUSEL  -------------------------------------------------------------------------- */
/* ==================================================================================================
███████  ██████ ██████   ██████  ██      ██      ██    ██ ██████
██      ██      ██   ██ ██    ██ ██      ██      ██    ██ ██   ██
███████ ██      ██████  ██    ██ ██      ██      ██    ██ ██████
     ██ ██      ██   ██ ██    ██ ██      ██      ██    ██ ██
███████  ██████ ██   ██  ██████  ███████ ███████  ██████  ██
================================================================================================== */
#scrollUp {
    position           : fixed;
    right              : 0.5rem;
    bottom             : 0.5rem;

    display            : inline;

    padding            : 0 0 0 0.75rem;

    transition         : all 0.2s ease;
    transform          : translateY(200%);

    color              : $white;
    background         : rgba($blue,0.85);
    background-position: right center;

    font-size          : $small-font-size;

    &:before {
        content: "BACK TO TOP";
    }

    &:after {
        display    : inline-block;

        margin     : 0 0 0 0.5rem;
        padding    : 0.5rem;

        content    : "\e909";

        color      : $white;
        background : $blue;

        font-family: "Cognizant-Icons";
        font-weight: bold;
    }

    &.scrollup--show {
        transform: translateY(0%);

        & .button {
            background: transparentize($blue-dark, .15);
        }
    }
}

.scrollUpContactUs--show {
    position  : fixed;
    top       : 1rem;
    right     : 1rem;

    background: transparentize($blue-dark, .15);
}
/* ----  End of SCROLLUP  --------------------------------------------------------------------- */
/* ==================================================================================================
███████ ███████ ██      ███████  ██████ ████████     ██████
██      ██      ██      ██      ██         ██             ██
███████ █████   ██      █████   ██         ██         █████
     ██ ██      ██      ██      ██         ██        ██
███████████ ███████ ███████ ███████  ██████    ██        ███████
========================================================================================= */
.select2 {
    // margin-bottom: $form-spacing;
}

.select2-selection--single {
    height : 2.25rem !important;
    // padding: 0.625rem;
    // height : 100% !important;
    padding: 0.4rem;
}

.select2-selection__placeholder {
    color: $body-font-color !important;
}

.select2-container--default .select2-results__option--highlighted[aria-selected] {
    background-color: $blue;
}

.select2-results__option {
    margin : 0;
    padding: 0.5rem;
}

.select2-dropdown--above,
.select2-dropdown--below {
    padding: 0.5rem;
}

.select2-container--default .select2-results > .select2-results__options {
    // min-height: 400px;
    // overflow-y: auto;
}

.select2-selection__arrow {
    top   : -2px !important;
    right : 18px !important;

    height: 100% !important;

    b {
        border-width: 9px 8px 0 8px !important;
        border-style: solid;
        border-color: $gray-light1 transparent transparent transparent !important;
    }
}

.select2-container--open {
    .select2-selection--single {
        .select2-selection__arrow {
            b {
                border-width: 0 8px 9px 8px !important;
                border-color: transparent transparent $gray-light1 transparent !important;
            }
        }
    }
}

.select2-container--default .select2-selection--single {
    border-color : $gray-light2;
    border-radius: 0;
}

.select2-dropdown {
    border-color: $blue;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.select2-search__field:focus {
    border      : $input-border-focus !important;
    border-color: $gray-light2;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.select2-container--default.select2-container--open.select2-container--below .select2-selection--multiple,
.select2-container--default.select2-container--open.select2-container--below .select2-selection--single {
    border      : $input-border-focus !important;
    border-color: $gray-light2;
    box-shadow  : 0 2px 3px rgba($blue, .5);
}

.img-flag {
    margin-right: 0.5rem;
}
/* ----  End of SELECT 2  --------------------------------------------------------------------- */
/* ====================================================================================
███████  ██████   ██████  ████████ ███████ ██████
██      ██    ██ ██    ██    ██    ██      ██   ██
█████   ██    ██ ██    ██    ██    █████   ██████
██      ██    ██ ██    ██    ██    ██      ██   ██
██       ██████   ██████     ██    ███████ ██   ██
==================================================================================== */
.footer-blue-bar {
    li a:hover {
        background: $button-background-hover;
    }
}

.footer {
    ul li {
        margin     : 0;

        line-height: 1.3rem;
    }

    a {
        font-weight: normal;

        &:hover {
            color: $anchor-color !important;
        }
    }
}
/* -----  End of FOOTER  --------------------------------------------- */
/* ====================================================================================

██████  ███████  █████  ██████
██   ██ ██      ██   ██ ██   ██
██████  █████   ███████ ██   ██
██   ██ ██      ██   ██ ██   ██
██   ██ ███████ ██   ██ ██████
███    ███  ██████  ██████  ███████
████  ████ ██    ██ ██   ██ ██
██ ████ ██ ██    ██ ██████  █████
██  ██  ██ ██    ██ ██   ██ ██
██      ██  ██████  ██   ██ ███████
██      ██ ███    ██ ██   ██
██      ██ ████   ██ ██  ██
██      ██ ██ ██  ██ █████
██      ██ ██  ██ ██ ██  ██
███████ ██ ██   ████ ██   ██

==================================================================================== */
.read-more {
    position     : relative;

    padding-right: 1rem;
}

a.morelink {
    position   : absolute;
    top        : 0;
    right      : 0;
    // color      : $gray-light1;

    transition : all 0.25s ease-out;

    font-family: "Cognizant-Icons";

    &.less {
        transform: rotate(135deg);

        color    : $blue-light;
    }
}

.morecontent span {
    display: none;
}
// -----  End of READ MORE LINK  ---------------------------------------------

/* ====================================================================================

██████  ██   ██    ██ ██████
██   ██ ██    ██  ██  ██   ██
██████  ██     ████   ██████
██      ██      ██    ██   ██
██      ███████ ██    ██   ██

==================================================================================== */
// $plyr-color-main: $blue;
// $plyr-font-family: "Proxima Nova";
// $plyr-font-size-small: 15px;
// $plyr-font-size-base: 20px; 
// -----  End of PLYR  ---------------------------------------------
/* ====================================================================================

██       █████  ████████ ███████ ███████ ████████
██      ██   ██    ██    ██      ██         ██
██      ███████    ██    █████   ███████    ██
██      ██   ██    ██    ██           ██    ██
███████ ██   ██    ██    ███████ ███████    ██
████████ ██   ██ ██ ███    ██ ██   ██ ██ ███    ██  ██████
   ██    ██   ██ ██ ████   ██ ██  ██  ██ ████   ██ ██
   ██    ███████ ██ ██ ██  ██ █████   ██ ██ ██  ██ ██   ███
   ██    ██   ██ ██ ██  ██ ██ ██  ██  ██ ██  ██ ██ ██    ██
   ██    ██   ██ ██ ██   ████ ██   ██ ██ ██   ████  ██████
██   ██ ███████  █████  ██████  ███████ ██████
██   ██ ██      ██   ██ ██   ██ ██      ██   ██
███████ █████   ███████ ██   ██ █████   ██████
██   ██ ██      ██   ██ ██   ██ ██      ██   ██
██   ██ ███████ ██   ██ ██████  ███████ ██   ██
██ ███    ███  █████   ██████  ███████
██ ████  ████ ██   ██ ██       ██
██ ██ ████ ██ ███████ ██   ███ █████
██ ██  ██  ██ ██   ██ ██    ██ ██
██ ██      ██ ██   ██  ██████  ███████

==================================================================================== */
.lt-header-image {
    overflow: hidden;

    height  : 100px;

    & img {
        // object-fit: cover !important;
        width: 100%;
        // height: 100px;
    }
}

.object-fit-cover {
    width     : 100%;
    height    : 100%;

    object-fit: cover;
    // position  : absolute;
}

.object-fit-contain {
    width     : 100%;
    height    : 100%;

    object-fit: contain;
}

.object-position-top-left {
    object-position: 0 0;
}

.object-position-top-right {
    object-position: 0 100%;
}

.object-position-top-center {
    object-position: 0 50%;
}

.object-position-bottom-left {
    object-position: 100% 0;
}

.object-position-bottom-right {
    object-position: 100% 100%;
}

.object-position-bottom-center {
    object-position: 100% 50%;
}

.object-position-center {
    object-position: 50% 50%;
}
// -----  End of LATEST THINKING HEADER IMAGE  ---------------------------------------------
/* ====================================================================================

██████  ███████ ██    ██ ███████  █████  ██
██   ██ ██      ██    ██ ██      ██   ██ ██
██████  █████   ██    ██ █████   ███████ ██
██   ██ ██       ██  ██  ██      ██   ██ ██
██   ██ ███████   ████   ███████ ██   ██ ███████

==================================================================================== */
.reveal {
    outline-width: 0;
    height       : auto;

    @include breakpoint(landscape) {
        // -webkit-overflow-scrolling: touch;
        // overflow-y                : auto;
        // position                  : unset;
    }

    @include breakpoint(medium down) {
        -webkit-overflow-scrolling: touch;
        overflow-y                : auto;
        position                  : fixed;
    }
}
// -----  End of REVEAL  ---------------------------------------------
/* ====================================================================================

██   ██ ███████  █████  ██████  ███████ ██████      ███    ███ ███████ ███    ██ ██    ██
██   ██ ██      ██   ██ ██   ██ ██      ██   ██     ████  ████ ██      ████   ██ ██    ██
███████ █████   ███████ ██   ██ █████   ██████      ██ ████ ██ █████   ██ ██  ██ ██    ██
██   ██ ██      ██   ██ ██   ██ ██      ██   ██     ██  ██  ██ ██      ██  ██ ██ ██    ██
██   ██ ███████ ██   ██ ██████  ███████ ██   ██     ██      ██ ███████ ██   ████  ██████

==================================================================================== */
// @keyframes fadeInRotate {
//     0% {
//         transform: translateY(-100px);
//         opacity  : 0;
//     }
// 
//     100% {
//         transform: translateY(0);
//         opacity  : 1;
//     }
// }
// 
// .header-menu {
//     // background         : url("../content/dam/cognizant_foundation/images/gradient-top.png") no-repeat;
//     background-size    : 100% 100%;
//     background-position: center top;
//     z-index            : 2;
// 
//     & .button {
//         &::after {
//             font-family: "Cognizant-Ions";
//             content    : "\e903";
//             font-weight: bold;
//             font-size  : $small-font-size;
//             margin-left: 0.5rem;
//             margin-top : 2px;
//         }
// 
//         &:hover {
//             background: rgba(39,51,56,.99) !important;
//         }
// 
//         &.hover {
//             background: rgba(39,51,56,.99) !important;
// 
//             &::after {
//                 content  : "\e91a" !important;
//                 animation: fadeInRotate 0.5s;
//             }
//         }
//     }
// 
//     & .dropdown-pane {
//         // background         : rgba(39,51,56,.99) url("../images/nav-mesh.svg") no-repeat;
//         background-size    : contain;
//         background-position: center bottom;
//         left               : 0 !important;
//         width              : 100% !important;
// 
//         & .is-open {
//             // transition: visibility 0s !important;
//         }
//     }
// }
// -----  End of HEADER MENU  ---------------------------------------------
// 
/* ====================================================================================

██████  ██████  ██ ██      ██      ██████   ██████  ██     ██ ███    ██
██   ██ ██   ██ ██ ██      ██      ██   ██ ██    ██ ██     ██ ████   ██
██   ██ ██████  ██ ██      ██      ██   ██ ██    ██ ██  █  ██ ██ ██  ██
██   ██ ██   ██ ██ ██      ██      ██   ██ ██    ██ ██ ███ ██ ██  ██ ██
██████  ██   ██ ██ ███████ ███████ ██████   ██████   ███ ███  ██   ████

==================================================================================== */
.is-drilldown-submenu-parent > a::after {
    top        : 30%;

    margin-top : 0;

    content    : "\e907";

    border     : none;

    font-family: "Cognizant-Icons";
    font-size  : $small-font-size;
    font-weight: bold;
}

.js-drilldown-back > a::before {
    margin-top  : 2px;
    margin-right: 1rem;

    content     : "\e905";

    border      : none;

    font-family : "Cognizant-Icons";
    font-size   : $small-font-size;
    font-weight : bold;
}
// -----  End of DRILLDOWN  ---------------------------------------------
/* ====================================================================================

███████ ████████ ██  ██████ ██   ██ ██    ██
██         ██    ██ ██      ██  ██   ██  ██
███████    ██    ██ ██      █████     ████
     ██    ██    ██ ██      ██  ██     ██
███████    ██    ██  ██████ ██   ██    ██
 █████  ███    ██ ██ ███    ███  █████  ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██   ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██ ██   ██    ██    ██ ██    ██ ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ██   ██    ██    ██  ██████  ██   ████

==================================================================================== */
@keyframes slideInDown {
    from {
        visibility: visible;

        transform : translate3d(0, -100%, 0);
    }

    to {
        transform: translate3d(0, 0, 0);
    }
}
@keyframes slideInUp {
    from {
        transform: translate3d(0, 100%, 0);
    }

    to {
        visibility: hidden;

        transform : translate3d(0, 0%, 0);
    }
}

.sticky.is-anchored {
    // animation: slideInUp 0.5s;
}

.sticky.is-stuck {
    animation: slideInDown 0.5s;
}
// -----  End of STICKY ANIMATION  ---------------------------------------------

#navSubBar {
    hyphens: auto;
}
/* ====================================================================================

███    ██  █████  ██    ██
████   ██ ██   ██ ██    ██
██ ██  ██ ████████ ██    ██
██  ██ ██ ██   ██  ██  ██
██   ████ ██   ██   ████
██████  ██      ██    ██ ███████     ██████   █████  ██████
██   ██ ██      ██    ██ ██          ██   ██ ██   ██ ██   ██
██████  ██      ██    ██ █████       ██████  ███████ ██████
██   ██ ██      ██    ██ ██          ██   ██ ██   ██ ██   ██
██████  ███████  ██████  ███████     ██████  ██   ██ ██   ██

==================================================================================== */
.navBarInPage {
    & a {
        color: $white;

        &:hover {
            color     : $green;
            background: $white !important;
        }
    }

    & a.is-active {
        // background: transparentize($white, .80) !important;
        background: $green !important;

        &:hover {
            color     : $green;
            background: $white !important;
        }
    }
}
// -----  End of NAV BLUE BAR  ---------------------------------------------
/* ====================================================================================

██    ██ ██ ██████  ███████  ██████
██    ██ ██ ██   ██ ██      ██    ██
██    ██ ██ ██   ██ █████   ██    ██
 ██  ██  ██ ██   ██ ██      ██    ██
  ████   ██ ▖██ ██████  ███████  ██████
██████   █████   ██████ ██   ██  ██████  ██████   ██████  ██    ██ ███    ██ ██████
██   ██ ██   ██ ██      ██  ██  ██       ██   ██ ██    ██ ██    ██ ████   ██ ██   ██
██████  ███████ ██      █████   ██   ███ ██████  ██    ██ ██    ██ ██ ██  ██ ██   ██
██   ██ ██   ██ ██      ██  ██  ██    ██ ██   ██ ██    ██ ██    ██ ██  ██ ██ ██   ██
██████  ██   ██  ██████ ██   ██  ██████  ██   ██  ██████   ██████  ██   ████ ██████

====================================================================================*/
.video-background {
    position: relative;

    overflow: hidden;
    // z-index: -1;
    video {
        position  : absolute;
        z-index   : -1;
        top       : 50%;
        left      : 50%;

        width     : 100%;
        min-width : 100%;
        min-height: 100%;

        transform : translate(-50%,-50%);

        object-fit: cover;
    }
}

div iframe.video {
    position  : absolute;
    top       : 0;
    left      : 0;

    width     : 100%;
    height    : 100%;

    object-fit: cover;
}
// -----  End of VIDEO BACKGROUND  ---------------------------------------------
/* ====================================================================================

██     ██  ██████  ██████  ██      ██████  ██     ██ ██ ██████  ███████
██     ██ ██    ██ ██   ██ ██      ██   ██ ██     ██ ██ ██   ██ ██
██  █  ██ ██    ██ ██████  ██      ██   ██ ██  █  ██ ██ ██   ██ █████
██ ███ ██ ██    ██ ██   ██ ██      ██   ██ ██ ███ ██ ██ ██   ██ ██
 ███ ███   ██████  ██   ██ ███████ ██████   ███ ███  ██ ██████  ███████
███    ███ ███████ ███    ██ ██    ██
████  ████ ██      ████   ██ ██    ██
██ ████ ██ █████   ██ ██  ██ ██    ██
██  ██  ██ ██      ██  ██ ██ ██    ██
██      ██ ███████ ██   ████  ██████

==================================================================================== */
#language-menu {
    img {
        margin-right: 0.5rem;
    }

    a {
        display    : inline;

        color      : black;

        font-weight: normal;

        &:hover {
            color: $green;
        }
    }
}
// -----  End of WORLDWIDE MENU  ---------------------------------------------

// ====================================================================================
// ██████  ██████  ██ ███    ███  █████  ██████  ██    ██     ███    ██  █████  ██    ██
// ██   ██ ██   ██ ██ ████  ████ ██   ██ ██   ██  ██  ██      ████   ██ ██   ██ ██    ██
// ██████  ██████  ██ ██ ████ ██ ███████ ██████    ████       ██ ██  ██ ███████ ██    ██
// ██      ██   ██ ██ ██  ██  ██ ██   ██ ██   ██    ██        ██  ██ ██ ██   ██  ██  ██
// ██      ██   ██ ██ ██      ██ ██   ██ ██   ██    ██        ██   ████ ██   ██   ████
// ====================================================================================

%nav-primaryArrowEnd {
    position   : absolute;
    top        : calc(50% - .5rem);
    right      : 0;

    content    : "\e908";

    color      : $green;

    font-family: "Cognizant-Icons";
    font-size  : $small-font-size;
}

.header-menu {
    a {
        font-weight: normal;
    }

    .nav-primaryLink {
        position  : relative;

        display   : inline-block;
        // margin-left: 0.5rem;

        padding   : 1rem;

        transition: all 0.5s ease;

        color     : $black;

        &:hover {
            color     : $white;
            background: $blue;
        }

        &.arrow-end {
            padding: 1rem 2rem 1rem 1rem;

            &::after {
                position   : absolute;
                top        : calc(50% - .65rem);
                right      : 0.75rem;

                content    : "\e903";

                color      : $green;

                font-family: "Cognizant-Icons";
                font-weight: 600;
            }

            &.nav-primaryLink-close::after {
                content: "\e91a";
            }
        }
    }

    .dropdown-pane {
        left  : 0 !important;

        width : 100vw;
        height: 100vh;

        div {
            max-width: 1200px;
        }

        li {
            margin-bottom: 0;

            transition   : all 0.5s ease;

            &:hover {
                background: darken($blue, 5%);
            }
        }

        a {
            display    : inline-block;

            padding    : 0.5rem 1rem 0.5rem 0.5rem;

            color      : white;

            font-weight: normal;

            &::after {
                @extend %nav-primaryArrowEnd;
            }

            &.no-arrow:after {
                content: '';
            }
        }
    }
}

// -----  End of PRIMARY NAV  ---------------------------------------------

/* ====================================================================================

 ██████ ██       ██████  ███████ ███████     ██████  ██    ██ ████████ ████████  ██████  ███    ██
██      ██      ██    ██ ██      ██          ██   ██ ██    ██    ██       ██    ██    ██ ████   ██
██      ██      ██    ██ ███████ █████       ██████  ██    ██    ██       ██    ██    ██ ██ ██  ██
██      ██      ██    ██      ██ ██          ██   ██ ██    ██    ██       ██    ██    ██ ██  ██ ██
 ██████ ███████  ██████  ███████ ███████     ██████   ██████     ██       ██     ██████  ██   ████

==================================================================================== */
.reveal {
    overflow: visible;

    .close-button.outside {
        top          : -1rem;
        right        : 0;

        display      : flex;
        align-content: middle;

        margin       : 0;

        font-size    : $small-font-size;
        line-height  : 0;

        span {
            margin-left: 0.5rem;

            font-size  : 2rem;
        }
    }
}
// -----  End of CLOSE BUTTON  ---------------------------------------------
/* ====================================================================================

 █████  ███    ██ ██ ███    ███ ███████ ██ ████████ ██  ██████  ███    ██
██   ██ ████   ██ ██ ████  ████ ██      ██    ██    ██ ██    ██ ████   ██
███████ ██ ██  ██ ██ ██ ████ ██ ███████ ██    ██    ██ ██    ██ ██ ██  ██
██   ██ ██  ██ ██ ██ ██  ██  ██      ██ ██    ██    ██ ██    ██ ██  ██ ██
██   ██ ██   ████ ██ ██      ██ ███████ ██    ██    ██  ██████  ██   ████

==================================================================================== */
.animsition-loading,
.animsition-loading:after {
    position     : fixed;
    z-index      : 100;
    top          : 50%;
    left         : 50%;

    width        : 32px;
    height       : 32px;
    margin-top   : -16px;
    margin-left  : -16px;

    border-radius: 50%;
}

.animsition-loading {
    transform                : translateZ(0);
    animation-name           : animsition-loading;
    animation-duration       : 0.8s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;

    border-top               : 5px solid rgba($blue, 1);
    border-right             : 5px solid rgba($blue, 1);
    border-bottom            : 5px solid rgba($blue, 1);
    border-left              : 5px solid rgba($black, .1);
    background-color         : transparent;
}
// -----  End of ANIMSITION  ---------------------------------------------
// ====================================================================================
// ██       █████  ███████ ██    ██ ███████ ██ ███████ ███████ ███████
// ██      ██   ██    ███   ██  ██  ██      ██    ███  ██      ██
// ██      ███████   ███     ████   ███████ ██   ███   █████   ███████
// ██      ██   ██  ███       ██         ██ ██  ███    ██           ██
// ███████ ██   ██ ███████    ██    ███████ ██ ███████ ███████ ███████
// ====================================================================================

.lazyload,
.lazyloading {
    opacity: 0;
}

.lazyloaded {
    transition: opacity 300ms;

    opacity   : 1;
}
// -----  End of LAZYSIZES  ---------------------------------------------
/* ====================================================================================

██████   █████  ██████  ████████ ███    ██ ███████ ██████
██   ██ ██   ██ ██   ██    ██    ████   ██ ██      ██   ██
██████  ███████ ██████     ██    ██ ██  ██ █████   ██████
██      ██   ██ ██   ██    ██    ██  ██ ██ ██      ██   ██
██      ██   ██ ██   ██    ██    ██   ████ ███████ ██   ██
██       ██████   ██████   ██████  ███████
██      ██    ██ ██       ██    ██ ██
██      ██    ██ ██   ███ ██    ██ ███████
██      ██    ██ ██    ██ ██    ██      ██
███████  ██████   ██████   ██████  ███████

==================================================================================== */
.partner-logo {
    max-width : 200px;
    min-height: 75px;
    max-height: 75px;
}
// -----  End of PARTNER LOGOS  ---------------------------------------------

// ====================================================================================
// ██████   █████  ███    ██ ███    ██ ███████ ██████  ███████
// ██   ██ ██   ██ ████   ██ ████   ██ ██      ██   ██ ██
// ██████  ███████ ██ ██  ██ ██ ██  ██ █████   ██████  ███████
// ██   ██ ██   ██ ██  ██ ██ ██  ██ ██ ██      ██   ██      ██
// ██████  ██   ██ ██   ████ ██   ████ ███████ ██   ██ ███████
// ====================================================================================
.banner-header {
    background-position: center center;
    background-size    : cover;

    @include breakpoint(small only) {
        .row {
            display   : block;

            min-height: 350px;
        }
    };
    @include breakpoint(medium) {
        .row {
            min-height: 500px;
        }
    };
}

.banner-logoLockup {
    background: rgba(255,255,255,.9);

    @include breakpoint(small only) {
        max-width    : 150px;
        margin-bottom: 1rem;
    };
}

.banner-mesh {
    background-repeat  : no-repeat;
    background-position: bottom left;

    @include breakpoint(small) {
        background-size: contain;
    };
    @include breakpoint(medium) {
        background-size: 75%;
    };
    @include breakpoint(large) {
        background-size: 50%;
    };
}
// -----  End of BANNERS  ---------------------------------------------

.hover-hide {
    visibility: visible;
}

.hover-hide:hover {
    visibility: hidden;
}

.hover-show {
    transition: all 0.2s ease-out;

    opacity   : 0;
}

.hover-show:hover {
    opacity: 1;
}

.hover-green {
    transition: $button-transition;

    &:hover {
        color: $green !important;
    }
}

.hover-blue {
    transition: $button-transition;

    &:hover {
        // color: $blue !important;
        transition: $button-transition;

        background: darken($blue, 20%);
    }
}
