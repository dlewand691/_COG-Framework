Object.defineProperty(exports, "__esModule", { value: true });
var SUCCINCT_IDENTITY = 'Succinct';
var succinct_id = 0;
var Succinct = (function () {
    function Succinct(value, subcribes) {
        if (value === void 0) { value = {}; }
        if (subcribes === void 0) { subcribes = []; }
        this.value = value;
        this.id = succinct_id++;
        this.subcribeMap = {};
        this.subcribes = subcribes;
    }
    Succinct.prototype.dispatch = function (func) {
        func();
        this.subcribes && this.subcribes.forEach(function (subscrib) {
            subscrib.forceUpdate();
        });
    };
    Succinct.prototype.removeSubscribe = function (ctx) {
        var cache = this.subcribeMap[ctx.id];
        this.subcribeMap[ctx.id] = null;
        this.subcribes.splice(cache.index, 1);
    };
    Succinct.prototype.get = function (key, ctx) {
        if (ctx && ctx.host) {
            ctx.addSuccinct(this);
            if (!this.subcribeMap[ctx.id]) {
                this.subcribeMap[ctx.id] = {
                    reaction: ctx,
                    index: this.subcribes.length
                };
                this.subcribes.push(ctx.host);
            }
        }
        return this.value[key];
    };
    Succinct.prototype.set = function (key, value) {
        this.value[key] = value;
    };
    Succinct.prototype.action = function (key, value) {
        this.value[key] = this.dispatch(value);
    };
    return Succinct;
}());
exports.default = Succinct;
