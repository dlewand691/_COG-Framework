import nodeResolve from 'rollup-plugin-node-resolve';
import replace from 'rollup-plugin-replace';
import uglify from 'rollup-plugin-uglify';
const rollupTypescript = require('rollup-plugin-typescript');

const ts = require('typescript');
console.log('ts :',ts);

const env = process.env.NODE_ENV
const isProd = env === 'production';
var config = {
  input:'src/index.ts',
  output: {
    file: isProd ? 'dist/succinct.min.js':'dist/succinct.js',
    format: 'umd',
    name: 'Succinct',
    sourcemap: true
  },
  plugins: [
    nodeResolve({
      jsnext: true
    }),
    rollupTypescript({
        typescript: ts
    }),
    replace({
      'process.env.NODE_ENV': JSON.stringify(env)
    })
  ]
}

if (isProd) {
  config.plugins.push(
    uglify({
      compress: {
        pure_getters: true,
        unsafe: true,
        unsafe_comps: true,
        warnings: false
      }
    })
  )
}
export default config